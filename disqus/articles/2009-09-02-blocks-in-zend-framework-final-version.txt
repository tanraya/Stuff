title: "Блоки в Zend Framework. Финальная версия."
tags:
- zend-framework
- zf-action-helper
- zf-front-controller-plugin

<body>
<p>Я продолжил свои изыскания на тему <strong>блоков в Zend Framework</strong>. Я все искал, как сделать работу с блоками на сайте максимально удобной.

До этого, я написал несколько статей, посвященных блокам:
</p>
<ul>
<li><a href="/admin-menu-or-blocks-in-zend-framework/">Меню администратора, или блоки в Zend Framework</a></li>
	<li><a href="/blocks-in-zend-framework/">Блоки в Zend Framework</a></li>
	<li><a href="/blocks-in-zend-framework-2/">Блоки в Zend Framework, версия 2</a></li>
</ul>
Но не далее, как неделю назад я придумал еще более удобный способ работы с блоками. Некоторые мои предыдущие утверждения я опроверг :)

Блоки в новой версии так же работают на основе конфига блоков. Но теперь блоки можно как включать, так и отключать в любом месте контроллера. Именно отключения блоков и не было в прошлых версиях - как мне тогда показалось, оно было излишним. Но практика показала, что это не так.

Итак, в этой версии у нас есть помощник действия (action helper) и плагин фронт-контроллера (controller plugin). При помощи помощника действия мы указываем, какие блоки нужно будет загрузить или отключить, а плагин фронт-контроллера управляет непосредственно загрузкой блоков, которая происходит сразу после диспетчеризации действия в контроллере.
~

Сначала приведу листинг конфига блоков. Например, у нас будет конфиг с двумя определенными блоками:
<div class="gist-wrapper"><script src="https://gist.github.com/1768709.js?file=gistfile1.ini"></script></div>
Дальше, давайте посмотрим на код помощника действия:
<div class="gist-wrapper"><script src="https://gist.github.com/1768712.js?file=gistfile1.php"></script></div>
Теперь взглянем, как выглядит плагин фронт-контроллера, отвечающий за загрузку блоков:
<div class="gist-wrapper"><script src="https://gist.github.com/1768715.js?file=gistfile1.php"></script></div>
В итоге в любом контроллере нашего приложения мы можем работать с блоками вот так:
<div class="gist-wrapper"><script src="https://gist.github.com/1768719.js?file=gistfile1.php"></script></div>
В макете (layout) любой блок можно вывести так, по имени блока:
<div class="gist-wrapper"><script src="https://gist.github.com/1768721.js?file=gistfile1.php"></script></div>
По комметариям в коде должно быть понятно, как нужно работать с блоками. Можно еще добавить в помощник метод <em>addAll()</em> для загрузки всех блоков, в противоположность методу <em>removeAll()</em> - но это уже на ваш вкус.

Надеюсь, вам помогла эта заметка. Буду рад комментариям.

<strong>UPDATE:</strong>
<strong>На самом деле, так, как написано в статье лучше не делать :) Я склоняюсь к другому методу - размещать блоки через именованные сегменты лайота. Только нужно придумать, как сделать это удобно. Оно быстрее работает в разы, да и вообще плохо делать диспетчеризацию несколько раз за один запрос. Просто ZF позволяет так делать, но на самом деле - это порочная практика.</strong>
</body>
