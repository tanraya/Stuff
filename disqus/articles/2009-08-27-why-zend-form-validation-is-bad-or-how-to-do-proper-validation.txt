title: "Почему валидация в Zend_Form это плохо, или о том, как делать правильную валидацию"
tags:
- zend-framework
- zend_db_table
- zend_form

<body><p>В настоящий момент <strong>Zend Framework</strong> имеет набор валидаторов, которые обычно используются для проверки входных данных из форм. Для этого используется пакет <strong>Zend_Form</strong>, отдельно же валидаторы используются достаточно редко.

Вроде бы всё хорошо, все пользуются и все довольны. Но если подумать, то в <strong>ZF</strong> валидация располагается не на том уровне, на котором хотелось бы. Я уверен, что валидация входных данных должна производиться именно в моделях и ни в коем случае не в формах, как сделано на даный момент. Почему? Остановимся на этом подробнее.
~

Представьте, что у вас есть форма для добавления поста в блог. Соответственно, есть класс, наследуемый от <strong>Zend_Form</strong>, который определяет, какие поля будут в форме, устанавливает на них валидаторы и, возможно, декораторы. В итоге мы получаем готовую форму, которую достаточно только вывести в нужное место шаблона - и можно использовать. Все будет валидироваться, и вроде бы все прекрасно.

Но представьте, что в один прекрасный момент вам понадобится написать робота, который должен будет опубликовывать посты, приходящие на указанный e-mail. То есть скрипт должен заходить на почтовый ящик через некоторые промежутки времени, получать по некоторым критериям письма, парсить их и опубликовывать в блоге. Получается, что форма тут не нужна - мы добавляем письма напрямую, минуя форму. А вдруг парсинг письма пройдет неправильно? Мы запросто можем получить пустой пост в блоге, или некорректный, если произойдут ошибки при парсинге.

Что делать? Чтобы избежать подобных ситуаций, придется добавлять валидатор и в модель, которая отвечает за добавление поста. Но получается, что теперь валидаторы будут указаны в двух разных местах - в форме и в модели. Это ужасно.

Чтобы избежать подобных противоречий, необходимо определять валидаторы только в конечной точке, отвечающей за непосредственное добавление поста в БД - конечно же в модели, и забыть про использование валидаторов в форме.

Кто-то скажет: так ведь форма не обязательно может добавлять данные в БД, она, например, может отправлять письмо на ту же почту, или делать что-то другое, не работая с БД. Зачем тогда определять валидаторы в модели?

Тут нужно понять, что модель - это не та штука, которая предназначена только для добавления данных в БД. Модель - это бизнес-логика, это то место, где происходит обработка поступивших данных. В <strong>Zend Framework</strong> мы имеем только один вид модели - <strong>Zend_Db_Table</strong>, и эта модель работает только с таблицами БД. Мы пока не имеем нечто среднее - модель, которая умеет работать и с таблицей и без ее использования. Когда мы получим такую функциональность, тогда мы сможем определять валидаторы в модели, будь это модель, добавляющая данные в таблицу БД, либо же не имеющая таблицы.

Я не знаю, есть ли какие-то подвижки в сторону "правильных моделей" у команды разработчиков <strong>ZF</strong>, но я очень надеюсь, что подобные желания у них есть. В любом случае, даже если это не так, я сам возьмусь за написание описанной мною функциональности.

Спасибо, надеюсь вам было интересно :)</p></body>
