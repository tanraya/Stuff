title: "Javascript: текущий элемент списка"
tags:
- javascript

<body>
<p>Навеяно работой. Давно хотел об этом написать.

Часто приходится видеть извращение, когда разрабы пытаются реализовать на JS поведение, что нужно выбрать один элемент из списка.

Опишу подробней в виде кода. Итак, даны стили и список:

</p>
<div class="gist-wrapper"><script src="https://gist.github.com/1768864.js?file=gistfile1.html"></script></div>

Как обычно делают разрабы:

<div class="gist-wrapper"><script src="https://gist.github.com/1768865.js?file=gistfile1.js"></script></div>

При таком подходе приходится обходить все элементы списка, что негативно сказывается на производительности, особенно, если списки огромные.

Как нужно делать:

<div class="gist-wrapper"><script src="https://gist.github.com/1768866.js?file=gistfile1.js"></script></div>

Тут мы просто запоминаем текущий элемент. Вроде бы все просто, но чаще всего, почему-то встречается первый подход. Да, кода получилось больше (хотя тут можно его уменьшить), но зато мы меньше теребим DOM.

Некий Karneds написал комментарий, как по его мнению стоит решить этот вопрос. Я было засомневался и убрал пост с главной, чтобы проверить, так ли это на самом деле. Догадка была такая, что сначала при обработке дерева DOM находятся все указанные в селекторе таги и только потом происходит поиск по атрибутам найденных тагов. Чтобы проверить мою догадку я обратился к небезызвестному <a href="http://chikuyonok.ru">Сергею Чикуёнку</a>:

<blockquote>Есть список:

<div class="gist-wrapper"><script src="https://gist.github.com/1768867.js?file=gistfile1."></script></div>


Если мы напишем обработчик (jquery):

<div class="gist-wrapper"><script src="https://gist.github.com/1768868.js?file=gistfile1.js"></script></div>

то будет ли это означать, что селектор ul li.current проверит сначала первый элемент списка (First) на наличие класса current, прежде чем совпасть со вторым элементом?</blockquote>

И вот что он ответил:

<blockquote>зависит от браузера. В новых используется встроенный querySelectorAll(), в старых (например IE) будет бегать по элементам, и в данном случае будут проверены все LI-элементы (насколько я знаю, поиск идёт справа налево, то есть сначала выберутся все LI элементы на странице, а потом отфильтруются те, которые находятся внутри UL).

То есть для старых браузеров — да, сначала проверит First (порядок элементов сохраняется)
</blockquote>

Так что, догадка подтвердилась. Это, кончно, не касается новых браузеров, которые умеют искать и по атрибутам. Хотя, если текущий элемент будет помечен не атрибутом, а свойством объекта, то всё же касается.

<em>Мораль сей басни - лучше всегда "сохранять" текущий элемент списка в отдельной переменной, а не искать его каждый раз заново.
</em>

<small><em>P.S: Для Тормоза - извиняй, специально для тебя публикую пост с новым адресом, дабы он отметился в RSS ленте.</em></small>
</body>
