<?xml version="1.0" encoding="UTF-8"?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your blog. -->
<!-- It contains information about your blog's posts, comments, and categories. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your blog. -->

<!-- To import this information into a WordPress blog follow these steps. -->
<!-- 1. Log into that blog as an administrator. -->
<!-- 2. Go to Tools: Import in the blog's admin panels (or Manage: Import in older versions of WordPress). -->
<!-- 3. Choose "WordPress" from the list. -->
<!-- 4. Upload this file using the form provided on that page. -->
<!-- 5. You will first be asked to map the authors in this export file to users -->
<!--    on the blog.  For each author, you may choose to map to an -->
<!--    existing user on the blog or to create a new user -->
<!-- 6. WordPress will then import each of the posts, comments, and categories -->
<!--    contained in this file into your blog -->

<!-- generator="WordPress/2.7" created="2012-02-08 09:52"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.0/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.0/"
>

<channel>
	<title>Neurons to bytes</title>
	<link>http://torqueo.net</link>
	<description>Всё в кучу!</description>
	<pubDate>Wed, 18 Jan 2012 04:24:36 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.7</generator>
	<language>en</language>
	<wp:wxr_version>1.0</wp:wxr_version>
	<wp:base_site_url>http://torqueo.net</wp:base_site_url>
	<wp:base_blog_url>http://torqueo.net</wp:base_blog_url>
	<wp:category><wp:category_nicename>kubuntu</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[kubuntu]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>tanraya</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[tanraya]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>xml</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[xml]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Без рубрики]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>%d0%b2%d0%b8%d1%80%d1%82%d1%83%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[виртуализация]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[программерское]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>%d1%80%d0%b0%d0%b7%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b0-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%be%d0%b2</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Разработка проектов]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>%d1%80%d1%83%d1%82%d0%b8%d0%bd%d0%b0</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[рутина]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>%d1%81%d0%b2%d0%b5%d0%b6%d0%b8%d0%b9-%d0%bd%d0%b0%d0%b2%d0%be%d0%b7</wp:category_nicename><wp:category_parent>рутина</wp:category_parent><wp:cat_name><![CDATA[свежий навоз]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>%d1%83%d1%80%d0%b1%d0%b0%d0%bd%d1%82%d1%80%d0%b8%d0%bf%d0%bf%d0%b8%d0%bd%d0%b3</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[урбантриппинг]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>javascript</wp:category_nicename><wp:category_parent>программерское</wp:category_parent><wp:cat_name><![CDATA[javascript]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>mootools</wp:category_nicename><wp:category_parent>программерское</wp:category_parent><wp:cat_name><![CDATA[mootools]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>%d0%b2%d1%91%d1%80%d1%81%d1%82%d0%ba%d0%b0</wp:category_nicename><wp:category_parent>программерское</wp:category_parent><wp:cat_name><![CDATA[вёрстка]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>%d1%80%d0%b0%d0%b4%d0%b8%d0%b0%d1%86%d0%b8%d1%8f</wp:category_nicename><wp:category_parent>урбантриппинг</wp:category_parent><wp:cat_name><![CDATA[радиация]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>ie-bugs</wp:category_nicename><wp:category_parent>вёрстка</wp:category_parent><wp:cat_name><![CDATA[IE bugs]]></wp:cat_name></wp:category>
	<wp:tag><wp:tag_slug>action-controller-helper</wp:tag_slug><wp:tag_name><![CDATA[Action Controller Helper]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>activerecord</wp:tag_slug><wp:tag_name><![CDATA[ActiveRecord]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ahci</wp:tag_slug><wp:tag_name><![CDATA[AHCI]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ajax</wp:tag_slug><wp:tag_name><![CDATA[AJAX]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>alpha-channel</wp:tag_slug><wp:tag_name><![CDATA[alpha-channel]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>antibot</wp:tag_slug><wp:tag_name><![CDATA[antibot]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>apache2</wp:tag_slug><wp:tag_name><![CDATA[apache2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>async</wp:tag_slug><wp:tag_name><![CDATA[async]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>audio</wp:tag_slug><wp:tag_name><![CDATA[audio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>blocks</wp:tag_slug><wp:tag_name><![CDATA[Blocks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>bomber</wp:tag_slug><wp:tag_name><![CDATA[bomber]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>bosh</wp:tag_slug><wp:tag_name><![CDATA[BOSH]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>bundler</wp:tag_slug><wp:tag_name><![CDATA[bundler]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>caching</wp:tag_slug><wp:tag_name><![CDATA[caching]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>calendar</wp:tag_slug><wp:tag_name><![CDATA[calendar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>canvas</wp:tag_slug><wp:tag_name><![CDATA[canvas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>compass</wp:tag_slug><wp:tag_name><![CDATA[compass]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>compression</wp:tag_slug><wp:tag_name><![CDATA[compression]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>counter_cache</wp:tag_slug><wp:tag_name><![CDATA[counter_cache]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>css-buttons</wp:tag_slug><wp:tag_name><![CDATA[css buttons]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>default-route</wp:tag_slug><wp:tag_name><![CDATA[Default Route]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>default_scope</wp:tag_slug><wp:tag_name><![CDATA[default_scope]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>designmode</wp:tag_slug><wp:tag_name><![CDATA[DesignMode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>dom</wp:tag_slug><wp:tag_name><![CDATA[dom]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ejabberd</wp:tag_slug><wp:tag_name><![CDATA[ejabberd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>event-bubbling</wp:tag_slug><wp:tag_name><![CDATA[event bubbling]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>exceptions</wp:tag_slug><wp:tag_name><![CDATA[exceptions]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>fab</wp:tag_slug><wp:tag_name><![CDATA[fab]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>flash</wp:tag_slug><wp:tag_name><![CDATA[flash]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>formrequest</wp:tag_slug><wp:tag_name><![CDATA[Form.Request]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>gem</wp:tag_slug><wp:tag_name><![CDATA[gem]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>gemfile</wp:tag_slug><wp:tag_name><![CDATA[Gemfile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[Github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>htaccess</wp:tag_slug><wp:tag_name><![CDATA[htaccess]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>html5</wp:tag_slug><wp:tag_name><![CDATA[html5]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>html5boilerplate</wp:tag_slug><wp:tag_name><![CDATA[html5boilerplate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>http</wp:tag_slug><wp:tag_name><![CDATA[http]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>i10n</wp:tag_slug><wp:tag_name><![CDATA[i10n]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>i18</wp:tag_slug><wp:tag_name><![CDATA[i18]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>i18n</wp:tag_slug><wp:tag_name><![CDATA[i18n]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>jabber</wp:tag_slug><wp:tag_name><![CDATA[jabber]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>jaxer</wp:tag_slug><wp:tag_name><![CDATA[jaxer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>jose-valim</wp:tag_slug><wp:tag_name><![CDATA[Jose Valim]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>jquery</wp:tag_slug><wp:tag_name><![CDATA[jquery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>js</wp:tag_slug><wp:tag_name><![CDATA[js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>jsan</wp:tag_slug><wp:tag_name><![CDATA[JSAN]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>json</wp:tag_slug><wp:tag_name><![CDATA[JSON]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>kubuntu</wp:tag_slug><wp:tag_name><![CDATA[kubuntu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>lamp</wp:tag_slug><wp:tag_name><![CDATA[lamp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>life</wp:tag_slug><wp:tag_name><![CDATA[life]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>lifestyle</wp:tag_slug><wp:tag_name><![CDATA[lifestyle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>locale</wp:tag_slug><wp:tag_name><![CDATA[locale]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>middleware</wp:tag_slug><wp:tag_name><![CDATA[middleware]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mime-magic</wp:tag_slug><wp:tag_name><![CDATA[mime magic]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mime-type</wp:tag_slug><wp:tag_name><![CDATA[mime-type]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mod_rewrite</wp:tag_slug><wp:tag_name><![CDATA[mod_rewrite]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mongodb</wp:tag_slug><wp:tag_name><![CDATA[MongoDB]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mootools</wp:tag_slug><wp:tag_name><![CDATA[mootools]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>multithreaded</wp:tag_slug><wp:tag_name><![CDATA[multithreaded]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>mysql</wp:tag_slug><wp:tag_name><![CDATA[mysql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>nerve</wp:tag_slug><wp:tag_name><![CDATA[nerve]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>nginx</wp:tag_slug><wp:tag_name><![CDATA[nginx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>nodejs</wp:tag_slug><wp:tag_name><![CDATA[nodejs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>noise</wp:tag_slug><wp:tag_name><![CDATA[noise]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>notedook</wp:tag_slug><wp:tag_name><![CDATA[notedook]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>partials</wp:tag_slug><wp:tag_name><![CDATA[partials]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>photoshop</wp:tag_slug><wp:tag_name><![CDATA[photoshop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>php</wp:tag_slug><wp:tag_name><![CDATA[php]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>playmo</wp:tag_slug><wp:tag_name><![CDATA[playmo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>playmo-rails</wp:tag_slug><wp:tag_name><![CDATA[playmo-rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>plugins</wp:tag_slug><wp:tag_name><![CDATA[plugins]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>png</wp:tag_slug><wp:tag_name><![CDATA[png]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>port-forwarding</wp:tag_slug><wp:tag_name><![CDATA[port-forwarding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>pretty-buttons</wp:tag_slug><wp:tag_name><![CDATA[pretty buttons]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>proxy</wp:tag_slug><wp:tag_name><![CDATA[proxy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>psi</wp:tag_slug><wp:tag_name><![CDATA[psi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>raccoon</wp:tag_slug><wp:tag_name><![CDATA[raccoon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rails</wp:tag_slug><wp:tag_name><![CDATA[rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rails-3</wp:tag_slug><wp:tag_name><![CDATA[rails 3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rails-generators</wp:tag_slug><wp:tag_name><![CDATA[rails generators]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rails-templates</wp:tag_slug><wp:tag_name><![CDATA[rails templates]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rails_best_practices</wp:tag_slug><wp:tag_name><![CDATA[rails_best_practices]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>refactoring</wp:tag_slug><wp:tag_name><![CDATA[refactoring]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rescue_from</wp:tag_slug><wp:tag_name><![CDATA[rescue_from]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rest</wp:tag_slug><wp:tag_name><![CDATA[REST]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rhino</wp:tag_slug><wp:tag_name><![CDATA[rhino]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>routing</wp:tag_slug><wp:tag_name><![CDATA[Routing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>routingerror</wp:tag_slug><wp:tag_name><![CDATA[RoutingError]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ruby-on-rails</wp:tag_slug><wp:tag_name><![CDATA[Ruby on Rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>rubyshow</wp:tag_slug><wp:tag_name><![CDATA[rubyshow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>runtime</wp:tag_slug><wp:tag_name><![CDATA[runtime]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>sata</wp:tag_slug><wp:tag_name><![CDATA[SATA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>silverlight</wp:tag_slug><wp:tag_name><![CDATA[silverlight]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>sinatra</wp:tag_slug><wp:tag_name><![CDATA[sinatra]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>sphinx</wp:tag_slug><wp:tag_name><![CDATA[sphinx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ssh</wp:tag_slug><wp:tag_name><![CDATA[ssh]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ssi</wp:tag_slug><wp:tag_name><![CDATA[SSI]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>state_machine</wp:tag_slug><wp:tag_name><![CDATA[state_machine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>svg</wp:tag_slug><wp:tag_name><![CDATA[SVG]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>tableless</wp:tag_slug><wp:tag_name><![CDATA[Tableless]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>tabs</wp:tag_slug><wp:tag_name><![CDATA[tabs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>therubyracer</wp:tag_slug><wp:tag_name><![CDATA[therubyracer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>thor</wp:tag_slug><wp:tag_name><![CDATA[thor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>thumbnail</wp:tag_slug><wp:tag_name><![CDATA[thumbnail]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>tomas-weidner</wp:tag_slug><wp:tag_name><![CDATA[Tomas Weidner]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>twitter</wp:tag_slug><wp:tag_name><![CDATA[twitter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ubuntu</wp:tag_slug><wp:tag_name><![CDATA[ubuntu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ubuntu-1004</wp:tag_slug><wp:tag_name><![CDATA[Ubuntu 10.04]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>ui</wp:tag_slug><wp:tag_name><![CDATA[UI]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>unscoped</wp:tag_slug><wp:tag_name><![CDATA[unscoped]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>utc</wp:tag_slug><wp:tag_name><![CDATA[UTC]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>v8</wp:tag_slug><wp:tag_name><![CDATA[v8]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>viewport-size</wp:tag_slug><wp:tag_name><![CDATA[viewport size]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>virtualbox</wp:tag_slug><wp:tag_name><![CDATA[virtualbox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>web-server</wp:tag_slug><wp:tag_name><![CDATA[web server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>web20-buttons</wp:tag_slug><wp:tag_name><![CDATA[web2.0 buttons]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>websocket</wp:tag_slug><wp:tag_name><![CDATA[websocket]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>websocket-server</wp:tag_slug><wp:tag_name><![CDATA[websocket-server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>windows-xp</wp:tag_slug><wp:tag_name><![CDATA[windows XP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>wordpress</wp:tag_slug><wp:tag_name><![CDATA[wordpress]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>wysiwyg</wp:tag_slug><wp:tag_name><![CDATA[wysiwyg]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>wysiwym</wp:tag_slug><wp:tag_name><![CDATA[WYSIWYM]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>xmpp</wp:tag_slug><wp:tag_name><![CDATA[xmpp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zend-framework</wp:tag_slug><wp:tag_name><![CDATA[zend framework]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zend_db</wp:tag_slug><wp:tag_name><![CDATA[Zend_Db]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zend_db_table</wp:tag_slug><wp:tag_name><![CDATA[Zend_Db_Table]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zend_form</wp:tag_slug><wp:tag_name><![CDATA[Zend_Form]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zend_locale</wp:tag_slug><wp:tag_name><![CDATA[Zend_Locale]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zend_translate</wp:tag_slug><wp:tag_name><![CDATA[Zend_Translate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zf</wp:tag_slug><wp:tag_name><![CDATA[ZF]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zf-action-helper</wp:tag_slug><wp:tag_name><![CDATA[zf action helper]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zf-front-controller-plugin</wp:tag_slug><wp:tag_name><![CDATA[zf front controller plugin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zf-layout</wp:tag_slug><wp:tag_name><![CDATA[zf layout]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zf-view</wp:tag_slug><wp:tag_name><![CDATA[zf view]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>zf-view-helpers</wp:tag_slug><wp:tag_name><![CDATA[zf view helpers]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b0%d0%bb%d1%8c%d1%84%d0%b0-%d0%ba%d0%b0%d0%bd%d0%b0%d0%bb</wp:tag_slug><wp:tag_name><![CDATA[альфа-канал]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b0%d1%80%d1%85%d0%b8%d1%82%d0%b5%d0%ba%d1%82%d1%83%d1%80%d0%b0-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%b0</wp:tag_slug><wp:tag_name><![CDATA[архитектура проекта]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b1%d0%b8%d0%b7%d0%bd%d0%b5%d1%81</wp:tag_slug><wp:tag_name><![CDATA[бизнес]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b1%d0%bb%d0%be%d0%ba%d0%b8-%d0%b2-zf</wp:tag_slug><wp:tag_name><![CDATA[Блоки в ZF]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b2%d0%b0%d0%bb%d0%b8%d0%b4%d0%b0%d1%82%d0%be%d1%80%d1%8b</wp:tag_slug><wp:tag_name><![CDATA[Валидаторы]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b2%d1%91%d1%80%d1%81%d1%82%d0%ba%d0%b0</wp:tag_slug><wp:tag_name><![CDATA[вёрстка]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b2%d0%b8%d1%80%d1%82%d1%83%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f</wp:tag_slug><wp:tag_name><![CDATA[виртуализация]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b4%d0%b5%d0%bd%d1%8c%d0%b3%d0%b8</wp:tag_slug><wp:tag_name><![CDATA[деньги]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b4%d0%be%d0%b1%d0%b0%d0%b2%d0%b8%d1%82%d1%8c-%d0%bc%d0%b5%d1%82%d0%ba%d1%83</wp:tag_slug><wp:tag_name><![CDATA[Добавить метку]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b6%d0%b8%d0%b7%d0%bd%d0%b5%d0%bd%d0%bd%d0%be%d0%b5</wp:tag_slug><wp:tag_name><![CDATA[Жизненное]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b7%d0%b0%d0%ba%d0%b0%d0%b7%d1%87%d0%b8%d0%ba</wp:tag_slug><wp:tag_name><![CDATA[заказчик]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%bd%d0%b5%d1%82-%d0%bc%d0%b0%d0%b3%d0%b0%d0%b7%d0%b8%d0%bd</wp:tag_slug><wp:tag_name><![CDATA[интернет-магазин]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%bd%d0%b5%d1%82-%d1%82%d0%be%d1%80%d0%b3%d0%be%d0%b2%d0%bb%d1%8f</wp:tag_slug><wp:tag_name><![CDATA[интернет-торговля]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%ba%d0%b0%d1%82%d0%b5%d0%b3%d0%be%d1%80%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f</wp:tag_slug><wp:tag_name><![CDATA[категоризация]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d1%8c</wp:tag_slug><wp:tag_name><![CDATA[Модель]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%bc%d1%83%d0%b4%d0%b0%d0%ba%d0%b8</wp:tag_slug><wp:tag_name><![CDATA[Мудаки]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%be%d1%80%d1%82%d0%be%d0%b3%d0%be%d0%bd%d0%b0%d0%bb%d1%8c%d0%bd%d0%be%d1%81%d1%82%d1%8c</wp:tag_slug><wp:tag_name><![CDATA[ортогональность]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5</wp:tag_slug><wp:tag_name><![CDATA[проектирование]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d1%80%d0%b0%d0%b7%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b0</wp:tag_slug><wp:tag_name><![CDATA[разработка]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d1%80%d0%b5%d1%81%d0%b0%d0%b9%d0%b7-%d0%b8%d0%b7%d0%be%d0%b1%d1%80%d0%b0%d0%b6%d0%b5%d0%bd%d0%b8%d0%b9</wp:tag_slug><wp:tag_name><![CDATA[ресайз изображений]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d1%81%d0%be%d1%80%d1%82%d0%b8%d1%80%d0%be%d0%b2%d0%ba%d0%b0</wp:tag_slug><wp:tag_name><![CDATA[сортировка]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d1%82%d0%b0%d0%b3%d0%b8</wp:tag_slug><wp:tag_name><![CDATA[таги]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d1%85%d0%b0%d0%b1%d1%80</wp:tag_slug><wp:tag_name><![CDATA[Хабр]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_slug>%d1%8d%d1%84%d1%84%d0%b5%d0%ba%d1%82%d0%b8%d0%b2%d0%bd%d0%be%d1%81%d1%82%d1%8c</wp:tag_slug><wp:tag_name><![CDATA[эффективность]]></wp:tag_name></wp:tag>
		<item>
<title>Здарова чувак</title>
<link>http://torqueo.net/?page_id=60</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?page_id=60</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>60</wp:post_id>
<wp:post_date>2008-12-13 17:51:14</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1232993685</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>dsdsds</title>
<link>http://torqueo.net/?page_id=148</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?page_id=148</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>148</wp:post_id>
<wp:post_date>2009-06-19 12:58:33</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1245398313</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Автозагрузка в Zend Framework всего и вся. Как сделать автозагрузку плагинов, хелперов, моделей, контроллеров и других классов.</title>
<link>http://torqueo.net/?p=248</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=248</guid>
<description></description>
<content:encoded><![CDATA[Нужно разобраццо с Zend_Application_Module_Autoloader - походу как то хитро можно грузить все необходимое из модулей.

<h3>Что такое автозагрузка и для чего она нужна</h3>

Автозагрузка - это процесс подключения файла к скрипту при инстанцировании какого-либо класса. Путь к файлу содержащему класс определяется по имени класса. Например, если у нас есть класс Zend_Controller_Action, то автозагрузчик будет искать по пути Zend/Controller/Action.php. При этом, автозагрузчик ищет этот путь используя в качестве отправной точки поиска все папки, зарегистрированные в include_path.

Узнать, какие папки зарегистрированы на данный момент, можно, воспользовавшись функцией get_include_path().

Автозагрузка нужна для того, чтобы вы каждый раз не подключали файл, содержащий нужный вам класс при помощи include_once() - ведь это долго и муторно. К тому же, при использовании автозагрузки уменьшается код, так отпадает надобность в include_once().

<h3>Что такое автозагрузчик?</h3>

Автозагрузчик - это функция, которая вызывается всякий раз, когда вы инстанцируете какой-либо класс. В эту функцию передается имя инстанцируемого класса. Потом, по имени класса функция определяет путь к файлу класса и пытается подключить его.

<div class="lyric">
В ZF, по-умолчанию, если требуемый файл не будет найдет, функция выдаст исключение. Но это поведение можно изменить при помощи вызова Zend_Loader_Autoloader::suppressNotFoundWarnings(true). Теперь, если файл не будет найден - автозагрузчик "промолчит".
</div>

<h3>Неймспейсы  - пространства имен автозагрузчика</h3>

Зачем нужны неймспейсы? Предназначение нейспейсов - в повышении производительности при поиске файлов в include_path.

<h3>Автозагрузка хелперов вида</h3>
<h3>Автозагрузка плагинов фронт-контроллера</h3>
<h3>Автозагрузка моделей</h3>
<h3>Автозагрузка контроллеров</h3>
<h3>Автозагрузка форм (основанных на Zend_Form)</h3>
<h3>Автозагрузка других классов</h3>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>248</wp:post_id>
<wp:post_date>2009-09-03 14:46:41</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1251971201</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Использование Zend_Form без декораторов (нужно исправить)</title>
<link>http://torqueo.net/?p=278</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=278</guid>
<description></description>
<content:encoded><![CDATA[Нужно добавить пример унаследованного класса формы, и как он вставляется в html]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>278</wp:post_id>
<wp:post_date>2009-09-29 21:37:36</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1254242256</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Tanraya CSS Framework</title>
<link>http://torqueo.net/?p=336</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=336</guid>
<description></description>
<content:encoded><![CDATA[Здесь нужно сделать заметку о Tanraya CSS Framework]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>336</wp:post_id>
<wp:post_date>2009-11-30 20:24:26</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tanraya-css-framework</wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259594666</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Перевести статьи</title>
<link>http://torqueo.net/?p=409</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=409</guid>
<description></description>
<content:encoded><![CDATA[http://simonwillison.net/2009/Nov/23/node/
http://howtonode.org/

Вот весьма полезная либа: http://github.com/danwrong/restler]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>409</wp:post_id>
<wp:post_date>2010-02-20 01:39:34</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1266693074</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Node.js действительно превосходен!</title>
<link>http://torqueo.net/?p=412</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=412</guid>
<description></description>
<content:encoded><![CDATA[Я выступил с докладом в пятницу на однодневной  JavaScript-конференции <a href="http://2009.full-frontal.org/">Full Frontal</a>, в моем родном городе Брайтоне. В конце концов я предпочел мою тему (о JSONP, API и кросс-доменной безопасности) в пользу той технологии, которая попала в моё поле зрения <a href="http://simonwillison.net/2009/Nov/9/node/">менее, чем две недели назад</a>.

Эта технология - <a href="http://nodejs.org">Node</a> от Ryan Dahl. Это самый захватывающий новый проект, который я встречал за довольно продолжительный срок.

На первый взгляд, Node выглядит как ещё одна попытка реализации серверного джаваскрипта, но оказывается, это довльно интересная попытка. Node опирается на отличную поддержку событийно-ориентированного программирования и использует его для того, чтобы показать действительно сильные стороны языка.

Node описывает себя как "событийно-ориентированный ввод-вывод в JavaScript, с использованием V8". Это пакет для создания чрезвычайно высокопроизводительных, неблокирующих, событийно-ориентированных сетевых серверов в JavaScript. Он близок к <a href="http://twistedmatrix.com/">Twisted</a> или <a href="http://rubyeventmachine.com/">EventMachine</a>, но для JavaScript, вместо Python и Ruby.

Событийно-ориентированный ввод-вывод

Как я рассказал в своём докладе, событийно-ориентированные сервера - мощная замена механизму threading/blockingб используемому в большинстве популярных серверных фреймворков. Обычные фреймворки могут держать только небольшое количество запросов, которое зависит от количества нитей (threads) или процессов веб-сервера. <strong>Длительные операции (долговременные соединения) могут связать одну из этих тем - большое количество длительных операций на раз и работает сервер из доступных тем и перестает отвечать на запросы.</strong> При больших объемах трафика, каждый запрос должен обрабатываться как можно быстрее, чтобы освободить нить (thread) для работы со следующим запросом в очереди. 
Это делает реализацию некоторой функциональности довольно трудоёмкой. <strong>Examples include handling large file uploads, combining resources from multiple backend web APIs (which themselves can take an unpredictable amount of time to respond) or providing comet functionality by holding open the connection until a new event becomes available.</strong>

http://simonwillison.net/2009/Nov/23/node/

]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>412</wp:post_id>
<wp:post_date>2010-02-21 00:53:19</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1266695600</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Перевод</title>
<link>http://torqueo.net/?p=441</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=441</guid>
<description></description>
<content:encoded><![CDATA[перевести: http://www.igvita.com/2010/03/22/untangling-evented-code-with-ruby-fibers/?utm_source=feedburner&utm_campaign=Feed%3A+igvita+%28igvita.com%29&utm_content=feed]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>441</wp:post_id>
<wp:post_date>2010-03-24 15:06:13</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1269425173</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Установка mod_passenger (aka mod_rails) под Apache2 и запуск приложения</title>
<link>http://torqueo.net/?p=469</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=469</guid>
<description></description>
<content:encoded><![CDATA[Интернет пестрит блогпостами наподобие "Разрабатываем приложение под Ruby On Rails". И вроде все просто - установил рельсу, сгенерил приложение, запустил сервер - и вперёд! Я задумался, а как же разрабатывать http-приложения без использования ROR и других фреймворков, таких как merb или sinatra?

<span style="color: #ff0000;">[тут надо как-то связать верхний и нижний абзацы]</span>

Очевидно, что в современном мире использовать приложения через CGI - это бред. CGI - это универсальный интерфейс. При помощи него, веб-сервер может взаимодействовать с программой, написанной на любом языке. Например, в Perl нет встроенной в язык поддержки CGI - для этого там используются специальные модули, а в PHP она есть - данные от веб-сервера хранятся в таких переменных, как $_SERVER, $_GET, $_POST. Веб-сервер взаймодействует с CGI-шлюзом (скриптом) через STDIN и STDOUT скрипта.

Но у CGI программ есть недостатки, о которых все знают: программа каждый раз читается с диска, интерпретируется, к тому же, на каждый запрос к программе веб-сервер создает новый дочерний процесс - все это негативно сказывается на ресурсах.

http://ruby-doc.ru/post/44

Чтобы устранить некоторые недостатки, придумали FastCGI. При использовании FastCGI однажды загруженная программа уже не выгружалась при закрытии соединения клиента с веб-сервером, поэтому, скорость работы скриптов заметно возрасла, но появилась опасность утечек памяти, если программист не утруждал себя уничтожением соединений к БД и переменных в написанном им скрипте. Чтобы бороться с таким замусориванием памяти, раз уж приходится использовать кривые программы , приходится перезапускать веб-сервер, дабы память очистилась.

Еще одно преимущество FastCGI перед CGI в том, что при использовании этого интерфейса веб-сервер общается с программой через сокеты, поэтому, можно запустить несколько FastCGI-процессов (воркеров). Это хоть и сожрет больше памяти(<span style="color: #ff0000;">?</span>) - зато обработка запросов будет происходить быстрее. Для использования FastCGI в скриптах нужна его поддержка в языке, на котором написан скрипт.

<span style="color: #ff0000;">[Тут еще написать про SCGI]</span>
<h3>Middleware</h3>
<ul>
	<li>PSGI (Perl)</li>
	<li>WSGI (Python)</li>
	<li>JSGI (Serverside JS)</li>
	<li>Rack (Ruby)</li>
</ul>
<span style="color: #ff0000;">[Тут написать про middleware - что это, зачем нужно, почему вместо него не использовать FastCGI, почему для каждого языка нет единого интерфейса (потому что разные языки :) )]</span>

<span style="color: #ff0000;">[Ниже - чисто всякий бред пока]</span>

Вот так можно создать http-сервер, используя gem WEBrick:
<pre>#!/usr/bin/env ruby
require 'webrick'
include WEBrick

# Create server
server = HTTPServer.new(
  :Port         =&gt; 8000,
  :DocumentRoot =&gt; "/home/demerest/sandbox/rubydev/public"
)
# When the server gets a control-C, kill it
trap("INT"){ server.shutdown }

# Start the server
server.start</pre>
И запустить как демона:
<pre>ruby server.rb&amp;

А вот так можно создать сокет-сервер: <a href="http://vision-media.ca/resources/ruby/creating-a-ruby-socket-server">http://vision-media.ca/resources/ruby/creating-a-ruby-socket-server</a>
А так - сервер, основанный на EventMachine: <a href="http://www.rubyinside.com/create-a-daemon-server-in-11-lines-of-ruby-58.html">http://www.rubyinside.com/create-a-daemon-server-in-11-lines-of-ruby-58.html</a></pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>469</wp:post_id>
<wp:post_date>2010-08-05 18:54:07</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>installing-mod_passenger-aka-mod_rails-under-apache2-and-app-launch</wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1281016869</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Правдивая история</title>
<link>http://torqueo.net/?p=511</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=511</guid>
<description></description>
<content:encoded><![CDATA[Ну што пацаны, братва, оставляем сыкух на лавке, а сами берем пивасик и семки и двигаем в падик, если кто хочет поинтересоваться, как пацики замутили связи в Рельсах.

- Макс, дай сигу, раскури тока.
- Держи.
- Благодарю. Вот, братва, мой кореш Корявый, прошу любить и жаловать. Дайте пацику грева босяцкого, пивка, семак - кто чё может. Он щас расскажет про фартовую тему, с этого можно нормально поднять. Жги, Корявый.
- Здарова пацаны. Присаживайтесь на корты и слушайте. Есть такая хуйня как ActiveRecord, она позваляет наладить заебцовые контакты вашей аппликухи с базой, где все малявы от пацанов хранятся. Или можно еще так понять, Вот если у тя есть записная книжка, а там телефончики давалочек знакомых. То это тоже связь. Вот, пожалуй с нее и начнем.

Вот прикинь, у тебя есть записная книжка, где записаны номера всех твоих телочек, которых ты трёшь. Это по-любому значит, что это все твои телки. Так вот, братуха, это будет первая связь - has_many. Это означает, что ты имеешь много телок. Тут можно прикинуть так: твоя записуха это твои связи с твоими телочками, и тут стопудова вырисовывается связь "один ко многим", что и означает, что ты один имеешь много телок, Это и будет связь has_many.
Давай перекурим, я вам, пацики, еще пару приколюх расскажу, будете реально пиздатыми пацанами, любого ботана вотрёте если чё.

У тёлок, которых ты трешь, тоже есть связь с тобой. Не, ты брось, ты не подумай что это она тебя трет - всегда трешь ты. Просто тёлочка принадлежит тебе. Она как бы говорит: я тёлка Жеки Лысого - если че он тебе насует за всю хуйню. Это тоже связь, пацаны, она называется belongs_to, что значит что телочка пиннадлежит тебе, а другие пацики всасывают. Но бывает такая хуйня, что телочка можеть тереться с пациком с дугого района, или даже с несколькими пациками, пока ты ходишь на делюгу и вообще не в курсах. В этом случае у телки может быть несколько связей belongs_to, это значит, что она еще не определилась. Наваляй ей за это.

Есть еще такая фишка, когда ты трешь только одну шалаву. Нормальному пацану это не в кайф, так только панки всякие ебаные делают. Но блять, что есть, то есть. Всякая хуйня на свете бывает. Это тоже связь, называется has_one, то есть ты можешь тереть только одну телочку. Ну и у телочки тоже будет к тебе связь - belongs_to, что значит, что она тоже зажигает с тобой. Но она может зажигать и с другими панками, панками, так же как с ровными пациками. Тогда у телки будет больше связей.

Еще, короче, есть такая канитель: habtm.

]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>511</wp:post_id>
<wp:post_date>2010-08-23 02:43:01</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>truly-story</wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1282513381</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>http://www.modrails.com/documentation/Architectural%20overview.html#_passenger_architecture</title>
<link>http://torqueo.net/?p=565</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=565</guid>
<description></description>
<content:encoded><![CDATA[http://www.modrails.com/documentation/Architectural%20overview.html#_passenger_architecture
http://www.wisegeek.com/what-is-an-application-server.htm
http://abrdev.com/?p=431]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>565</wp:post_id>
<wp:post_date>2010-10-21 17:27:02</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1287665766</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title></title>
<link>http://torqueo.net/?p=592</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=592</guid>
<description></description>
<content:encoded><![CDATA[Сделать раздел "Полезное"
http://rails-nutshell.labs.oreilly.com/
http://static.shopify.com/s/files/1/0042/9602/files/website-stencil-template-letter.pdf?1264203576]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>592</wp:post_id>
<wp:post_date>2010-11-05 10:07:03</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1288933744</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Mountable engines in Rails 3.1 beta: getting started</title>
<link>http://torqueo.net/?p=631</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=631</guid>
<description></description>
<content:encoded><![CDATA[http://www.builtfromsource.com/2010/12/13/mountable-engines-in-rails-3-1-beta-getting-started/
http://piotrsarnacki.com/2010/09/14/mountable-engines/
http://www.mikeperham.com/2009/04/18/engines-in-rails-23/
http://edgeapi.rubyonrails.org/classes/Rails/Engine.html
http://www.themodestrubyist.com/2010/03/05/rails-3-plugins---part-2---writing-an-engine/
http://asciicasts.com/episodes/149-rails-engines]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>631</wp:post_id>
<wp:post_date>2011-01-25 17:56:14</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1295965251</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Хранение дат в UTC и форматирование их на клиенте</title>
<link>http://torqueo.net/?p=716</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=716</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>716</wp:post_id>
<wp:post_date>2011-06-17 15:58:14</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1308308294</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Статья про картинки в рельсе, загрузка и работа с картинками</title>
<link>http://torqueo.net/?p=759</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=759</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>759</wp:post_id>
<wp:post_date>2011-07-05 16:34:38</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1309865678</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Про паттерны</title>
<link>http://torqueo.net/?p=761</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=761</guid>
<description></description>
<content:encoded><![CDATA[Можно сделать перевод статьи и публиковать по кускам. А так же дополнить примерами кода.

http://www.cours.polymtl.ca/inf3700/divers/nonSoftwareExample/patexamples.html]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>761</wp:post_id>
<wp:post_date>2011-09-28 20:01:31</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1317222538</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Паттерн Observer</title>
<link>http://torqueo.net/?p=762</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=762</guid>
<description></description>
<content:encoded><![CDATA[Паттерн Observer определяет отношение один-ко-многим так, что когда один объект меняет своё состояние, другие объекты уведомляются об этом и автоматически обновляются.

Аукцион хорошо продемонстрирует этот паттерн. Каждый участник имеет пронумерованную табличку, которая используется для обозначения ставки. Аукционист начинает торги и наблюдает (observe), когда табличка поднимается, чтобы принять ставку. Когда принимается ставка, то меняется цена, с которой нужно начинать новую ставку, и об этом уведомляются все участники торгов.

Ruby имеет реализацию Observer в своей стандартной библиотеке.

# encoding: utf-8
require "observer"

# Аукцион
class Auction
  def initialize(start_bid, thing)
    @@current_bid = start_bid
    @@thing       = thing # 'Picasso Painting'
  end
end

# Аукционист
class Auctioneer
  include Observable

  def initialize(auction)
    # Cтартовая ставка
    #@current_bid = start_bid
  end

  # Начинаем торги
  def run
    # Аукционист постоянно повышает ставку
    # TODO: Должен спрашивать: Кто больше?
    loop do
      # Уведомляем участников торгов о текущей ставке
      changed
      notify_observers(@auction, false)

      # Изменяем текущую ставку
      @auction.current_bid += 1
      #@current_bid += 1

      if count_observers == 1
        puts "#{self.class}: Продано за #{@current_bid}!"
        notify_observers(@auction, false)
        break
      end
    end
  end
end

# Участники торгов (Observers)
# TODO: Нужно научиться принимать ставки (их принимают участники)
class Paul
  def initialize(auctioneer)
    # У Павла есть 800 рублей
    @have_money = 800

    @auctioneer = auctioneer
    @auctioneer.add_observer(self)
  end

  def update(current_bid)
    if current_bid >= @have_money
      puts "#{self.class}: Упс! У меня только #{@have_money}, я не могу дальше участвовать в торгах. "

      # Уходим с торгов
      @auctioneer.delete_observer(self)
    end
  end
end

class Helena
  def initialize(auctioneer)
    # У Елены есть 1000 рублей
    @have_money = 1000

    @auctioneer = auctioneer
    @auctioneer.add_observer(self)
  end

  def update(current_bid)
    if current_bid >= @have_money
      puts "#{self.class}: Упс! У меня только #{@have_money}, я не могу дальше участвовать в торгах. "

      # Уходим с торгов
      @auctioneer.delete_observer(self)
    end
  end
end

class Andrew
  def initialize(auctioneer)
    # У Андрея завалялось 10 лямов
    @have_money = 10000000

    @auctioneer = auctioneer
    @auctioneer.add_observer(self)
  end

  def update(current_bid)
    if current_bid >= @have_money
      puts "#{self.class}: Упс! У меня только #{@have_money}, я не могу дальше участвовать в торгах. "

      # Уходим с торгов
      @auctioneer.delete_observer(self)
    end
  end
end

auctioneer = Auctioneer.new(100)
Paul.new(auctioneer)
Helena.new(auctioneer)
Andrew.new(auctioneer)
auctioneer.run]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>762</wp:post_id>
<wp:post_date>2011-09-28 21:33:27</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1317280001</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>HTML5 tabs: new look</title>
<link>http://torqueo.net/?p=771</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=771</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>771</wp:post_id>
<wp:post_date>2011-09-29 16:22:57</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1317295377</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>HTML5 tabs: взгляд по-новому</title>
<link>http://torqueo.net/?p=772</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=772</guid>
<description></description>
<content:encoded><![CDATA[
-----------------------------------------------------------------------------------------------------------

1. Добавить css3 и сделать их более красивыми.
2. Показать, как они выглядят при отключенных стилях.
3. Использовать их только как content-tabs
4. Сделать версию для menu-tabs с тегом nav (?)
6. Рассказать про их различия

http://www.reddit.com/r/web_design/comments/fjepr/html5_tabs/
http://css-tricks.com/13758-functional-css-tabs-revisited/]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>772</wp:post_id>
<wp:post_date>2011-09-29 16:36:00</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1317296280</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Доступ к моделям в контексте других моделей</title>
<link>http://torqueo.net/?p=775</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=775</guid>
<description></description>
<content:encoded><![CDATA[http://rails-bestpractices.com/posts/3-use-scope-access

Это позволяет избежать проверки на принадлежность объекта текущему пользователю.

--- Нужно посмотреть на метод :as в rails 3.1, каким боком он тут подойдет

http://www.rollcallapp.com/blog/2011/10/03/adding-multi-tenancy-to-your-rails-app-acts-as-tenant
http://www.enlightsolutions.com/articles/whats-new-in-edge-scoped-mass-assignment-in-rails-3-1/

Заголовок может быть и не очень отражает суть поста, но мне было трудно подобрать русскоязычный синоним к слову scope по отношению к моделям, а вот коверкать язык не очень хотелось.

Представим, что мы пишем приложение для учета задач и у нас есть следующие модели:

class User
  
end

class Project

end

Когда мы хотим отобразить проект на странице, то в контроллере мы напишем

@project = Project.find(params[:id])

и ограничим доступ к этому экшену при помощи, например, CanCan, чтобы другие не смогли увидеть ваш проект. Однако, если вдруг вы забудете ограничить видимость экшена для других пользователей, забыв разграничить права доступа, либо допустите ошибку при разграничении прав (и не тестируя это дело rspec'ом), то кто-нибудь сможет увидеть этот проект. Опытные рубисты скажут, что можно сделать по-другому, а именно - привязать проект к пользователю при помощи ассоциаций и искать проект через модель пользователя:

class User
  has_many :projects
end

class Project
  belongs_to :user
end

# Ищем проект
# current_user - это хелпер, который нам предоставляет Devise, которым вы, конечно, пользуетесь :)
@project = current_user.projects.find(params[:id])

Теперь, если даже наша проверка доступа отвалится, то все равно никто, кроме того, кому принадлежит проект не сможет его увидеть. При таком обращении ActiveRecord добавляет выражение WHERE "projects"."user_id" = 777 в SQL-запрос, ограничивая этим видимость. Если даже кто-то попытается его посмотреть, то он увидит только исключение ActiveRecord::RecordNotFound.

Теперь представим, что Проект может содержать Задачи:

class Project
  has_many :tasks
end

class Task
  belongs_to :project
end

Как будет выглядеть метод show в контроллере TasksController в этом случае? Примерно так:

before_filter do
  @project = current_user.projects.find(params[:project_id])
end

def show
  @task = @project.tasks.find(params[:id])
end

Это опять же поможет нам получить только те Задачи, которые принадлежат Проекту, который принадлежит конкретному Пользователю и тем самым, избежать проблем с безопасностью.

Как насчет количества запросов? Оно не изменится, оно будет таким же, как если бы вы находили каждую модель вне контекста другой модели. Добавляются лишь условия, поэтому, нужно обращать пристальное внимание на индексы таблицы, так как вы теперь ищете не по первичному ключу, а по нескольким полям сразу:

User Load (0.1ms)  SELECT "users".* FROM "users" WHERE "users"."id" = 777 LIMIT 1
Project Load (0.1ms)  SELECT "projects".* FROM "projects" WHERE "projects"."user_id" = 777 AND "projects"."id" = 1 LIMIT 1
Task Load (0.1ms)  SELECT "tasks".* FROM "tasks" WHERE "tasks"."project_id" = 777 AND "tasks"."id" = 1 LIMIT 1

Хотя искать модели через контекст других моделей вещь архиполезная и архиважная, но это несколько неудобно для изнеженных рубистов-рельсовиков, так как приходится писать лишний код. Но нам повезло - появился очень приятный gem <a href="https://github.com/ErwinM/acts_as_tenant">acts_as_tenant</a>, который нам поможет в том, что мы хотим сделать.

Для начала добавим в Gemfile gem "acts_as_tenant" и сделаем bundle install. Дальше нам нужно найти наш корневой контекст, через который мы будем обращаться ко всем другим моделям. В нашем случае это модель User, однако, она может быть и какая угодно другая, их даже может быть несколько. Чтобы указать корневой контекст сделаем следующее:

class ApplicationController < ActionController::Base
  # Передаем текущего пользователя (хелпер current_user определяет Devise в моем случае, но понятно, что
  # в этот метод нужно передать инстанс модели текущего пользователя).
  set_current_tenant_to(current_user)
end

Так как мы назначили основным контекстом (хоть и tenant переводится по-другому) модель User, точнее её инстанс, то нам нужно добавить во модели объектов, которые как-либо относятся к User, поле user_id.

- Что это нам даст?
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>775</wp:post_id>
<wp:post_date>2011-10-04 21:07:30</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1328101111</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Проекты</title>
<link>http://torqueo.net/?page_id=3</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://play.imaker.ru/?page_id=3</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>3</wp:post_id>
<wp:post_date>2008-11-29 01:27:33</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1240918755</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>tan</title>
<link>http://torqueo.net/?page_id=88</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?page_id=88</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>88</wp:post_id>
<wp:post_date>2009-04-28 16:41:25</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1240918886</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Делаем многоязычный проект на Zend Framework</title>
<link>http://torqueo.net/?p=268</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=268</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>268</wp:post_id>
<wp:post_date>2009-09-09 23:52:01</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252522321</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Склеивание XML файлов. Делаем меню.</title>
<link>http://torqueo.net/?p=269</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=269</guid>
<description></description>
<content:encoded><![CDATA[http://www2.informatik.hu-berlin.de/~obecker/XSLT/#merge]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>269</wp:post_id>
<wp:post_date>2009-09-10 09:36:08</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252557429</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Как работать с поддоменами в Zend Framework</title>
<link>http://torqueo.net/?p=270</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=270</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>270</wp:post_id>
<wp:post_date>2009-09-09 23:56:36</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252522596</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Tanraya CSS Framework</title>
<link>http://torqueo.net/?page_id=338</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?page_id=338</guid>
<description></description>
<content:encoded><![CDATA[<h3>Что такое Tanraya CSS Framework и зачем он нужен</h3>
Tanraya CSS Framework - это набор css-стилей, который, прежде всего, минимизирует различия версти в различных браузерах. В результате, вы получаете страницу, которая будет максимально одинаково отображаться во всех браузерах.

Как известно, различные браузеры определяют различные стили по-умолчанию для элементов, находящихся на странице. Различия заключаются в размерах отступов, границ, а так же в размерах шрифтов.  Этот CSS фреймворк задает собственные значения отступов, границ и других свойств элементов, что позволяет добиться максимальной схожести страниц в разных браузерах. Так же фреймвор определяет некоторые собственные CSS-стили, но их совсем немного.

Одна из главных задач этого фреймворка заключается в том, чтобы определить некоторую структуру расположения стилей, чтобы в дальнейшем их можно было легко добавлять или модифицировать. Благодаря удобной структуре всегда будет понятно, где какие стили находятся.
<h3>Структура фреймворка</h3>
Фреймворк состоит из нескольких css-файлов, вот они:
<ul>
	<li>default.css</li>
	<li>content.css</li>
</ul>
А так же эти файлы со стилями, в которых будут располагаться кастомные стили:
<ul>
	<li>layout.css</li>
	<li>screen.css</li>
	<li>wysiwyg.css</li>
	<li>print.css</li>
</ul>
<h3>Как начать работу с фреймворком?</h3>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>338</wp:post_id>
<wp:post_date>2009-11-30 20:43:58</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259596559</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Сделать интервью с softwaremaniacs</title>
<link>http://torqueo.net/?p=483</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=483</guid>
<description></description>
<content:encoded><![CDATA[Вопросы:
- Как разработчики определяют время, необходимое им на разработку продукта?
- Какие практики вы используете TDD, Agile и пр.
- Тесты - обязательны?
- Проводится ли код-ревью? Что происходит если написанный кем-то код кривой? Есть ли санкции на чела если он написал кривой код?

и пр...]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>483</wp:post_id>
<wp:post_date>2010-08-05 00:46:18</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1280951178</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Знания</title>
<link>http://torqueo.net/?p=484</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=484</guid>
<description></description>
<content:encoded><![CDATA[Чтобы связать apache2 c php, нужно установить пакет: sudo aptitude install libapache-mod-php5

http://packages.ubuntu.com/ru/intrepid/i386/libapache2-mod-php5]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>484</wp:post_id>
<wp:post_date>2010-08-05 13:06:29</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1280995589</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Хедер и футер</title>
<link>http://torqueo.net/?p=798</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=798</guid>
<description></description>
<content:encoded><![CDATA[Написать заметку про использование хелпера with_header_and_footer]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>798</wp:post_id>
<wp:post_date>2012-01-08 20:51:13</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1328102263</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>dsfsadfasdfasfdasdf</title>
<link>http://torqueo.net/?p=799</link>
<pubDate>Tue, 30 Nov 1999 00:00:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

<guid isPermaLink="false">http://torqueo.net/?p=799</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>799</wp:post_id>
<wp:post_date>2012-01-11 12:09:12</wp:post_date>
<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name></wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1326270192</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Проекты</title>
<link>http://torqueo.net/projects/</link>
<pubDate>Fri, 28 Nov 2008 20:28:53 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://play.imaker.ru/?page_id=4</guid>
<description></description>
<content:encoded><![CDATA[<strong>Внимание! Пока что здесь почти ничего кроме описания нет. Выкладываю пока то, что подготовлено.
</strong>

Список собственных проектов, которыми я занимаюсь. Всегда буду рад, если вы захотите поучаствовать в разработке или укажете мне на ошибки в проектах. Пожелания тоже приветствуются.
<ul>
	<li><a href="/projects/tanraya-framework/"><strong>Tanraya Framework</strong></a> и <strong>Tanraya Playmo</strong>. Это - MVC фреймворк и приложение, основанное на этом фреймворке.<a href="/tanraya/playmo">
</a></li>
	<li><strong>Tanraya CSS Framework</strong>. Как бы ни пафосно звучало название - но это всего лишь набор CSS файлов, JS и сниппетов, которые сглаживают различия между браузерами и позволяют ускорить работу XHTML верстальщика.</li>
	<li><strong>Tanraya Dropdown for Mootools</strong>. Юзабельное многоуровневое выпадающее меню, написанное под <a href="http://mootools.net">Mootools framework</a>. Написано с использованием best practices :-).</li>
	<li><strong>Tanraya </strong><strong>Custom Scrollbar for Mootools</strong>. Скрипт, позволяющий создавать кастомные скроллбары у блоков, которые имеют свойство overflow: hidden. Как всегда - graceful degradation, best practices и всё такое.</li>
	<li><a href="/files/custom-select/"><strong>Tanraya </strong><strong>Custom Dropbox (SELECT tag) for Mootools</strong></a>. Замена стандартного тага select. Полностью повторяет поведение стандартного select'а. В настоящее время находится в разработке, но кое что уже можно посмотреть и даже использовать.</li>
	<li><strong>Tanraya </strong><strong>Notifications for Mootools</strong>. Всплывающие сообщения (уведомления). По-другому - флэш-сообщения. Полезны, когда нужно вывести ненавязчивое сообщение после какого-нибудь действия пользователя.</li>
	<li><strong>Tanraya Image Slider</strong><strong> for Mootools</strong><strong>. </strong>Небольшой<strong> </strong>и очень удобный просмотрщик фотографий.</li>
	<li><strong>Tanraya Form Validator</strong>. Класс для валидации форм. Аналог валидаторов в Ruby on Rails, поэтому этот класс довольно удобно использовать совместно с кодогенерацией в ROR. Остается только написать генерацию JS кода на основе описания валидаторов из модели :).</li>
	<li><a href="http://torqueo.net/files/mootools-darkbox/"><strong>Darkbox for Mootools</strong></a> -решение для Mootools, написанное на основе оригинального скрипта <a href="http://pepelsbey.net/about/">Вадима Макеева</a>.</li>
</ul>
<p style="text-align: left;"><em>Есть еще несколько других проектов, которыми я время от времени занимаюсь, но пока они не настолько развиты, чтобы удостоиться внимания. Поэтому, время от времени, я буду их доводить до логического конца и публиковать на этой странице.</em></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>4</wp:post_id>
<wp:post_date>2008-11-29 01:28:53</wp:post_date>
<wp:post_date_gmt>2008-11-28 20:28:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>closed</wp:ping_status>
<wp:post_name>projects</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241098938</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Об Авторе</title>
<link>http://torqueo.net/about/</link>
<pubDate>Fri, 28 Nov 2008 20:29:50 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://play.imaker.ru/?page_id=6</guid>
<description></description>
<content:encoded><![CDATA[<img style="margin-right: 10px; margin-bottom: 3px; float: left;" title="torqueo.net" src="http://torqueo.net/wp-content/uploads/2008/11/me1.jpg" alt="torqueo.net" width="300" height="525" />

Меня зовут Андрей. Мне 27. Программировать начал в январе 1999 года, сразу под веб. Любимые языки - Ruby, Perl, Javascript. Раньше на первом месте стоял Perl, но когда я увидел Ruby - мир перевернулся и Perl уступил первое место в моём рейтинге.

Я занимаюсь разработкой на Ruby/Javascript, в свободное время изучаю различные технологии. Область интересов захватывает так же разработку веб-интерфейсов, юзабилити. Отлично верстаю веб-страницы. Использую HTML5, CSS 3. Потихоньку админю. Веб-аддикт, перфекционист, мизантроп и минималист. Интересуюсь историей, археологией, туризмом, урбантрипом, диггерством и, как ни странно - политикой.

Люблю встречаться и общаться с ruby-энтузиастами, с теми людьми, которым всегда есть что сказать. Нравятся evilmartians и aviasales.ru. В последнее время сильно занимаюсь автоматизацией создания/разработки и деплоя rails-приложения. Кое-что есть у меня на Гитхабе.

Связаться со мной можно так:

E-mail: demerest@gmail.com
Skype: tanraya
Twitter: <a href="http://twitter.com/tanraya">tanraya</a>
Github: <a href="https://github.com/tanraya">tanraya</a>

Пишите лучше на мыло и читайте блог. Я всегда рад комментариям и отзывам на мои заметки. Форкайте на гитхабе :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>6</wp:post_id>
<wp:post_date>2008-11-29 01:29:50</wp:post_date>
<wp:post_date_gmt>2008-11-28 20:29:50</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>closed</wp:ping_status>
<wp:post_name>about</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>3</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1326821189</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>venom5</title>
<link>http://torqueo.net/about/venom5/</link>
<pubDate>Fri, 28 Nov 2008 22:18:32 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://play.imaker.ru/wp-content/uploads/2008/11/venom5.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[Автор]]></excerpt:encoded>
<wp:post_id>15</wp:post_id>
<wp:post_date>2008-11-29 03:18:32</wp:post_date>
<wp:post_date_gmt>2008-11-28 22:18:32</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>venom5</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>6</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://play.imaker.ru/wp-content/uploads/2008/11/venom5.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/home/u745/play.imaker.ru/www/wp-content/uploads/2008/11/venom5.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:82;s:6:"height";i:108;s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:67:"/home/u745/play.imaker.ru/www/wp-content/uploads/2008/11/venom5.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>author</title>
<link>http://torqueo.net/about/author/</link>
<pubDate>Fri, 28 Nov 2008 23:12:05 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://play.imaker.ru/wp-content/uploads/2008/11/author.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>17</wp:post_id>
<wp:post_date>2008-11-29 04:12:05</wp:post_date>
<wp:post_date_gmt>2008-11-28 23:12:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>author</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>6</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://play.imaker.ru/wp-content/uploads/2008/11/author.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/home/u745/play.imaker.ru/www/wp-content/uploads/2008/11/author.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:82;s:6:"height";i:108;s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:67:"/home/u745/play.imaker.ru/www/wp-content/uploads/2008/11/author.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Ошибка в Parasite Eliminator</title>
<link>http://torqueo.net/parasite-eliminator-silly-error/</link>
<pubDate>Sun, 30 Nov 2008 19:43:39 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[рутина]]></category>

		<category domain="category" nicename="%d1%80%d1%83%d1%82%d0%b8%d0%bd%d0%b0"><![CDATA[рутина]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=22</guid>
<description></description>
<content:encoded><![CDATA[Нашел тут ошибку в Parasite Eliminator (parasite-eliminator.ru). Из-за этой ошибки списки не обновлялись, если обновление происходило через cURL. Ошибка классическая - вместо латинской "си" стояла русская "с" в вызовах функции (автор пишет в блокноте? =) ).

Вот, называется, заглянул в исходники).]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>22</wp:post_id>
<wp:post_date>2008-12-01 00:43:39</wp:post_date>
<wp:post_date_gmt>2008-11-30 19:43:39</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>parasite-eliminator-silly-error</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1228074219</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>photo</title>
<link>http://torqueo.net/something-interestin/photo/</link>
<pubDate>Tue, 02 Dec 2008 14:37:38 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2008/12/photo.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>26</wp:post_id>
<wp:post_date>2008-12-02 19:37:38</wp:post_date>
<wp:post_date_gmt>2008-12-02 14:37:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>photo</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>24</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2008/12/photo.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/home/u745/play.imaker.ru/www/wp-content/uploads/2008/12/photo.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:280;s:6:"height";i:210;s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:66:"/home/u745/play.imaker.ru/www/wp-content/uploads/2008/12/photo.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"photo-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Нашел кое что интересное</title>
<link>http://torqueo.net/something-interestin/</link>
<pubDate>Tue, 02 Dec 2008 14:49:01 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[урбантриппинг]]></category>

		<category domain="category" nicename="%d1%83%d1%80%d0%b1%d0%b0%d0%bd%d1%82%d1%80%d0%b8%d0%bf%d0%bf%d0%b8%d0%bd%d0%b3"><![CDATA[урбантриппинг]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=24</guid>
<description></description>
<content:encoded><![CDATA[Читая свою RSS ленту, наткнулся на новый урбан-трип сайт <a href="http://urban3p.ru/">urban3p.ru</a>. Зашел на сайт, на секунду показалось что это какая-то браузерная игра). Видимо, из-за оформления сайта, дизайн у него очень смахивает на дизайн для игр, но надо признать, выглядит симпатично.

Побродил по сайту, почитал - много нового узнал :). Но самое главное, наткнулся на то, о чем доселе не знал:

<!--more-->

<a href="http://urban3p.ru/object112">Бункер на ЖБИ</a> - бомбоубежище, находится около гранитного карьера на окраине района ЖБИ. Честно признаться, про этот карьер я узнал только в начале этой осени (позор, позор). Хотя предполагал, что в том районе ведется какая-то горная разработка. Надо будет сгонять как-нибудь этот бункер. Вроде чето я слышал от <a href="http://dotblog.ru/blog/sb/">Saint_byte</a> про бомбоубежища, он по ним в последнее время часто ползает. Но знает ли он про это бомбоубежище - хз, но спрошу.

Вот слова автора, как проехать к бункеру:
<blockquote><em>Садимся на 50 автобус, едем до Пл.1905г, а там на трамвай №15 и до конечной 40лет ВЛКСМ, ну а там на своих 2. Пройдя мимо карьера, перед шлайбаумом сварачиваем налево, еще вперед, пригорок, лестница, гермодверь..... заварено... "Ну все... ходка сорвалась, подумали мы все..."-и решили обойти кругом. И обошли!!! Видим лестницу вниз, а там приоткрытая гермодверь... немного усилий и... мы внутри!!! Темно.Тесно. Проходим дальше и вот комната, а к ней примыкают еще пара небольших комнатушек, возле стен стоят лавки и лежит противогаз еще таблица и антирадиационные пакеты.</em></blockquote>
И еще один <a href="http://urban3p.ru/blogs/message120">интересный объект</a>, который стоит посетить летом. Какой-то бывший военный бункер в лесу. Свяжусь с <a href="http://vkontakte.ru/id18921953?58749">автором</a>, спрошу как проехать, где находится и все такое.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>24</wp:post_id>
<wp:post_date>2008-12-02 19:49:01</wp:post_date>
<wp:post_date_gmt>2008-12-02 14:49:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>something-interestin</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259503177</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru/blog/sb/</wp:comment_author_url>
<wp:comment_author_IP>81.91.63.38</wp:comment_author_IP>
<wp:comment_date>2008-12-04 13:12:28</wp:comment_date>
<wp:comment_date_gmt>2008-12-04 08:12:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Какая морда обьект запалила ?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>XML и сборка интерфейсов. Мысли о том, как сделать легко настраиваемый интерфейс.</title>
<link>http://torqueo.net/xml-and-build-interface/</link>
<pubDate>Tue, 02 Dec 2008 18:22:04 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=31</guid>
<description></description>
<content:encoded><![CDATA[Стояли вчера в падике и пили вино %) и тут я подумал внезапно, почему бы не сделать сборку интерфейсов (считай, xhtml страничек) на основе XML, используя при этом подход, который есть в плагинах для Firefox и других Gecko-приложений.

При написании плагина для FF, если мы хотим изменить каким-то образом окно браузера, например, добавить выпадающее меню в статус-бар, мы пишем специальный XUL файл, который содержит в себе специфическую XUL разметку (XUL - это по-сути XML). <!--more-->Дальше, в файле chrome.manifest указываем:

<span style="color: #008000;"><em>overlay chrome://browser/content/browser.xul chrome://sample/content/sample.xul</em></span>

Это означает, что мы просим объединить 2 файла: наш XUL-файл и дефолтный XUL-файл браузера. Преимущество такого подхода в том, что XML всегда валидный и его легко объединить с другим XML'ем (при помощи XSLT).

Прикиньте, насколько бы облегчилось написание плагинов для Wordpress со стороны встраивания новых блоков на сайт и изменения существующих? Или, например, как прикольно при таком подходе ваять админки для сайтов, или специализированные панели управления? Я просто ссусь кипятком.

Я уверен, что такой подход некоторый продвинутый народ усиленно юзает в своих CMSках и движках. Более того, например <a href="http://xpoint.ru">xpoint.ru</a> полностью построен на таком подходею И это круто.

При таком подходе, мы на выходе контроллера получаем кусок XML'я (то есть чистые форматированные данные). Дальше, присоединяя к нему различные XSL шаблоны, конвертируем эти данные в любой формат, хоть в RSS, хоть в HTML, или даже в PDF. Круто ведь?
<h3>Есть тут и минусы</h3>
<ol>
	<li>Нужно знать XSLT</li>
	<li>Нужно придумывать язык разметки для каждого интерфейса (возможно, конечно, его более-менее унифицировать)</li>
	<li>В данный момент не все браузеры умеют обрабатывать XSTL, поэтому нам приходится делать это на стороне сервера. Отсюда какая-никакая, но нагрузка. (хотя этот пункт можно не считать за минус)</li>
</ol>
Я для себя твердо решил, что надо попытаться все это обдумать как следует и уверенными шагами идти к реализации этого подхода на практике. От читателей тоже хочется услышать мысли по этому поводу, или может быть показать примеры реализации этого подхода в open-source продуктах. Буду рад, если кто ссылок кинет.

Чмоке.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>31</wp:post_id>
<wp:post_date>2008-12-02 23:22:04</wp:post_date>
<wp:post_date_gmt>2008-12-02 18:22:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>xml-and-build-interface</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1228242252</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>11856</wp:comment_id>
<wp:comment_author><![CDATA[ainu]]></wp:comment_author>
<wp:comment_author_email>klepid@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.205.48.212</wp:comment_author_IP>
<wp:comment_date>2011-10-22 02:48:30</wp:comment_date>
<wp:comment_date_gmt>2011-10-21 21:48:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Идея крута. Жаль, XLST всё таки тот ещё орех, особенно на реальных проектах.
Только плохо, что XML (XHTML) это по сути представление и его объедигнять всё-таки плохо. Логика не там должна находиться.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Только что пришел из кинотеатра</title>
<link>http://torqueo.net/russian-holy-shit-damn-stupid-fucks-detective/</link>
<pubDate>Wed, 03 Dec 2008 19:49:01 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[свежий навоз]]></category>

		<category domain="category" nicename="%d1%81%d0%b2%d0%b5%d0%b6%d0%b8%d0%b9-%d0%bd%d0%b0%d0%b2%d0%be%d0%b7"><![CDATA[свежий навоз]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=36</guid>
<description></description>
<content:encoded><![CDATA[Смотрел там "Очень русский детектив".

Все, кто делал этот фильм, употребляли какие-то вещества. Я думаю авторы плотно сидят на тяжелых наркотиках.<!--more-->

Такой херни я давно не видел. Сюжет фильма... хотя, какой там сюжет - все высосано из уха и притянуто за палец. Когда же у нас начнут нормальные комедии снимать, а не это говно. Раньше же умели. Даже в середине 90-х выходили вполне ниче такие фильмы. А сейчас?

Лучше посмотрите "Городок", в разы веселей чем эта поделка.

Ладно, обычно говорят, не надо там всякие отзывы читать о фильмах, а нужно посмотреть, вдруг самому понравится. Но сейчас, я со всей ответственностью заявляю, не смотрите это и не смейте даже качать с торрентов :). Я-то думал, что Вадим Галыгин родит что нибудь уж точно получше. Да, к слову, за весь фильм я улыбнулся только два раза, это когда Галыгина роль показывали. Ну в конце еще, где Брякоткина показали. А ну да, еще типаж наркомана порадовал. Напомнил психа из фильма "Костолом".

Зря короче 360 рублей потратил. Кризис же, надо экономить. А я навозу купил. А удобрять им нечего :(.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>36</wp:post_id>
<wp:post_date>2008-12-04 00:49:01</wp:post_date>
<wp:post_date_gmt>2008-12-03 19:49:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>russian-holy-shit-damn-stupid-fucks-detective</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259503144</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>РПЦ и рафинированный пиздец</title>
<link>http://torqueo.net/russian-church-and-pizdets/</link>
<pubDate>Tue, 09 Dec 2008 06:41:55 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[свежий навоз]]></category>

		<category domain="category" nicename="%d1%81%d0%b2%d0%b5%d0%b6%d0%b8%d0%b9-%d0%bd%d0%b0%d0%b2%d0%be%d0%b7"><![CDATA[свежий навоз]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=42</guid>
<description></description>
<content:encoded><![CDATA[Я хоть и всей этой херней не особо интересуюсь, но видели ли вы, какой наброс говна на вентилятор происходит вокруг <a href="http://tema.livejournal.com/225262.html">поста</a> Лебедева? Не, я действительно не мог до селе подумать, что у нас столько неадеквата у власти. Бывшие коммунисты осуждают поступок Лебедева, это че, прикол такой? =) И еще один прикол: Патриарха Алексия v 2.0 хотят канонизировать!11!1! Олололо!!1!1! Я то думал, это только для великомученников такая честь =). Пиздец, чо происходит.

<a href="http://mezomish.livejournal.com/1127.html">Вот еще один мужыг</a> правильные мысли написал, почитайте, выскажите мнения.

<a href="http://tema.livejournal.com/226616.html">Срач вокруг поста</a> Лебедева бурно развивается, следите за комментами.

Высказывайте свое мнение в комментах, буду рад откликам.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>42</wp:post_id>
<wp:post_date>2008-12-09 11:41:55</wp:post_date>
<wp:post_date_gmt>2008-12-09 06:41:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>russian-church-and-pizdets</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259503109</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d1%80%d0%bf%d1%86-%d0%b8-%d1%80%d0%b0%d1%84%d0%b8%d0%bd%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%bd%d1%8b%d0%b9-%d0%bf%d0%b8%d0%b7%d0%b4%d0%b5%d1%86</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3</wp:comment_id>
<wp:comment_author><![CDATA[HighjackMaster]]></wp:comment_author>
<wp:comment_author_email>a2b@bk.ru</wp:comment_author_email>
<wp:comment_author_url>http://stereolab.ru</wp:comment_author_url>
<wp:comment_author_IP>82.193.148.142</wp:comment_author_IP>
<wp:comment_date>2008-12-09 14:05:03</wp:comment_date>
<wp:comment_date_gmt>2008-12-09 09:05:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну, а ты как хотел... вот ты негодуешь, отвлекаешься от насущных проблем, тебе дали информационный повод и развили его, развели тебя и всех остальных. А "наброс говна на вентилятор происходит вокруг поста Лебедева" происходит потому, что слишком охуенному количеству людей слишком нехуй делать.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Финский кореш Джей</title>
<link>http://torqueo.net/something-about-j/</link>
<pubDate>Tue, 09 Dec 2008 13:59:55 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=47</guid>
<description></description>
<content:encoded><![CDATA[У меня есть корефан из Финляндии <a href="http://www.vuoropuhelu.fi/index.php?option=com_content&amp;task=view&amp;id=159&amp;Itemid=211">Tuomo Pesonen</a>, с которым меня познакомил <a href="http://dotblog.ru/blog/sb/">Saint_Byte</a> года 4 назад, когда Tuomo приезжал на открытие фестиваля документального кино в Екатеринбурге.

Так как по-русски сложно выговорить имя Tuomo, то мы зовем его просто Джей (J.), исходя из его псевдонима (псевдоним не скажу). <!--more-->

[caption id="attachment_50" align="alignleft" width="100" caption="Джей"]<img class="size-full wp-image-50" title="tuomo_pesonen_web" src="http://torqueo.net/wp-content/uploads/2008/12/tuomo_pesonen_web.jpg" alt="Джей" width="100" height="116" />[/caption]

В прошлый раз Джей пригонял к нам в Ебург осенью прошлого года, как корреспондент <a href="http://yle.fi">финского издания</a>, снимали тут репортаж, точнее снимали в г. Асбест. Ну мы тогда неплохо пофестивалили :). Финны, как и русские, северный народ и то, что русскому хорошо - финну тоже заебись :).

Надо будет как-нить замутить шенгенскую визу и сгонять в Финляндию, давно мечтаю побывать в Скандинавии. И Джей как раз прилгашал. Только вот выловить его трудно, т.к. он постоянно то в Москве то еще хз где.

Щас как раз идет <a href="http://tema.livejournal.com/226616.html">срач по поводу плаката</a> об патриархе Алексии v 2.0 у Тёмы. И вот как я удивился, что Джей щас тоже связался с церковью, оказывается он щас работает <span>директором службы по коммуникации и информации </span><span>Евангелическо-Лютеранской Церкви Финляндии, о как.</span>

Короче Джей - веселый чел, тока вот о политике не любит говорить :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>47</wp:post_id>
<wp:post_date>2008-12-09 18:59:55</wp:post_date>
<wp:post_date_gmt>2008-12-09 13:59:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>something-about-j</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259503069</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>4</wp:comment_id>
<wp:comment_author><![CDATA[Konstantin Tumalevich]]></wp:comment_author>
<wp:comment_author_email>userad@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://tumalevich.pp.ru</wp:comment_author_url>
<wp:comment_author_IP>79.142.168.10</wp:comment_author_IP>
<wp:comment_date>2008-12-10 02:17:49</wp:comment_date>
<wp:comment_date_gmt>2008-12-09 21:17:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я тут почитал их сайт, нормальная такая церковь которая держит PR отдел и не парится.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5</wp:comment_id>
<wp:comment_author><![CDATA[admin]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>90.151.21.35</wp:comment_author_IP>
<wp:comment_date>2008-12-10 18:48:56</wp:comment_date>
<wp:comment_date_gmt>2008-12-10 13:48:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ага, все по-уму сделано. Бизнес, хуле.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>tuomo_pesonen_web</title>
<link>http://torqueo.net/something-about-j/tuomo_pesonen_web/</link>
<pubDate>Tue, 09 Dec 2008 14:01:31 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2008/12/tuomo_pesonen_web.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[Джей]]></excerpt:encoded>
<wp:post_id>50</wp:post_id>
<wp:post_date>2008-12-09 19:01:31</wp:post_date>
<wp:post_date_gmt>2008-12-09 14:01:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tuomo_pesonen_web</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>47</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2008/12/tuomo_pesonen_web.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/home/u745/demo.imaker.ru/www/wp-content/uploads/2008/12/tuomo_pesonen_web.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:5:{s:5:"width";i:100;s:6:"height";i:116;s:14:"hwstring_small";s:22:"height='96' width='82'";s:4:"file";s:78:"/home/u745/demo.imaker.ru/www/wp-content/uploads/2008/12/tuomo_pesonen_web.jpg";s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Tanraya Framework coming soon</title>
<link>http://torqueo.net/tanraya-coming/</link>
<pubDate>Wed, 10 Dec 2008 14:05:05 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=53</guid>
<description></description>
<content:encoded><![CDATA[Медленно но целенаправленно я таки подхожу к великому моменту выкладывания своего детища - Tanraya Framework, она избавляется от недостатков прошлого силами трудящихся и интеллегенции и скоро будет выложена в публичный доступ. Ура, товарищи!

Дока тоже будет, будет и simple sample.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>53</wp:post_id>
<wp:post_date>2008-12-10 19:05:05</wp:post_date>
<wp:post_date_gmt>2008-12-10 14:05:05</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tanraya-coming</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1228917905</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>6</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru/blog/sb/</wp:comment_author_url>
<wp:comment_author_IP>81.91.63.38</wp:comment_author_IP>
<wp:comment_date>2008-12-11 13:50:33</wp:comment_date>
<wp:comment_date_gmt>2008-12-11 08:50:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вчера поставил - твой фреймворк порадовал сразу 5.1 + ОНли =(((

Обыдно однако у меня все таки 5.0 ПХП =((]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>7</wp:comment_id>
<wp:comment_author><![CDATA[admin]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.115.176.40</wp:comment_author_IP>
<wp:comment_date>2008-12-11 17:21:31</wp:comment_date>
<wp:comment_date_gmt>2008-12-11 12:21:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Так поставь сегодня последний PHP (2.8 вроде как), делов то=)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru/blog/sb/</wp:comment_author_url>
<wp:comment_author_IP>81.91.63.38</wp:comment_author_IP>
<wp:comment_date>2008-12-15 15:36:54</wp:comment_date>
<wp:comment_date_gmt>2008-12-15 10:36:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да поставил как ЦГИ- какой-то глюк с СПЛ ... По пхпинфо есть а ругается на отстусвие какой-то функции от СПЛа]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Белоярская АЭС, радиация, немного ужасов</title>
<link>http://torqueo.net/beloyarskaya-nuclear-station-and-some-horror-facts/</link>
<pubDate>Fri, 12 Dec 2008 19:50:19 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[радиация]]></category>

		<category domain="category" nicename="%d1%80%d0%b0%d0%b4%d0%b8%d0%b0%d1%86%d0%b8%d1%8f"><![CDATA[радиация]]></category>

		<category><![CDATA[урбантриппинг]]></category>

		<category domain="category" nicename="%d1%83%d1%80%d0%b1%d0%b0%d0%bd%d1%82%d1%80%d0%b8%d0%bf%d0%bf%d0%b8%d0%bd%d0%b3"><![CDATA[урбантриппинг]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=55</guid>
<description></description>
<content:encoded><![CDATA[<h2>"Почтовый ящик" на Пышме</h2>
В конце зимы 1959 года долина реки Пышмы чуть выше поселка геофизиков Шеелит гудела под натиском могучей техники. Тяжелые бульдозеры выдирали кустарники, выворачивали с корнями разлапистые пни, мощные трейлеры тащили в гору многометровые хлысты, днем и ночью пылали костры из сучьев, а на оголенном месте скрипели буровые станки, звенели ломы и лопаты. После полудня в скалах на левом берегу гремели взрывы, а по правому берегу уже цепочкой шли самосвалы, груженные щебнем: начала отсыпаться дамба. Обозрев эту картину со стороны, даже неопытный наблюдатель сразу бы понял: готовится ложе водохранилища.<!--more-->

Строители спешили в надежде не упустить обильные паводковые воды, но объем работ был огромен, стена столетних уральских сосен вверх по реке, к северу от строящейся плотины, отступала медленно. И в который уже раз железная поступь плана оказалась сильнее соображений экологического здоровья природного ландшафта: около четверти акватории водохранилища оказалось кладбищем леса. И не очень удивлялись потом рыбаки, отлавлива на простую удочку, вместо лещей скелеты мертвых деревьев. И не раз, и не два рыбачьи лодки сталкивались с плавающими стволами деревьев, а иным лихачам на моторках при внезапной встрече с топляками случалось оказыватьс в холодной купели, из которой, увы, не всем удавалось выбраться...

Однако я поспешил с рыбаками; да вы, надеюсь, и не подумали, что весь этот напор мощной техники, эта спешка имели целью усладу любителей тихой охоты. И масштаб, и стиль работ свидетельствовали о том, что строительство водохранилища - это лишь часть некоего грандиозного плана, осуществлению которого придается особое значение где-то там, на самом верху. И точно, в глубине леса на левом берегу что-то строилось: возводились добротные дома, закладывались какие-то масштабные производственные сооружения.

Мало кто знал, что там будет, даже вездесущим горнотехническим инспекторам не удавалось проникнуть на территорию таинственного объекта. Как и обычно в подобных случаях, возникли неясные слухи о каком-то "почтовом ящике", потом стали говорить более определенно о секретном атомном объекте. Но по мере приближения к завершающему этапу работ туман таинственности все более рассеивался, и в апреле 1964 года уже не только ближайшие соседи, но и вся страна узнала, что в полусотне километров восточнее Свердловска, недалеко от поселка Белоярского, дал ток в уральское энергетическое кольцо первый блок Белоярской атомной электростанции - третьей в стране АЭС после Обнинской (1954) и Сибирской (1958).

Сейчас мало кто знает (а раньше об этом знало еще меньшее число людей), что поначалу атомную электростанцию в Свердловской области хотели строить на берегу Верх-Сысертского пруда. Два довода побудили-таки чиновников отказаться от этого варианта. Во-первых, недавний (в сентябре 1957 года) взрыв хранилища радиоактивных отходов на комбинате "Маяк" в Челябинской области обратил теоретическую опасность радиоактивного заражени в реальную. Во-вторых, опасность эта, даже если б вероятность ее была признана небольшой, нависла бы над одним из самых замечательных уголков уральской природы, излюбленным местом отдыха свердловчан, где в сосновых борах скрываются и пионерские лагеря, и дома отдыха, и охотничьи дачи. Опасность нависла бы и над целым конгломератом небольших и средних городов, сосредоточенных в этих местах, а с подветренной стороны мог оказатьс и областной центр.

Были возражения и против белоярской площадки - тоже ведь не бросового уголка уральской территории. Самое веское - предполагалось выселение поселка Шеелит и базировавшейс в нем геофизической экспедиции: в случае прорыва плотины поселок моментально оказалс бы под водой, в лучшем случае - в зоне бедствия. Поселок все же решили не трогать. Зато приняли беспрецедентное по тем временам решение: радиационный контроль за пределами санитарно-защитной зоны - то есть от трех километров за воротами АЭС вплоть до самого Свердловска - поручили местной инспекции (от областной санэпидстанции).

До этого случая в стране не было ни одного "почтового ящика", внешнюю зону которого (хотя бы только ее!) контролировала бы служба, подчиненная не только своему ведомству, но и местным властям. Передача под местный контроль зоны Белоярской АЭС резко противоречила ведомственным интересам атомщиков: становилось невозможным, в случае самомалейшего ЧП, утаить шило в мешке. А потребность в том за годы эксплуатации БАЭС возникала не раз.
<h2>Отступление о нормах и дозах</h2>
Рассказывая о том, что наблюдали контролеры, которых опрометчиво допустили в зону радиационного воздействия БАЭС, и что именно порой хотелось скрыть руководству станции, я вынужден буду пользоваться хотя бы самыми необходимыми специальными понятиями и терминами. И хотя теперь они довольно широко распространились в обиходе (к сожалению, ибо толчком к тому послужила чернобыльская трагедия), думаю, нелишне дать им здесь хотя бы самое краткое пояснение. Читатель более сведущий может эту подглавку пропустить.

Оказавшись в зоне действия ионизирующих излучений, живой организм получает некоторую дозу внешнего и дозу внутреннего облучения. Внешнее облучение мы получаем от всех радиоактивных веществ, которые изначально существуют в естественной среде или привнесены в нее в результате работы человека с расщепляющимися элементами. Внутреннее облучение связано с поступлением радионуклидов в организм при дыхании, с пищей и водой. При этом разные радионуклиды концентрируются в разных - "излюбленных" ими - органах: стронций - в костях, цезий - в мышцах...

Излучение измеряют в рентгенах (микрорентгенах) - по степени его ионизирующего воздействия на воздух. Облучение же измеряют по степени суммарного воздействия "рентгенов" на организм. Иначе говоря - в биологических эквивалентах рентгена, сокращенно - в бэрах (микробэрах). Конечно, биологические последствия не зависят от того, с какой стороны проникли в организм радионуклиды...

Совсем избежать внешнего облучения невозможно: оно распространено повсеместно. Да и не нужно: организм наш к нему адаптировалс и без него, вероятно, почувствовал бы себя менее комфортно. Помните старый анекдот? Горожанин вышел из лесу и в изнеможении припал к выхлопной трубе автомобиля... Этот неизбежный и не грозящий опасностью фон радиоактивного излучения в середине 70-х годов (то есть еще до Чернобыля) колебалс в Свердловске от 7 до 9 мкР/час. Доза облучения при этом составляла не более 80 мбэр/год. Дл сравнения: в Риге - 110, в Москве - 90, в Новосибирске - 80, в Петропавловске-Камчатском - 90 мбэр/год. К началу 90-х годов доза радиоактивного облучения за счет фонового излучения в Свердловске, ставшем уже Екатеринбургом, вобрав и неизбежную долю чернобыльских радионуклидов, рассеявшихся по всей планете, изменилась не намного - она составляла от 80 до 105 мбэр/год, в разных районах города по-разному. Не ищите, однако, секретных объектов, которые якобы в каких-то кварталах поднимают уровень радиоактивности, подвергая жителей опасности чрезмерного облучения. Обычно колебания в таких пределах вполне объясняются излучением естественных радионуклидов (ЕРН), содержащихся в строительных конструкциях, - а мы ведь большую часть времени проводим в помещениях.

Любые недомолвки в том, что касается радиации, могут вызвать сегодн у многих настороженность и страх. Поэтому стоит пояснить, почему и какие строительные конструкции являются источником излучения. Дело в том, что в состав бетона, из которого возведены стены большинства блочных, панельных и монолитных железобетонных зданий, в качестве непременного компонента входит щебень из гранита или других твердых горных пород. Все горные породы содержат некоторое количество ЕРН - вездесущего радиоактивного калия, рассеянных радия или тория. Правда, одни - несколько большее, другие - меньшее. Поэтому в одних железобетонных сооружениях радиоактивное излучение несколько даже превышает фоновое, в других оно ниже фонового, то есть такие строительные материалы обладают защитными свойствами. Защитными свойствами обладают, в частности, бетоны со щебнем из Курманского карьера на Среднем Урале.

Курманские граниты - основной стройматериал, использованный при сооружении производственных помещений Белоярской АЭС и поселка энергетиков. А вот в гранитах из Шарташского карьера близ Екатеринбурга количество ЕРН вдвое большее, чем в гранитах из Курманки. Однако не терзайте строителей вопросами о происхождении гранита в панелях дома, где вам предстоит жить или работать: с некоторых пор введены нормы на содержание ЕРН в стройматериалах. Как им там удается вогнать показатели в рамки этих норм - это их профессиональные заботы, но только с панелями на основе шарташского щебня все в порядке, уж вы поверьте. Другое дело, что нормы по ионизирующей радиации (как, предположим, и по вредным примесям в питьевой воде, в воздухе) - некие условности, они ограничивают до приемлемых пределов, но не исключают вовсе вредные воздействия. Любая надфоновая радиация - не благо, и задача радиационного контроля - обнаружить ее источник и добиться снижени его воздействия на человека до практически достижимого минимума. Вопрос, однако, в том, какой же минимум практически достижим.

В середине семидесятых годов на международной конференции в Вене по радиационной защите один из американских участников сделал сенсационное заявление, что, дескать, аэрозольные выбросы на американских АЭС создают дозу облучения местного населения не более чем 5 мбэр/год - всего лишь несколько процентов годовой дозы, получаемой от естественного фона излучения! Цифра неправдоподобно низкая. Одни слушатели были шокированы, другие озадачены, а третьи попросту не поверили.
Советские участники конференции были не на шутку встревожены. Дело в том, что у нас до того действовала совсем другая норма: не более 500 мбэр/год для жителя зоны АЭС. Причем в эту дозу не включалось воздействие ни естественного фона, ни глобальных радиоактивных выпадений. Ну ладно, многотерпеливому советскому народу можно было по привычке не докладывать, какое облучение ему грозит.

Но мы тогда со своим атомным оборудованием как раз выходили на международный рынок. Советский водо-водяной энергетический реактор мощностью 440 мегаватт (ВВЭР-440) облюбовала для своей АЭС "Ловиса" Финляндия, он положительно оценивался в Японии, к нему присматривались в ФРГ. И вдруг такая подножка!
Поначалу наши атомщики попытались выдать американскую сенсацию за рекламный трюк, но те сумели убедить международных экспертов в объективности своих данных. Чтоб не ударить лицом в грязь и спасти престиж советской атомной энергетики, нашей Национальной комиссии по радиационной защите (НКРЗ СССР) пришлось согласиться с жесткими нормами облучения, предложенными венской конференцией: 20 мбэр/год от газоаэрозольных выбросов АЭС и 5 мбэр/год от жидких сбросов в окружающие водоемы, вода из которых может использоваться местным населением для каких-то хозяйственных целей. То есть в сумме - 25 мбэр/год.

Как вы понимаете, 500 и 25 - это "две большие разницы". С того момента спокойная жизнь для советских атомных энергетиков кончилась. Надо было совершенствовать технику, технологию, измерительно-контрольную аппаратуру. В направлении, которому у нас никогда прежде не придавалось серьезного значения, невозможно было сразу выйти на мировой уровень. И там, где инженерная мысль давала сбои, по старой советской привычке творились мифы.
<h2>Первый "козел" и первый миф</h2>
Гром и молния на БАЭС впервые грянули 21 декабрz 1967 года, когда на первом реакторе расплавились тепловыделяющие элементы (твэлы) и образовался "козел" - так в обиходе называют заклинивание твэла. Сложная техника перестала реагировать на команды оператора с пульта, пришлось останавливать, вскрывать реактор и выбуривать заклинивший твэл. Рабочие, занятые в этой операции, были героями не в меньшей мере, чем почти двумя десятилетиями позже ликвидаторы чернобыльской аварии. Да и первая белоярская авария по существующим международным нормам должна быть отнесена к числу тяжелых. Трудно даже представить, что бы могло произойти, если бы обслуживающий персонал растерялся и не сумел воврем принять экстренные меры... Тем не менее, не удалось избежать загрязнения реакторного зала и выброса радиоактивных газов и аэрозолей в окружающую среду. Репутация "экологически чистой" АЭС пошатнулась, но - устояла. Положение спасли с помощью первого мифа.
Миф этот был сотворен с ведома узкого круга руководителей станции: якобы избыточные радионуклиды появились в зоне станции в результате испытаний атомных бомб. Расчет был на простаков или чрезмерно доверчивых людей:  испытания ядерных устройств в атмосфере, на земле и под водой были запрещены еще в 1963 году. Но, как ни странно, - поверили:  атомщикам еще доверяли.

Вскоре, в 1969 году, впервые проводилась комплексная радиационная съемка района Белоярской АЭС - обследовалась площадь более 400 квадратных километров. Репутацию хоть с трудом, но удалось сохранить и на этот раз. Правда - лишь до ввода на полную мощность (в том же 1969 году) второго блока, оснащенного, как и первый, канальным реактором.

В мировой практике канальные реакторы не получили распространения. Так, в США только два из девяти реакторов в Ханфорде были канальными, да и те понадобились американцам лишь для наработки плутония для атомных бомб. В Советском же Союзе этому варианту отдавалось предпочтение, так как считалось, что канальные реакторы могут иметь неограниченную мощность, а о меньшей их радиационной безопасности почему-то не очень беспокоились.

На БАЭС первые два блока строились на основе именно канальных реакторов с графитовыми замедлителями нейтронов и с обычной водой в качестве теплоносителя. Реакторы считались опытно-производственными - предполагалась глубокая проработка проектов в процессе эксплуатации. Надо признать, что уже на стадии проектирования, а тем более строительства все работы по первому блоку велись с особой тщательностью - дело было новое, незнакомое. Продумывались, самые казалось, бы незначительные мелочи, на ходу устранялись неизбежные дефекты проекта, утрясались и согласовывались выявленные по ходу дела недоработки. И первенец удался на славу: в течение первых лет эксплуатации в чистом его дыхании почти не отмечалось ионизирующих включений.

В проектировании второго блока поднабравшиеся опыта специалисты пошли на некоторый риск, перейдя на одноконтурный теплоноситель, но зато с перегревом пара непосредственно в реакторе. Как и предполагалось, коэффициент полезного действия возрос на несколько процентов, но... Это едва ли входило в расчеты проектировщиков: в примыкающих к станции водоемах - Ольховском болоте и Белоярском водохранилище - появились первые признаки радиоактивного загрязнения.

Вот как это обнаружилось.

Известно, что паротурбинный цикл атомных электростанций в принципе таков же, как и на станциях тепловых. Для охлаждения отработанного пара в конденсаторах и других агрегатах используется обычна вода из близлежащего открытого водоема. Пройдя положенный цикл, охлаждающая (и теперь уже подогретая) вода должна быть радиационно чистой. Согласно проекту, проточная вода из водоема перетекает по каналам, надежно изолированным от реактора и теплоносителя - дистиллированной воды, обращающейся в замкнутом контуре; откуда бы в ней взяться техногенным радионуклидам? Поэтому сбрасывающаяся обратно в водоем подогретая вода даже не контролировалась на содержание радионуклидов. А зря! Свердловская областная санэпидстанция - кстати, независимая от БАЭС и московского ведомства, курирующего режимные объекты, - вскоре обнаружила в водохранилище заметное количество техногенных радионуклидов. И среди них, кроме продуктов ядерного деления урана - продукты наведенной активности, то есть явно реакторные загрязнения.

Это был первый звонок на станцию из санитарного надзора, и он заставил начальника службы радиационной безопасности БАЭС Н. В. Бескрестнова срочно посетить радиологическую лабораторию облСЭС, чтобы воочию убедиться: пробы из водохранилища действительно свидетельствуют о радиоактивном загрязнении. А тут новый сигнал: ручей, вытекающий из Ольховского болота, тоже несет в себе "не положенные" ему радионуклиды... Пришлось-таки станции срочно строить вторые очистные сооружения. Сооружения эти оснастили вермикулитовым фильтром - он способен в десятки раз снижать концентрацию техногенных радиоактивных элементов в сточных водах, особенно наиболее опасных из них - радионуклидов стронция и цезия. Однако отличные фильтры вскоре засорились, и пришлось их захоронить как радиоактивные отходы. Заменить их не удалось, и очистные сооружения станции вновь оказались на прежнем уровне. А Ольховское болото начало превращаться в неузаконенный могильник радиоактивных отходов...

Случались на БАЭС и газоаэрозольные выбросы - их также скрывали от населения. А такие долгоживущие радионуклиды, как тритий (тяжелый водород с периодом полураспада 12 лет) и углерод-14 (период полураспада - 5730 лет), образующиеся в реакторах и проникающие в помещение реакторного зала, а из него в окружающую среду, не контролировались и не учитывались вообще. Между тем, согласно экспериментальным измерениям, которые все же порой проводились, их выброс превышал допустимые нормы в несколько, а то и в десятки раз.

Атомная электростанция исподволь, стараясь по возможности избежать неудобного общественного внимания, распространяла свое опасное влияние на окружающую среду.
<h2>Белоярское водохранилище и река Пышма</h2>
Сущая правда, это не "Белоярское море", но и не колхозный пруд: случись в непогоду оказаться далеко от берега - прогулка может обернуться нелегким испытанием. Помню, случилось нам однажды с двумя сотрудниками замешкаться в верховье с отбором проб рыбы - попали в такой шторм, что еле выбрались. А то как-то раз в самый разгар лета и при отличной погоде известный композитор Евгений Павлович Родыгин рванул с ветерком на моторке и налетел на топляк. Спасатели его извлекли, почитай, уже с самого дна, да им же потом от него и досталось за невежливое обращение. В другой раз сами спасатели в первомайский праздничный денек, пригласив подружек, отправились поразвлечься на другом берегу - только их и видели. После у того берега нашли лишь перевернутый катер с пробоиной...

Но страшные истории, к счастью, бывают здесь редко, а зеленоватое зеркало в изумрудной оправе соснового леса так притягательно, что на противоположном от станции берегу за три с половиной десятилетия существования водохранилища прилепилось более сотни разнообразных баз отдыха для детей и взрослых - всевозможных "Ласточек", "Нептунов", "Чаек", "Петушков"... Но и у праздничного лика рукотворного уральского "моря" есть своя оборотная сторона. Представьте себе, что ни одна из баз на Белоярке не имеет канализации (в лучшем случае - выгребные ямы), централизованного водоснабжения (в лучшем случае - водозаборная скважина), не определено место свалки для твердых отходов. Зато отойди на несколько шагов от жилых корпусов - и непременно наткнешься на яму или просто лесную колдобину, заваленную зловонными отбросами, разным хламом, а вокруг, куда ни глянешь, - нечистоты, мусор. А тут еще рыбаки. Судя по снимкам, сделанным с вертолета, в воскресные дни на льду Белоярского водохранилища скапливается до пяти, а то и восьми тысяч любителей подледной ловли. С бытовыми удобствами на льду, сами понимаете... Да и до леса далековато. Сопоставьте все это - вот вам и разгадка, отчего в пионерских лагерях на побережье почти каждое лето случаются вспышки кишечных заболеваний.

Не однажды выдвигались проекты оздоровления прибрежной зоны водохранилища, но так и оставались на бумаге; не однажды санитарный надзор высказывал опасение, что, если не принять немедленных и радикальных мер, то скоро на белоярском берегу не останется ни рыбаков, ни отдыхающих. Уже в 1973 году специалисты Свердловской облСЭС сделали вывод о непригодности воды из водохранилища для горячего водоснабжения БАЭС и поселка энергетиков. Но знаете, что примечательно? Воду забраковали из-за загрязнения водоема тяжелыми металлами и болезнетворными бактериями, а техногенная радиоактивность даже в санитарно-запретной зоне оказалась в то время в тысячу с лишним раз ниже действовавших норм.

Прошли годы, санитарное состояние белоярской воды не стало лучше. Мало того, водохранилище, как всякая малопроточная вода, подверглось новой напасти - нашествию зеленых водорослей. Особенно в засушливые лета. Как это выглядит и какими последствиями чревато - особый разговор. Но вот что интересно. Где-то в конце восьмидесятых было проведено обследование по поводу содержания радионуклидов стронция и цезия одновременно в трех отдаленных друг от друга водоемах - в озерах Шарташ и Исетском и в Белоярском водохранилище. Исследовались пробы воды, донных отложений, рыбы и зеленой водоросли кладофоры - той самой, которой повсеместно затянуты прибрежные камни, коряги и прочие предметы. Результат получился интересный: повсюду содержание нуклидов было зафиксировано на уровне фона. Правда, при этом в Шарташе концентрация стронция и цези оказалась в 2-3 раза больше, чем в Исетском озере, и в 1,5-2 раза больше, чем в Белоярском водохранилище. Какой отсюда напрашивался вывод? Вы правы: радиационная чистота белоярских энергоблоков вне подозрений. Такой вывод и был сделан. Но прошло совсем немного времени - и во всех компонентах экосистемы Белоярского водохранилища стало отмечаться возрастание количества техногенных радионуклидов. Причем к тем, что наблюдались прежде, добавились и новые - радиоактивные кобальт и цинк. Индикатором послужила упомянута кладофора: оказалось, что эта водоросль накапливает весь спектр радионуклидов в тысячи раз больше, чем их содержится в такой же массе воды. Кстати, обнаружив это ее свойство, радиологи получили возможность намного оперативнее и точнее выявлять изменения в радиационной обстановке, используя громоздкие и трудоемкие анализы воды лишь для контроля. Пробы по кладофоре, увы, разрушили миф о радиационной чистоте второго блока БАЭС...

С середины семидесятых экосистема Белоярского водохранилища попадает под наблюдение еще одной независимой от атомного ведомства организации - биофизической станции (БФС) института экологии растений и животных Уральского отделения Академии наук СССР. Непростое для него решение о допущении "посторонней" организации в санитарно-защитную зону БАЭС принял научно-технический совет всемогущего Минсредмаша, выдвинув, однако, условие: БФС будет творить радиоэкологическую науку на благо атомной энергетике. Ученые это условие приняли с готовностью, усмотрев в нем воплощение мечты Н. В. Тимофеева-Ресовского, организатора этой станции в Ильменском заповеднике, о приближении научных исследований к практическим нуждам. Рисовалась заманчивая идея реализовать важную научно-практическую разработку Николая Владимировича - создать систему прудов-отстойников для полной очистки сточных вод от радиоактивных примесей. Хотя бы на том же Ольховском болоте. Или на промливневом канале, по которому слабоактивная вода сбрасывается в водохранилище.

Пруды-отстойники, увы, так и не появились - возможно, именно потому (есть такие неподтвержденные сведения), что их идея принадлежала Тимофееву-Ресовскому - тогда все еще опальному "Зубру". А основную продукцию БФС составили не практические рекомендации для атомщиков, а научные статьи - "птички" в научных отчетах. Их, правда, охотно читают американцы, не говоря уже о японцах, но почерпнутые из них сведения - неполные в силу режимных ограничений - порой служат не столько прояснению истины, сколько сотворению новых мифов.

Так или иначе, но независимые службы контролируют, руководство станции принимает меры, а через почти двадцать лет с момента начала эксплуатации БАЭС Ольховское болото вдруг (вдруг?) объявляется санитарно-защитной зоной. Оказывается, концентраци радионуклидов в его донных отложениях превысила нормы. По сути, оно превратилось в могильник радиоактивных отходов.

Конечно, Ольховское болото - потеря вроде бы небольшая: люди на нем, понятное дело, не живут, да и площадь его где-нибудь в пределах квадратного километра. Но оно всегда было заметной частью среды обитания местных жителей: по его берегам пасли скот, косили сено, собирали грибы и ягоды; на болоте до сих пор водится дичь, обитают лоси, не говоря уже о другой живности. А в вытекающей из него речке Ольховке сноровистые рыбаки ставили сети или ловили удочкой добрых ельцов. В пойме Ольховки до сих пор есть несколько родников с удивительно чистой водой - это значит, что сточные воды БАЭС пока что не имеют гидравлической связи (или, по крайней мере, связь эта пока малозаметная) с подземными водами...

Но если события станут развиваться в прежнем темпе, то через недолгие годы придется еще более расширить санитарно-защитную зону, включив в нее и окрестности болота, и речку Ольховку с ее поймой и теми самыми родниками, а потом и Пышму, а со временем и Северный ледовитый океан... Я не "накручиваю", не драматизирую обстановку. Дело в том, что радионуклиды уже найдены в иловых отложениях реки Пышмы на расстоянии чуть ли не в двести километров ниже устья Ольховки. Пока в небольшом количестве. Пока...

Как разрубить этот узел? Общий ответ может быть только один: перестать сбрасывать радиоактивные отходы в открытые водоемы. Но как этого достигнуть? Если не останавливать АЭС (как известно, и такой вариант активно дебатируется сейчас в мире), то остаются два пути: совершенствование системы очистки и совершенствование самой технологии ядерной энергетики. Первый путь, как вы убедились, был у нас опробован, но по разным причинам удовлетворительных результатов не дал. Второй путь на Белоярской атомной связывают с освоением реактора на быстрых нейтронах.
<h2>Благополучный реактор?</h2>
Третий опытно-промышленный блок с реактором на быстрых нейтронах БН-600 строился 12 лет и был пущен в эксплуатацию в 1980 году. Его коренное отличие от реакторов двух первых блоков - новый тип ядерной реакции: без замедления нейтронов и, следовательно, без графитового замедлителя в тепловыделяющих сборках. Быстрые нейтроны образуются из окиси слабо обогащенного урана-235 в смеси с окисью плутония и взаимодействуют с ядрами мишени из природного урана-238, при этом тепловая энергия поглощается теплоносителем из жидкого натрия. Далее через теплообменник "натрий-натрий", который находится внутри реактора, тепло по второму контуру теплоносителя передается в парогенератор "натрий-вода", ну а там уже знакомая тепловая схема: пар - турбина - конденсатор. Коэффициент полезного действия блока БН-600 поднялся до 41,6 процента (на 4,2 процента выше, чем у второго блока). Вырабатывая электроэнергию, блок одновременно нарабатывает новое ядерное горючее - плутоний (поэтому реактор этого типа называют еще реактором-размножителем). Этот букет достоинств венчается еще и высоким уровнем радиационной безопасности: ведь участвующая в технологическом цикле вода из открытого водоема нигде не соприкасается с теплоносителем, аккумулирующим тепло ядерной реакции, реактор заключен в герметическую оболочку и облачен в "панцирь" биологической защиты, а в результате "радиоактивные выбросы в атмосферу в несколько десятков раз ниже нормы, жидкие радиоактивные сбросы практически отсутствуют, дозы облучения персонала значительно ниже допустимых" (цитата заимствована из проспекта, предназначенного для иностранцев).

Схема работающего блока с реактором на быстрых нейтронах, признанная столь удачной, развивается в проекте четвертого блока с реактором БН-800, где предусмотрен ряд дополнительных усовершенствований, в частности - улучшение защиты реактора. (Четвертый блок начали было сооружать, но потом работы были остановлены.)

Однако ни третий, ни четвертый блоки не гарантируют от последствий возможного взрыва в реакторе - конструкция не предусматривает защитного корпуса, который мог бы локализовать последствия аварии этого типа. Кстати, реактор "Супер-Феникс" во Франции - тоже работающий на быстрых нейтронах и по мощности превышающий белоярский БН-600 в два раза - заключен в прочной железобетонной оболочке.

Стопроцентной гарантии безопасности не дает и эта конструкция; работа по созданию полностью самозащищенных реакторов - одно из приоритетных направлений ядерной энергетики в западных странах.

Предполагается, что задача будет разрешена где-то в начале будущего столетия.

Но и при нормальной эксплуатации блока БН-600 возможность загрязнения среды радиоактивными отходами остается. В реакторе на быстрых нейтронах помимо плутония образуются инертные радиоактивные газы (ИРГ), тяжелый водород тритий, возможно - углерод-14 (такое предположение в свое время делал академик А.Д.Сахаров), натрий-24, цезий-137, кобальт-60 (цифры означают атомный вес элемента). Выброс их в атмосферу действительно незначителен и радиационной опасности не представляет, но он все же есть, что зафиксировано нашими измерениями по цезию-137 в 1993 году и что противоречит утверждениям атомщиков о его совершенной невозможности.

Но небольшое количество радиоактивного цезия не стоило бы отдельного разговора. Гораздо опаснее тритий, непрерывно образующийся в реакторе и проникающий сквозь все защитные оболочки. Около 95 процентов его попадает в водопаровую смесь третьего контура и через технологические каналы сбрасывается в Ольховское болото и Белоярское водохранилище. Доступна информация о содержании трития на выходе из каналов почему-то отсутствует, хотя ведомственный институт - ВНИИАЭС - проводил соответствующие замеры во всех точках, где можно было ожидать попадания трития во внешнюю среду.

Однако в воде Ольховского болота только за период с 1980 по 1986 год содержание трития превышало допустимую концентрацию в два-четыре раза. Отсюда радиоактивный изотоп разносится течением рек Ольховки и Пышмы. В огромной емкости Белоярского водохранилища (примерно 265 млн. куб.м.) сбросы трития малозаметны: концентрация изотопа превышает здесь фоновый уровень всего лишь в несколько раз и составляет - вместе с тритием естественного происхождения - всего лишь около 4,5 процента от допустимого уровня. Однако же здесь его в 2,5 раза больше, чем в Рефтинском водохранилище, и концентрация продолжает возрастать. Темпы прироста невелики - не более двух процентов в год, то есть еще в течение десятков лет может не возникнуть повода для особого беспокойства. Правда, если не задумываться над тем, почему он вообще попадает в водоемы, если это не предусмотрено технологической схемой. И не обращать внимания на то, что выброс трития постоянно идет также и через вентиляционную трубу. К тому же и время летит так быстро...

Кстати, о времени. Для атомных электростанций вектор времени оборачивается еще одной трудноразрешимой проблемой.
<h2>Радиация на долгую память</h2>
Безотходных АЭС нет во всем мире. Отсюда резонный вопрос: куда деваются радиоактивные отходы (РАО) БАЭС? Да, конечно, какая-то их часть (мизерная, к счастью) попадает в окружающую среду - в то же Ольховское болото. Высокоактивные жидкие отходы выпариваются в специальных установках, высушиваются, подвергаются бетонированию либо битумизации и в виде твердых кубов направляются на хранение в подземный могильник. Отвержденные РАО с некоторых АЭС страны перевозятся в спецвагонах по железной дороге в район Красноярска - там оборудован большой "централизованный" могильник для ядерных отходов.

Белоярская АЭС располагает собственным могильником для твердых РАО, рассчитанным на их хранение в течение тысячи лет. Есть здесь и хранилище для жидких среднеактивных отходов (ХЖО) - тут они выдерживаются до распада короткоживущих радиоактивных изотопов, после чего направляются для переработки в твердые РАО. Сооружения для отходов устроены по принципу "банка в банке", то есть одна водонепроницаема емкость помещена в другой и обе - на несколько метров выше уровня грунтовых вод.

Вокруг хранилищ пробурены скважины для контроля за радиационной чистотой подземных вод.

Аналогичные предосторожности предусмотрены и в обращении с отработанным ядерным топливом (ОЯТ) - тепловыделяющими элементами (твэлами) и тепловыделяющими сборками (ТВС) - до отправки их на завод по регенерации ядерного топлива и извлечения наработанного плутония.

Но все это, увы, в теории. А на деле... На промплощадке БАЭС накопилось огромное количество РАО во всех видах - непроходящая головная боль для руководства станции и служб, обеспечивающих ее безопасность. Ведь радиоактивные отходы - это вам не безобидные отвалы на каком-нибудь горно-обогатительном комбинате, весь вред от которых заключается лишь в том, что они занимают много места. Читатель знает о трагедии в Кыштыме в 1957 году, возможно, слышал и о ЧП в Томске-7 в 1993 году. В декабре 1992 года случилась утечка жидких РАО и на БАЭС - отходы попали в водохранилище. Мир ломает голову в поисках надежных способов захоронения РАО, а тем временем нарабатываются новые отходы, строятся новые могильники - временные, "до лучших времен".

Может быть, вы думаете, что речь идет о каких-то килограммах ядерных материалов (ибо один из самых распространенных доводов в пользу АЭС состоит в том, что к ним не нужно топливо возить эшелонами)? К сожалению, в отходы идут не только продукты ядерной реакции. Примерно в километре к северо-востоку от БАЭС - в пределах санитарно-защитной зоны - оборудована площадка, где складируется малоценное оборудовние и мягкие материалы, не подлежащие дезактивации. И содержимое этой свалки - а как иначе назовешь? - тоже попадает в категорию РАО. Это "хранилище" соседствует со свалкой обычных отходов, почти не огорожено и почти не охраняется - только домик с охранником на въезде. Расчет на то, что вокруг болото и лес - кто пойдет? Еще как идут! Радиоактивность ведь глазом не углядишь и пальцами не пощупаешь, а там ведь какой выбор для хозяйственных мужичков и предприимчивых бомжей: вполне целые кирпичи, новая на вид фильтровентиляционная ткань, обрезки и детали арматуры, металлическая сетка, рулоны бумаги. Да мало ли чего можно выбросить!..

Сами реакторы после прекращения их эксплуатации тоже попадают в категорию РАО. Судьба их решается по-разному: то они выдерживаются в расчете на будущее использование (надо подождать всего-то триста лет, и можно снова в работу), то реконструируются с помощью роботов (пока только попытки), а то просто закрываются бетонированным колпаком - наподобие чернобыльского саркофага. Решение относительно первых двух белоярских реакторов пока не принято. Во всяком случае, до зеленой лужайки ой как далеко.

Но если судьбой радиоактивных отходов с достаточно интенсивным излучением руководство станции как-то занимается, то слабоактивные отходы с самого начала эксплуатации БАЭС и до 1993 года сливались в водохранилище через обводной канал вообще без всякого контроля. Канал этот, по словам первого начальника службы радиационной безопасности, служил для сброса нерадиоактивных стоков хозяйственных цехов станции. Однако, как установлено независимой экспертизой, через этот канал шли радиоактивные стоки - в частности, с высоким содержанием трития. Многие годы тихой сапой загрязнялся Голубой залив - это романтическое название шло от базы отдыха, стоявшей на его берегу. Кстати, неподалеку - совсем уже близ устья канала - находился генеральский дом рыбака. Возможно, сам командующий округом любовался из окон этого дома чудесным пейзажем, композиционным центром которого была местная достопримечательность - кудрявый островок с поэтическим названием Дунькин пуп... Нет больше Голубого залива, есть Гнилой залив - одно из самых неблагополучных мест на Белоярском водохранилище.

Сброс слабоактивных стоков от двух первых энергоблоков в Теплый залив обнаружился при обстоятельствах почти анекдотических. Проектировщики блока БН-800 из Ленинградского института "Атомтеплоэлектропроект" появились в Свердловской облСЭС дл согласования мест выпуска дебалансных (то есть "не поместившихся" в технологический контур) вод. Они утверждали, что в проектах первых двух блоков сброс техногенных радионуклидов вообще был не предусмотрен - невольно выдали коллег! А дело в том, что в тонкости проектов радиометристов из СЭС до того не посвящали, зато они сами, воспользовавшись методом биоиндикации (то есть подвернув анализу водоросли), обнаружили в водах Теплого залива стронций-90, цезий-137, церий-144, кобальт-60, цинк-65... Откуда ж эти незаконные поселенцы? Сделали официальный запрос, и БАЭС вынуждена была подтвердить, что "утечки" радиоактивности через Теплый залив случались. И, разумеется, без всякого контроля - раз по проекту здесь все должно быть чисто!

"Незаконные" утечки радиоактивной водички с первых двух блоков скрывали, возможно, для того, чтоб поддержать высокий престиж советской атомной техники. Но расползающую радиоактивность скрывали уже по другому мотиву: "чтоб не вызвать панику населения". На этот счет даже были особые указания органов госбезопасности. Поэтому у моста через реку Ольховку ставился знак не радиационной опасности, а запретной зоны. Ну, запретная так запретная, наш народ к запретам привычен, мост можно и не переезжать. А вот отдохнуть на лужайке перед мостом в хорошую погоду, испить родниковой чистой (как казалось) водички, почерпнутой с незапретного берега реки, - это за милую душу. Случилось как-то, общественный инспектор радиационного контроля обнаружил на приветливом берегу стайку детишек из Асбеста при автобусе и с учительницей: путешественники завтракали, аппетитно запивая бутерброды водичкой из Ольховки. То-то они были ошарашены, когда узнали, что за химический коктейль в их кружках! В другой раз тот же инспектор просветил владельца "жигуленка", испившего вкусной влаги из Ольховки и даже наполнившего канистру про запас. Автопутешественник был непрост: он оказался директором одного из предприятий Асбеста и водил дружбу с директором БАЭС. Надо полагать, вечерком он позвонил приятелю и поделилс вновь обретенным полезным опытом. Директор же, предполагаю, незамедлительно поделился своими чувствами с главным врачом инспекции, и уже на следующий день у благого "просветителя" было отобрано инспекторское удостоверение. Одновременно службе радиационной безопасности все же дано было указание выставить не только у моста, но и по берегу разъяснительные аншлаги, что и было сделано незамедлительно - под угрозой лишения квартальной премии. Правда, потом эти железки, обмытые дождями и овеянные ветрами, выцвели, обшелушились...

Радиоактивная "грязь" коварна, ибо не имеет ни цвета, ни запаха. И даже жители чернобыльской зоны позволяют себе порой пренебрегать пристутствием невидимого и неосязаемого врага, полагаясь на сакраментальный принцип: авось пронесет! Но вот как незамысловато и обыденно происходят в жизни непредвиденные встречи с "рентгенами".

Как-то известный на Урале ученый-геофизик Г. П. Саковцев поехал по делам службы в Курганскую область. Долго ехали на "уазике" по летней жаре и остановились передохнуть на берегу какой-то безымянной речки с берегами, покрытыми кружевами яркой зелени. Водитель, как случается в дальней дороге, полез в мотор, а Глеб Павлович, воспользовавшись паузой, освежился в прохладной и чистой воде. На другой уже день незадачливый купальщик обнаружил на теле неожиданный загар и ощутил совсем уж неуместный зуд.

Встревоженный, он проследил по карте свой маршрут и сделал для себя ошеломляющее открытие: красивая речка, оказывается, имела имя, и имя то было - Теча... Глеб Павлович прожил еще несколько лет и умер от инфаркта - преждевременно, как справедливо утверждалось в некрологе.

А вот еще случай. Южнее Ольховского болота в хорошем сосновом лесу расположилс пионерский лагерь "Искорка". Однажды группа девочек из лагеря, прогуливаясь, вышла на берег болота. День был жаркий, а тут обнаружился некий бассейн, сооруженный военными. Почему бы не искупаться? Правда, вода оказалась холодноватой, и лишь двое из них, самые бойкие, рискнули окунуться, даже вымазались, под смех подружек, "лечебной" грязью. У обеих вскоре обнаружились на теле красноватые пятна, у одной дело закончилось лейкемией...

Сколько еще таких сюжетов таит в себе коллизия с утечками, которые не были предусмотрены проектами, и с выбросами, которые не разглашались из высоких государственных соображений!
<p style="text-align: right;"><em>Опубликовано в журнале:
«<strong>Урал</strong>» 1996, №2
<strong>Леонид Пискунов</strong>
Ядерный объект за околицей уральской столицы</em>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>55</wp:post_id>
<wp:post_date>2008-12-13 00:50:19</wp:post_date>
<wp:post_date_gmt>2008-12-12 19:50:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>beloyarskaya-nuclear-station-and-some-horror-facts</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229111519</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>beloyarscaya-nuclear-station-and-some-horror-facts</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Правильное открытие popup-окон на Javascript</title>
<link>http://torqueo.net/javascript-popups/</link>
<pubDate>Thu, 22 Jan 2009 06:38:04 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

<guid isPermaLink="false">http://torqueo.net/%d0%bf%d1%80%d0%b0%d0%b2%d0%b8%d0%bb%d1%8c%d0%bd%d0%be%d0%b5-%d0%be%d1%82%d0%ba%d1%80%d1%8b%d1%82%d0%b8%d0%b5-popup-%d0%be%d0%ba%d0%be%d0%bd-%d0%bd%d0%b0-javascript/</guid>
<description></description>
<content:encoded><![CDATA[По работе понадобился скрипт, открывающий popup-окна. Написал свой, достаточно универсальный и удобный в использовании.  В этой заметке я покажу, как правильно открывать popup-окна на странице. Фреймворки не используются.
<pre><code class="javascript">/*
	Useful tools.
	Author: venom
	Date: 22.01.2009
*/

// Merging two objects
Object.prototype.extend = function(extended) {
	for (var key in (extended || {})) this[key] = extended[key];
	return this;
}

// Utilities object
var Utils = {

	// Show popup window
	popup: function(options) {
		var options = {
			url        : '/',
			width      : 800,
			height     : 600,
			name       : 'popup',
			location   : 1,
			status     : 0,
			scrollbars : 0,
		}.extend(options);

		options.x = (screen.width/2)-(options.width/2);
		options.y = (screen.height/2)-(options.height/2);

		var w = window.open(options.url, options.name,
			"location="+options.location+
			",status="+options.status+
			",scrollbars="+options.scrollbars+
			",width="+options.width+
			",height="+options.height+
			",top="+options.y+
			",left="+options.x);

		w.focus();
		return w;
	}
}</code></pre>
В HTML это выглядит так, но лучше обращаться по идентификатору (id) ссылки (Unobtrusive Javascript),  а не как здесь:
<pre><code class="html">&lt;script type="text/javascript" src="scripts/utils.js"&gt;&lt;/script&gt;
&lt;a href="/visit_shop.html" onclick="Utils.popup({ url : this.href }); return false;"&gt;Заглянуть в магазин&lt;/a&gt;</code></pre>
Как видно, здесь в качестве аргумента функции мы передаем объект, а не уродливую строку параметров, как обычно делают всякие деятели. Кроме того, есть настройки по-умолчанию, что видно из скрипта. И, кстати, обратите внимание на стиль кодирования - именно так пишутся скрипты под Javascript, а не глобальными функциями (методами объекта window), как многие привыкли делать.

<strong>Апдейт:</strong>

Если у кого не работает этот код, то скорее всего вы используете какой-то JS фреймворк и он конфликтует с <em>Object.prototype.extend. </em>Значит, удалите прототип<em> </em>Object.prototype.extend]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>63</wp:post_id>
<wp:post_date>2009-01-22 11:38:04</wp:post_date>
<wp:post_date_gmt>2009-01-22 06:38:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>javascript-popups</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241090102</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d0%bf%d1%80%d0%b0%d0%b2%d0%b8%d0%bb%d1%8c%d0%bd%d0%be%d0%b5-%d0%be%d1%82%d0%ba%d1%80%d1%8b%d1%82%d0%b8%d0%b5-popup-%d0%be%d0%ba%d0%be%d0%bd-%d0%bd%d0%b0-javascript</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1370</wp:comment_id>
<wp:comment_author><![CDATA[Антон Тишков]]></wp:comment_author>
<wp:comment_author_email>3freeman3@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>78.29.116.245</wp:comment_author_IP>
<wp:comment_date>2010-04-15 23:30:22</wp:comment_date>
<wp:comment_date_gmt>2010-04-15 18:30:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А можно ли как-то замаскировать этот попап?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Как раширения Firefox нам строить и жить помогают</title>
<link>http://torqueo.net/how-firefox-extensions-help-us-to-build-and-liv/</link>
<pubDate>Tue, 27 Jan 2009 12:58:25 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=68</guid>
<description></description>
<content:encoded><![CDATA[Так как в данный момент моя жись повернулась так, что я стал верстальщиком, а точнее Front-end Engineer'ом, так как приходится разрабатывать JS и заниматься отладкой клиентских веб-приложений, то я решил пожертвовать некоторым количеством рабочего времени и написать небольшую заметку.

Все, кто занимается версткой под веб отлаживают свои шаблоны под различные браузеры. Ну ладно, не все :). Я из тех, кто делает это. В своей работе я использую кучу полезных расширений для Firefox:
<ol>
	<li><a href="https://addons.mozilla.org/firefox/addon/60"><strong>WebDeveloper</strong></a>. Незаменимое расширение, обладает внушающим количеством возможностей. Очень часто использую для того, чтобы что-то подправить в коде страницы налету. Так же использую для получения самой различной информации о странице и блоках в ней. Так же с помощью этого расширения чищу куки, смотрю css код, отключаю js, подсвечиваю блоки, изменяю размеры страницы и меряю что-нибудь встроенной линейкой :). Это то, в чём мне помогает Webdeveloper чаще всего.</li>
	<li><a href="http://www.getfirebug.com/"><strong>Firebug</strong></a>. Ну кто не знает про Firebug? Воистину мощное расширение, с которым я работаю постоянно в процессе верстки. Чаще всего при помощи него я инспектирую какой-либо элемент и смотрю его границы, отступы и то, какими css стилями обладает элемент. Часто подправляю на лету css свойства элемента, чтобы сразу же увидеть произошедшие изменения. Очень удобно, не надо открывать редактор и править HTML и CSS код. Бывает, исследую верстку некоторых сайтов - и тут Firebug очень помогает. Когда пишу Javascript, очень пригождается просмотр DOM дерева при помощи Firebug. Консоль вот юзаю нечасто. Так же пригождается просмотр асинхронных запросов к сайту и контроль загрузки внешних ресурсов (скриптов, картинок, css) во вкладке Net.</li>
	<li><a href="http://tools.sitepoint.com/firescope/"><strong>Firescope</strong></a>. Это новое расширение для расширения Firebug, как бы странно это не звучало. Это такой своеобразный cheatsheet, который показывает, как элемент поддерживается в различных браузерах и имеет ли баги. Отображается все это дело в виде таблички в новой вкладке Фаербага Reference, которая появляется после установки Firescope.</li>
	<li><a href="https://addons.mozilla.org/ru/firefox/addon/748"><strong>Greasemonkey</strong></a>. Это расширение, как все знают, позволяет подключать к сторонним сайтам свой JS файлы. Однажды, это расширение мне очень помогло. С этим связана отдельная история, в которой завязаны и другие расширения кроме Greasemonkey, и я, пожалуй, расскажу её прямо здесь.</li>
</ol>
Итак - история.

Как то раз на работе мне дали задание. Необходимо было сделать так, чтобы некий сайт, который отлично работал под IE 6, так же отлично стал бы работать и в других браузерах. Сайт, а точнее это был некоторый информационный интерфейс, типа такого, которые работают в автоматах оплаты ОСМП и прочих, уже был в продакшене, и поэтому пароли от него или локальную версию "закрысили" :).
Пришлось раскинуть мозгами, как поступить в данной ситуации. Сначала пришло неправильное решение сохранить сайт локально. Но на сайте было дофига AJAX'а и от этой идеи пришлось отказаться. И тут эврика - я вспомнил про существование Greasemonkey!

Я сделал следующее:
<ul>
	<li>Установил Greasemonkey</li>
	<li>Сохранил все JS скрипты с этого сайта в файл и подключил его к Greasemonkey.</li>
	<li>При помощи <a href="https://addons.mozilla.org/ru/firefox/addon/1865">Adblock Plus</a> забанил все JS на сайте</li>
</ul>
Таким образом получилось, что скрипты брались с моего локального компьютера в процессе рендеринга веб-страницы. Теперь я мог локально править JS и видеть изменения на сайте в продакшене. И вроде все было в шоколаде, пока я не обнаружил, что в теле страницы, в таге body, стоит onload вызов функции JS, которая теперь находилась у меня в user-скрипте Greasemonkey. По непонятным причинам, вызов этой функции происходил раньше, чем загружался и инициализировался мой скрипт и естественно, происходила ошибка. Хотя в документации написано, что Greasemonkey срабатывает по domready.
Вобщем, не стал я долго разбираться, а поставил <a href="http://www.proxomitron.ru/">Proximitron</a> и вырезал нафиг все мешающие вызовы прямо из тела HTTP запроса, написав для этого пару нехитрых правил. После продолжительных мучений, скрипты стали кроссбраузерными.

Вот такая вот фигня)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>68</wp:post_id>
<wp:post_date>2009-01-27 17:58:25</wp:post_date>
<wp:post_date_gmt>2009-01-27 12:58:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-firefox-extensions-help-us-to-build-and-liv</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1246721835</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Internet Explorer и создание динамических таблиц</title>
<link>http://torqueo.net/internet-explorer-and-creating-dynamic-tables/</link>
<pubDate>Wed, 04 Feb 2009 06:58:54 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

<guid isPermaLink="false">http://torqueo.net/internet-explorer-%d0%b8-%d1%81%d0%be%d0%b7%d0%b4%d0%b0%d0%bd%d0%b8%d0%b5-%d0%b4%d0%b8%d0%bd%d0%b0%d0%bc%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%b8%d1%85-%d1%82%d0%b0%d0%b1%d0%bb%d0%b8%d1%86/</guid>
<description></description>
<content:encoded><![CDATA[Если вы хотите динамически, при помощи JavaScript создать таблицу в IE 6, то не забывайте создавать в таблице элемент <strong>tbody</strong>, иначе IE (будь он неладен), не захочет вставить таблицу в указанный контейнер (вы ничего не увидите).

Я сейчас из-за этой баги потратил много времени, перебрав построчно исходник весом в 7 кб.
Вот, как правильно создавать таблицу (код c использованием <a href="http://mootools.net">Mootools</a>):

<pre>
<code class="javascript">var table = new Element('table');
var tbody = new Element('tbody').inject(table)
var tr = new Element('tr').inject(tbody);
new Element('td').set('text', 'some').inject(tr)
table.inject(document.body)</code>
</pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>69</wp:post_id>
<wp:post_date>2009-02-04 11:58:54</wp:post_date>
<wp:post_date_gmt>2009-02-04 06:58:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>internet-explorer-and-creating-dynamic-tables</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241089949</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>internet-explorer-%d0%b8-%d1%81%d0%be%d0%b7%d0%b4%d0%b0%d0%bd%d0%b8%d0%b5-%d0%b4%d0%b8%d0%bd%d0%b0%d0%bc%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%b8%d1%85-%d1%82%d0%b0%d0%b1%d0%bb%d0%b8%d1%86</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>dsc_1600nef</title>
<link>http://torqueo.net/right-code-process-at-fog-creek/dsc_1600nef/</link>
<pubDate>Mon, 09 Feb 2009 05:07:20 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/02/dsc_1600nef.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>71</wp:post_id>
<wp:post_date>2009-02-09 10:07:20</wp:post_date>
<wp:post_date_gmt>2009-02-09 05:07:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dsc_1600nef</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>70</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/02/dsc_1600nef.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/02/dsc_1600nef.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"912";s:6:"height";s:3:"612";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:23:"2009/02/dsc_1600nef.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"dsc_1600nef-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"dsc_1600nef-300x201.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"201";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>dsc_1602nef</title>
<link>http://torqueo.net/right-code-process-at-fog-creek/dsc_1602nef/</link>
<pubDate>Mon, 09 Feb 2009 05:07:21 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/02/dsc_1602nef.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>72</wp:post_id>
<wp:post_date>2009-02-09 10:07:21</wp:post_date>
<wp:post_date_gmt>2009-02-09 05:07:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dsc_1602nef</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>70</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/02/dsc_1602nef.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/02/dsc_1602nef.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"429";s:6:"height";s:3:"640";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:23:"2009/02/dsc_1602nef.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"dsc_1602nef-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"dsc_1602nef-201x300.jpg";s:5:"width";s:3:"201";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Вот как надо правильно кодить</title>
<link>http://torqueo.net/right-code-process-at-fog-creek/</link>
<pubDate>Mon, 09 Feb 2009 05:13:23 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=70</guid>
<description></description>
<content:encoded><![CDATA[Вот так вот работают люди в конторе <a href="http://www.fogcreek.com/">Fog Creek</a> на Манхэттэне. Стоя наверное прикольно кодить, я бы попробовал, вот только стол нужно высокий, а нету. Еще прикольно попробовать кодить стоя в это время на степпере или беговой дорожке :). В общем, смотрим фотки:

[gallery columns="2"]

Это не как мы с вами друг на друге обычно сидим :). Остальные фотки можно ценить на <a href="http://picasaweb.google.com/spolsky/FogCreekSNewOffice">пикасе</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>70</wp:post_id>
<wp:post_date>2009-02-09 10:13:23</wp:post_date>
<wp:post_date_gmt>2009-02-09 05:13:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>right-code-process-at-fog-creek</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241144070</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>right-code-process-at-for-creek</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>17</wp:comment_id>
<wp:comment_author><![CDATA[Vano]]></wp:comment_author>
<wp:comment_author_email>safrio@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.248.159.67</wp:comment_author_IP>
<wp:comment_date>2009-02-21 18:36:19</wp:comment_date>
<wp:comment_date_gmt>2009-02-21 13:36:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Стоя работать ноги отвалятся.
Самое оптимальное - лежа, но там кровоток наверное не естественный будет, да и для здоровья телу необходимо движение..

В будущем по ГОСТу на любом рабочем компе должна будет стоять прога, для расслабления глазных и кистевых мыщц, а также рабочее место будет снабжено какими-то тренажерами как минимум для нормальной работы позвоночника, ну и вообще эргономика рабочего места будет рассчитываться исходя из схожих мыслей.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>18</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.115.176.40</wp:comment_author_IP>
<wp:comment_date>2009-02-22 23:49:43</wp:comment_date>
<wp:comment_date_gmt>2009-02-22 18:49:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну кстати лежа не удобно аще. Пробовал. Галимо.

Ну а стоя - постоя-покодил, надоело - присел :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>19</wp:comment_id>
<wp:comment_author><![CDATA[Vano]]></wp:comment_author>
<wp:comment_author_email>safrio@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.248.159.67</wp:comment_author_IP>
<wp:comment_date>2009-02-23 07:29:10</wp:comment_date>
<wp:comment_date_gmt>2009-02-23 02:29:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Лежа сконцентрироваться проще.
Тебе не понравилось видимо потому что руками тянуться надо было и моник не перед глазами был.
И я имел в виду "лежа на спине, руки вдоль туловища или немного вбок, монитор/очки перед глазами".
Или как народ в матрицу погружали в фильме хотя бы..

По поводу работы стоя - любое статичное напряжение в течении долго времени вредно для наших тушек, в положении же сидя большая часть мышц расслаблена, но остаются проблемные зоны: кисти, шея, плечевой пояс, позвоночник и глаза.
При работе лежа все проблемы, за исключением глаз исчезают.

Не даром спина называется называется спиной.
Спи-на, т.е. это часть туловища, на которой надо спать. Ну либо вообще статично находиться максимально возможное количество времени.
Жопа же отчего-то не зовется "сидина" :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Что такое разочарование</title>
<link>http://torqueo.net/what-is-disappointing/</link>
<pubDate>Thu, 19 Feb 2009 06:05:42 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[рутина]]></category>

		<category domain="category" nicename="%d1%80%d1%83%d1%82%d0%b8%d0%bd%d0%b0"><![CDATA[рутина]]></category>

<guid isPermaLink="false">http://torqueo.net/%d1%87%d1%82%d0%be-%d1%82%d0%b0%d0%ba%d0%be%d0%b5-%d1%80%d0%b0%d0%b7%d0%be%d1%87%d0%b0%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5/</guid>
<description></description>
<content:encoded><![CDATA[Разочарование - это когда вам насрала птица на голову в день зарплаты.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>75</wp:post_id>
<wp:post_date>2009-02-19 11:05:42</wp:post_date>
<wp:post_date_gmt>2009-02-19 06:05:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>what-is-disappointing</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1235023896</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d1%87%d1%82%d0%be-%d1%82%d0%b0%d0%ba%d0%be%d0%b5-%d1%80%d0%b0%d0%b7%d0%be%d1%87%d0%b0%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>16</wp:comment_id>
<wp:comment_author><![CDATA[Vano]]></wp:comment_author>
<wp:comment_author_email>safrio@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.248.159.67</wp:comment_author_IP>
<wp:comment_date>2009-02-21 18:24:51</wp:comment_date>
<wp:comment_date_gmt>2009-02-21 13:24:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Не.
Разочарование, это когда птица насрала на голову ВМЕСТО зарплаты..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Хинты по вёрстке. Для тех, кто не знал.</title>
<link>http://torqueo.net/html-css-hints/</link>
<pubDate>Tue, 24 Feb 2009 06:07:30 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[вёрстка]]></category>

		<category domain="category" nicename="%d0%b2%d1%91%d1%80%d1%81%d1%82%d0%ba%d0%b0"><![CDATA[вёрстка]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=79</guid>
<description></description>
<content:encoded><![CDATA[Я иногда записываю какие-либо полезняшки для себя, чтобы не забыть что-то и чтобы они всегда под рукой были. Такие вот записочки. Решил вот выставить на всеобщее обозрение, я думаю пригодится эта информация:
<ol>
	<li>Если используется <em>XHTML 1.1 Transitional</em> в <em>IE</em>, а на странице есть таблица с <em>height 100%</em>, а в ней хедер и контент, и в контент-зоне еще одна таблица с высотой <em>100%</em>, то вложенная таблица становится по высоте равной <em>viewport'у</em> браузера.</li>
	<li> <em>-moz-box-sizing</em> применяется только в случае, если страница рендерится в режиме совместимости. В остальных случаях это не дает эффекта, так как IE в режиме XHTML поддерживает блочную модель W3C. Подробнее о режиме совместимости здесь: <a href="http://en.wikipedia.org/wiki/Quirks_mode">Quirks_mode</a></li>
	<li> Если указываем в начале файла конструкцию, подобную <em>&lt;?xml version="1.0" encoding="utf-8"?&gt;</em>, то IE работает в режиме совместимости, который нам нафиг не нужен (зачем, на самом деле?). Кроме того, если перед объявление <em>DOCTYPE </em>есть что-либо кроме пробелов, то IE будет работать в режиме совместимости! Но в этом случае пригодится <em>-moz-box-sizing</em>, чтобы сделать поведение блоков одинаковым в обоих браузерах (Опять же, это костыль, лучше использовать XHTML).</li>
	<li> Определить, находится ли браузер в режиме совместимости можно, запустив на странице Javascript код <em>alert(document.compatMode)</em>. Если появится сообщение <em>"BackCompat"</em> - браузер в режиме совместимости.</li>
	<li>В блочной модели W3C к ширине блока прибавляются границы (margin), бордюр (border) и отступы (padding). Поэтому, при наличии бордюров, границ или отступов, если вы хотите, чтобы сохранилась старая ширина блока, нужно отнять эти границы, отступы и бордюры от ширины блока. То, что получится - будет новой шириной блока.</li>
	<li>Забиваем на IE 5.+, больше не понадобятся хаки типа <em>w\idth:228px</em> от <em>Tantek Celik'a</em>. Хватит уже поддерживать старые браузеры и тянуть за собой старое дерьмо.</li>
	<li> Если в родительском неплавающем блоке лежит плавающий блок, то, чтобы родительский блок растянулся по размерам дочернего блока, надо родительскому блоку установить <em>overflow: hidden</em>. В IE это лечится установкой родительскому блоку свойтва <em>hasLayout</em> ( <em>zoom: 1</em> или <em>height: 1%</em>), или установкой родительскому блоку ширины (что тоже устанавливает блоку свойство <em>hasLayout</em>).</li>
	<li> Максимальную и минимальную ширину сайта в IE можно сделать так:
<em>width: expression((w = (document.documentElement.clientWidth || document.body.clientWidth) - 20) &gt; 800 ? '800px' : (w &gt; 400 ? 'auto' : '400px'));</em>
/* Число <em>"20"</em> в формуле - величина горизонтального padding'а document.body (если он есть) */</li>
	<li> Если что-то глючит в ИЕ - следует прочитать: <a href="http://cssing.org.ua/2005/11/11/ie-magic/">http://cssing.org.ua/2005/11/11/ie-magic/</a> и глянуть <a href="http://www.positioniseverything.net/ie-primer.html">http://www.positioniseverything.net/ie-primer.html</a> а так же <a href="http://www.positioniseverything.net/articles/ie7-dehacker.html">http://www.positioniseverything.net/articles/ie7-dehacker.html</a></li>
</ol>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>79</wp:post_id>
<wp:post_date>2009-02-24 11:07:30</wp:post_date>
<wp:post_date_gmt>2009-02-24 06:07:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>html-css-hints</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1235457415</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>IE and checkbox onchange event</title>
<link>http://torqueo.net/ie-and-checkbox-onchange-event/</link>
<pubDate>Fri, 13 Mar 2009 04:35:16 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[IE bugs]]></category>

		<category domain="category" nicename="ie-bugs"><![CDATA[IE bugs]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=84</guid>
<description></description>
<content:encoded><![CDATA[Damn, fuckin' Interner Explorer does not works correctly with checkbox "onchange" event.
IE does not send change event when the checkbox has been clicked, only after the element has lost focus (what a fuck?).

This does not work in Internet Explorer:
<pre><code>checkbox.addEvent('change', function() {
    alert('I have succeeded?');
});</code></pre>
Therefore, we are forced to use an "onclick" event instead of "onchange" event.

This should work in Internet Explorer:
<pre><code>checkbox.addEvent('click', function() {
    alert('I have succeeded!');
});</code></pre>
I hope that IE developers will change this checkbox behavior in Internet Explorer 8.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>84</wp:post_id>
<wp:post_date>2009-03-13 09:35:16</wp:post_date>
<wp:post_date_gmt>2009-03-13 04:35:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ie-and-checkbox-onchange-event</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241088193</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>21</wp:comment_id>
<wp:comment_author><![CDATA[HighjackMaster]]></wp:comment_author>
<wp:comment_author_email>a2b@bk.ru</wp:comment_author_email>
<wp:comment_author_url>http://stereolab.ru</wp:comment_author_url>
<wp:comment_author_IP>82.193.148.142</wp:comment_author_IP>
<wp:comment_date>2009-03-13 11:28:44</wp:comment_date>
<wp:comment_date_gmt>2009-03-13 06:28:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[wow!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Tanraya Framework</title>
<link>http://torqueo.net/projects/tanraya-framework/</link>
<pubDate>Tue, 28 Apr 2009 11:44:21 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?page_id=91</guid>
<description></description>
<content:encoded><![CDATA[Пока что можно почитать, <a href="/projects/tanraya-framework/routing/">как организован роутинг</a> в Tanraya Framework]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>91</wp:post_id>
<wp:post_date>2009-04-28 16:44:21</wp:post_date>
<wp:post_date_gmt>2009-04-28 11:44:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tanraya-framework</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>4</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1240919061</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Routing</title>
<link>http://torqueo.net/projects/tanraya-framework/routing/</link>
<pubDate>Tue, 28 Apr 2009 11:45:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?page_id=93</guid>
<description></description>
<content:encoded><![CDATA[<h2>Что такое роутинг (маршрутизация)?</h2>

<p>
Роутинг - это маршрутизация поступившего запроса внутри приложения. Иначе говоря - роутинг, это
процесс получения информации о модуле, контроллере и действии из поступившего запроса.
Роутинг похож на mod_rewrite, только он более специфичен и расположен внутри приложения.
</p>

<h2>Пример маршрута.</h2>

<p>Давайте посмотрим на простой пример того, как выглядит определение маршрута в Tanraya:</p>

<pre>
<code class="php">Tanraya_Controller_Router_Add::route('/users/:username/', array(
	'module'     => 'users',
	'controller' => 'users',
	'action'     => 'profile',
	':username'  => '/[-_a-z0-9]+/', // Имя пользователя должно совпадать с указанными символами
), 'username');                      // 3-й параметр (username) - это имя роута</code>
</pre>

<p>Здесь мы видим вызов метода с тремя аргументами:</p>
<ol>
    <li>Первый аргумент (обязательный) - это маска маршрута, или паттерн. Именно с ним будет сравниваться поступивший в приложение URI</li>
    <li>Второй аргумент (необязательный) - это опции маршрута. В опциях можно указать, какой модуль, контроллер или действие нужно запускать</li>
    <li>Третий аргумент (необязательный) - это имя маршрута. Имя маршрута сделано для облегчения генерации URI в шаблонах. Имя маршрута должно быть уникально</li>
</ol>

<p>
Подстрока <strong>:username</strong> в паттерне маршрута - это пользовательская макроподстановка. В опциях маршрута мы видим, что для <strong>:username</strong>
определено регулярное выражение, с которым должна совпадать подстрока из URI. Существуют так же и стандартные макроподстановки, они
нужны для облегчения написания маршрутов.
</p>

<p>Макроподстановка должна начинаться с двоеточия и не содержать в себе пробельных символов.</p>

<h2>Стандартные макроподстановки.</h2>

<p>В маршрутизаторе "зашиты" стандартные макроподстановки - часто встречающиеся наборы символов. Вот какие стандартные макроподстановки есть:</p>

<table border="1">
<tr>
    <th>Макроподстановка</th>
    <th>Рег. выражение</th>
    <th>Описание</th>
</tr>
<tr>
    <td>:controller</td>
    <td>([a-z_]+[a-z0-9_]+)</td>
    <td>Начинается с латинской буквы или подчеркивания, далее могут идти латинские буквы, цифры, подчеркивание.</td>
</tr>
<tr>
    <td>:action</td>
    <td>([a-z_]+[a-z0-9_]+)?</td>
    <td>Начинается с латинской буквы или подчеркивания, далее могут идти латинские буквы, цифры, подчеркивание.</td>
</tr>
<tr>
    <td>:id</td>
    <td>(\d+)?</td>
    <td>Цифры</td>
</tr>
<tr>
    <td>:any</td>
    <td>([^/.?;*]+)?</td>
    <td>Что угодно, кроме символов-разделителей</td>
</tr>
<tr>
    <td>:year</td>
    <td>(\d{4})?</td>
    <td>Четыре цифры</td>
</tr>
<tr>
    <td>:month</td>
    <td>(\d{1,2})?</td>
    <td>Одна или две цифры</td>
</tr>
<tr>
    <td>:day</td>
    <td>(\d{1,2})?</td>
    <td>Одна или две цифры</td>
</tr>
</table>

<p>Все стандартные макроподстановки, кроме <strong>:controller</strong>, могут быть опущены.</p>

<p>Примеры маршрутов с иcпользованием стандартных макроподстановок:</p>

<ol>
    <li>
<pre>
<code class="php">Tanraya_Controller_Router_Add::route('/:controller/:action/:id');</code>
</pre>
        Совпадет с URI: /news/show/777, /news/show, /news
    </li>
    <li>
<pre>
<code class="php">Tanraya_Controller_Router_Add::route('/users/:id', array(
    'controller' => 'users'
));</code>
</pre>
        Совпадет с URI: /users/555, /users/
    </li>
    <li>
<pre>
<code class="php">Tanraya_Controller_Router_Add::route('/news/:year/:month/:day', array(
    'controller' => 'news',
    'action'     => 'show_by_date'
));</code>
</pre>
        Совпадет с URI: /news/2009/01/28, /news/2009/01, /news/2009
    </li>
</ol>

<h2>Разделители в URI</h2>

<p>Символы "/", ".", "?", ";" в URI являются разделителями.</p>

<h2>Метод запроса</h2>

<p>По-умолчанию для всех маршрутов устанавливается метод запроса any. Это означает, что маршрут будет срабатывать
для любых запросов, переданных методами GET, POST, PUT, DELETE. Если хочется, чтобы маршрут срабатывал только для определенного
типа запроса, необходимо в опциях маршрута указать метод, вот так:</p>

<pre>
<code class="php">// Этот маршрут будет совпадать только тогда, когда на /users/:id приходит POST запрос.
Tanraya_Controller_Router_Add::route('/users/:id', array(
    'method' => 'post'
));</code>
</pre>

<h2>Поддержка REST</h2>

<p>Теперь маршрутизация поддерживает REST - ресурсы и вложенные ресурсы.
Определим ресурс - блоги и вложенный в блоги ресурс - комментарии:</p>

<pre>
<code class="php">$blog = Tanraya_Controller_Router_Add::resource('blog');
Tanraya_Controller_Router_Add::resource('comments', $blog);</code>
</pre>

<p>Всего эти 2 строчки сгенерируют нам 14 маршрутов:</p>

<pre>
<code class="php">Array
(
    [0] => Array
        (
            [0] => /blog/
            [1] => Array
                (
                    [controller] => blog
                    [method] => get
                )
            [2] => blog
            [3] => Array
                (
                )
        )
    [1] => Array
        (
            [0] => /blog/:id/
            [1] => Array
                (
                    [controller] => blog
                    [action] => show
                    [method] => get
                )
            [2] => blog_show
            [3] => Array
                (
                )
        )
    [2] => Array
        (
            [0] => /blog/new/
            [1] => Array
                (
                    [controller] => blog
                    [action] => new
                    [method] => get
                )
            [2] => blog_new
            [3] => Array
                (
                )
        )
    [3] => Array
        (
            [0] => /blog/
            [1] => Array
                (
                    [controller] => blog
                    [action] => create
                    [method] => post
                )
            [2] => blog_create
            [3] => Array
                (
                )

        )
    [4] => Array
        (
            [0] => /blog/:id/edit/
            [1] => Array
                (
                    [controller] => blog
                    [action] => edit
                    [method] => get
                )
            [2] => blog_edit
            [3] => Array
                (
                )
        )
    [5] => Array
        (
            [0] => /blog/:id/
            [1] => Array
                (
                    [controller] => blog
                    [action] => update
                    [method] => put
                )
            [2] => blog_update
            [3] => Array
                (
                )
        )
    [6] => Array
        (
            [0] => /blog/:id/
            [1] => Array
                (
                    [controller] => blog
                    [action] => destroy
                    [method] => delete
                )
            [2] => blog_destroy
            [3] => Array
                (
                )
        )
    [7] => Array
        (
            [0] => /blog/:blog_id/comments/
            [1] => Array
                (
                    [controller] => comments
                    [method] => get
                    [:blog_id] => /(\d+)/
                )
            [2] => comments
            [3] => Array
                (
                    [0] => blog
                )
        )
    [8] => Array
        (
            [0] => /blog/:blog_id/comments/:id/
            [1] => Array
                (
                    [controller] => comments
                    [action] => show
                    [method] => get
                    [:blog_id] => /(\d+)/
                )
            [2] => comments_show
            [3] => Array
                (
                    [0] => blog
                )
        )
    [9] => Array
        (
            [0] => /blog/:blog_id/comments/new/
            [1] => Array
                (
                    [controller] => comments
                    [action] => new
                    [method] => get
                    [:blog_id] => /(\d+)/
                )
            [2] => comments_new
            [3] => Array
                (
                    [0] => blog
                )
        )
    [10] => Array
        (
            [0] => /blog/:blog_id/comments/
            [1] => Array
                (
                    [controller] => comments
                    [action] => create
                    [method] => post
                    [:blog_id] => /(\d+)/
                )
            [2] => comments_create
            [3] => Array
                (
                    [0] => blog
                )
        )
    [11] => Array
        (
            [0] => /blog/:blog_id/comments/:id/edit/
            [1] => Array
                (
                    [controller] => comments
                    [action] => edit
                    [method] => get
                    [:blog_id] => /(\d+)/
                )
            [2] => comments_edit
            [3] => Array
                (
                    [0] => blog
                )
        )
    [12] => Array
        (
            [0] => /blog/:blog_id/comments/:id/
            [1] => Array
                (
                    [controller] => comments
                    [action] => update
                    [method] => put
                    [:blog_id] => /(\d+)/
                )

            [2] => comments_update
            [3] => Array
                (
                    [0] => blog
                )
        )
    [13] => Array
        (
            [0] => /blog/:blog_id/comments/:id/
            [1] => Array
                (
                    [controller] => comments
                    [action] => destroy
                    [method] => delete
                    [:blog_id] => /(\d+)/
                )

            [2] => comments_destroy
            [3] => Array
                (
                    [0] => blog
                )
        )
)</code>
</pre>

<p><b>Продолжение следует.</b></p>

]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>93</wp:post_id>
<wp:post_date>2009-04-28 16:45:00</wp:post_date>
<wp:post_date_gmt>2009-04-28 11:45:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>routing</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>91</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241088555</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>56</wp:comment_id>
<wp:comment_author><![CDATA[Vano]]></wp:comment_author>
<wp:comment_author_email>safrio@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.248.159.67</wp:comment_author_IP>
<wp:comment_date>2009-04-28 21:19:56</wp:comment_date>
<wp:comment_date_gmt>2009-04-28 16:19:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Клево! )
Только огроменные листинги бы как-нибудь упрятать, а то статья начинает пугать размерами..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>57</wp:comment_id>
<wp:comment_author><![CDATA[Venom]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>90.150.135.147</wp:comment_author_IP>
<wp:comment_date>2009-04-28 22:04:34</wp:comment_date>
<wp:comment_date_gmt>2009-04-28 17:04:34</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Дак это... щас делаю свою легкую тему для блога, думаю там что-нить сделать как раз для "свертывания" и раскраски листингов.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Маршрутизация (роутинг) в Tanraya Framework</title>
<link>http://torqueo.net/tanraya-framework-routing-small-post/</link>
<pubDate>Tue, 28 Apr 2009 11:49:43 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[tanraya]]></category>

		<category domain="category" nicename="tanraya"><![CDATA[tanraya]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=95</guid>
<description></description>
<content:encoded><![CDATA[По-быстрому накидал небольшое описание того, как работает маршрутизация в Tanraya.

Пока что все сырцы проекта Tanraya хранятся в закрытом SVN. Кому надо глянуть - обращайтесь (доступ дам не всем).

<a href="/projects/tanraya-framework/routing/">Почитать про маршрутизацию в Tanraya</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>95</wp:post_id>
<wp:post_date>2009-04-28 16:49:43</wp:post_date>
<wp:post_date_gmt>2009-04-28 11:49:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tanraya-framework-routing-small-post</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1240919413</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Darkbox for Mootools</title>
<link>http://torqueo.net/darkbox-for-mootools/</link>
<pubDate>Thu, 30 Apr 2009 13:30:24 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=107</guid>
<description></description>
<content:encoded><![CDATA[Переписал <a href="http://pepelsbey.net/2009/02/darkbox-2/">Darkbox</a> - javascript для загрузки картинки во всплывающем слое. Оригинальный скрипт был написан<a href="http://pepelsbey.net/author/"> Вадимом Макеевым</a> на jQuery, но мне он не подходил, так как все свои клиентские скрипты я пишу с использованием Mootools.

Поэтому, потратив немного времени, написал порт Darkbox на Mootools.

<a href="http://torqueo.net/files/mootools-darkbox/">Смотреть пример Darkbox for Mootools</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>107</wp:post_id>
<wp:post_date>2009-04-30 18:30:24</wp:post_date>
<wp:post_date_gmt>2009-04-30 13:30:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>darkbox-for-mootools</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241135810</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>60</wp:comment_id>
<wp:comment_author><![CDATA[pepelsbey]]></wp:comment_author>
<wp:comment_author_email>pepelsbey@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://pepelsbey.net</wp:comment_author_url>
<wp:comment_author_IP>82.196.88.149</wp:comment_author_IP>
<wp:comment_date>2009-05-01 02:59:23</wp:comment_date>
<wp:comment_date_gmt>2009-04-30 21:59:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Лучше бы конечно портировать <a href="http://pepelsbey.net/2009/02/darkbox-2/" rel="nofollow">Дакрбокс 2.0</a> — он выглядит немного лучше, главным образом из-за CSS. Другой минус, что заметил: при закрытии картинки сначала исчезает фон, а только потом картинка. Может быть это особенность анимации в jQuery, но в оригинальном скрипте они исчезают одновременно и это смотрится лучше.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>61</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>212.119.243.117</wp:comment_author_IP>
<wp:comment_date>2009-05-01 03:09:01</wp:comment_date>
<wp:comment_date_gmt>2009-04-30 22:09:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо). На мелочи пока не обращал внимания, но постараюсь в свободное время портировать второй Даркбокс и поправить косячки с анимацией.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Цепочки вызовов функций (Chains) в MooTools 1.2</title>
<link>http://torqueo.net/chaining-with-mootools-12/</link>
<pubDate>Sat, 02 May 2009 16:17:20 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[IE bugs]]></category>

		<category domain="category" nicename="ie-bugs"><![CDATA[IE bugs]]></category>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category><![CDATA[mootools]]></category>

		<category domain="category" nicename="mootools"><![CDATA[mootools]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=114</guid>
<description></description>
<content:encoded><![CDATA[<img class="size-full wp-image-120" style="float: left; margin-right: 15px;" src="http://torqueo.net/wp-content/uploads/2009/05/210825921946xxbg.jpg" alt="" width="250" height="188" align="left" />Это руководство покажет, насколько мощными могут быть цепочки вызовов функций в <a href="http://mootools.net">Mootools</a>. Цепочки облегчают последовательное выполнение стека функций.

Я размещу несколько таких коротких руководств в предстоящие недели. Каждое такое руководство будет нацелено на решение небольшой проблемы с помощью Mootools - это хороший путь для изучения возможностей фреймворка.

<!--more-->

<h3>Немного о цепочках</h3>
Цепочки очень мощный механизм, он похож на <em>Effect.Queue</em> в Script.aculo.us, но его возможности в Mootools более широки. Цель этого краткого руководства состоит в том, чтобы показать вам, как использовать цепочки Mootools в условиях массового обслуживания эффектов в сочетании с другими произвольными действиями. Но так же вы увидите, что вы можете использовать цепочки и для решения других задач.

Из документации к Mootools 1.2:
<blockquote>Chain - специальный класс, который выполняет функции, одну за другой, причем каждая функция запускается только после завершения предыдущей. Его методы могут быть реализованы в любом классе при помощи указания Implements: Chain и, в настоящее время, эти методы реализованы в стандартных классах Fx и Request. Например, в классе Fx цепочки используются для создания сложной анимации.</blockquote>
Класс Chain может быть использован в качестве отдельного класса, но становится гораздо более мощным, если реализовать его интерфейс в собственных классах.

В этом руководстве я буду создавать класс, который реализует интерфейс класса Chain.

Класс Chain относится к компоненту Class.Extras, поэтому вам нужно убедиться, что вы отметите его и все его зависимости при скачивании собственной сборки Mootools.
<h3>Реализация интерфейса Chain</h3>
Прежде всего, нам нужно добавить методы и свойства класса Chain в наш класс:
<pre><code class="javascript">var ChainExample = new Class({
    Implements : Chain
});</code></pre>
Теперь класс ChainExample будет содержать следующие методы:
<ul>
	<li><strong>Chain::chain()</strong> - Добавление любого количества функций в конец стека.</li>
	<li><strong>Chain::callChain()</strong> - Получить функцию с вершины стека и вызвать её.</li>
	<li><strong>Chain::clearChain()</strong> - Очистить стек.</li>
</ul>
<h3>Использование Chain для выполнения действий в заданном порядке</h3>
Мы реализовали интерфейс класса Chain в нашем классе ChainExample и готовы к использованию функциональности, которую он представляет.

Класс ChainExample добавит события к трём кнопкам. Когда кнопка будет нажата - появится соответствующая ей панель. Прежде, чем это произойдёт, все другие панели будут плавно исчезать. Здесь мы используем цепочки функций для того, чтобы задать нужный нам порядок действий.

Теперь код класса ChainExample будет таким:
<pre><code class="javascript">
/**
 * Добавляем события к кнопкам. Нажатие кнопки приведет
 * к закрытию всех панелей до того, как будет показана
 * панель, соответствующая нажатой кнопке.
 */
var ChainExample = new Class({
    Implements : Chain,

    // Определяем ID кнопок и соответствующих им панелей.
    actions : new Hash({
        'button-one'   : 'panel-one',
        'button-two'   : 'panel-two',
        'button-three' : 'panel-three'
    }),

    // Массив, в котором будут храниться объекты эффектов к каждой панели.
    effects : [],

    initialize: function() {
        // Добавляем событие onclick на каждую кнопку.
        // Нажатие на кнопку приведет к вызову метода showPanel()
        this.actions.getKeys().each(function(buttonId) {
            $(buttonId).addEvent('click', this.showPanel.bindWithEvent(this));
        }, this);

        // Создаем объект Fx (эффект) для каждой панели.
        this.actions.getValues().each(function(panelId) {
            this.effects[panelId] = new Fx.Tween($(panelId), 'opacity', {
                duration   : 'short',
                // При завершении эффекта ...
                onComplete : function() {
                    // ... вызываем следующую функцию из цепочки
                    this.callChain()
                }.bind(this)
            });
        }, this);

        this.hideAll();   // Прячем все панели при инициализации
        this.callChain(); // Запускаем вызов цепочки функций
    },

    // Скрываем все панели
    hideAll: function() {
        // Пробегаемся по каждой панели и последовательно:
        //    1. плавно скрываем панель
        //    2. устанавливаем css свойство display в none
        // Заметим, что эта функция не вызывает ничего на самом деле,
        // он просто добавляет действия в цепочку (Chain)

        this.actions.getValues().each(function(panelId) {
            this.chain(
                function() { this.effects[panelId].start(0); },
                function() {
                    $(panelId).setStyles({ 'display' : 'none' });

                    // Вызываем следующую функцию из цепочки
                    this.callChain();
                }
            );
        }, this);
    },

    // При нажатии кнопки происходит плавное исчезание всех
    // открытых панелей, а затем появляется панель, соответствующая нажатой кнопке.
    showPanel: function(event) {
        this.hideAll();
        var panel = this.actions.get(event.target.get('id'));

        this.chain(
            function() {
                $(panel).setStyles({'display': 'block', 'opacity': '0'});

                // Вызываем следующую функцию из цепочки
                this.callChain();
            },
            // Запускаем эффект (появление панели)
            function() { this.effects[panel].start(1); }
        );

        // Запускаем вызов цепочки функций
        this.callChain();
    }
});

window.addEvent('domready', function() {
    var myChain = new ChainExample();
});</code></pre>
Я опишу в деталях только код, имеющий отношение к цепочкам. Давайте посмотрим на каждую важную часть кода:
<h4>ChainExample::initialize</h4>
В конструкторе мы устанавливаем события на кнопки и создаем объекты эффектов (Fx) для панелей. Обратите внимание на onComplete. В нём мы получаем функцию из стека и запускаем её ( this.callChain() ) сразу после того, как эффект закончился.
<h4>ChainExample::hideAll</h4>
Внимательно посмотрите на этот метод. Вызов ChainExample::hideAll() на самом деле не скрывает панели. Метод добавляет в стек цепочек набор функций, которые будут скрывать и показывать панели в нужном порядке. Чтобы скрыть панели, мы должны запустить стек цепочек, используя метод this.callChain().

Заметьте, как вторая функция, переданная в стек, вызывает метод this.callChain(). Эта функция сообщает цепочке запускает слудующую функцию в цепочке.

Еще одна важная вещь, которую стоит отметить - функции внутри цепочки связываются между собой в том порядке, в котором они указаны в коде, так что у нас нет необходимости как-то явно связывать их между собой.
<h4>ChainExample::showPanel</h4>
Эта функция привязана к кнопке, при нажатии на которую должна появляться панель.

Сначала производится вызов ChainExample::hideAll(), но не производит какие-либо действия немедленно - панели скрываются только непосредственно после запуска this.callChain().

На данном этапе мы сделали всё необходимое, чтобы скрыть все панели по цепочке. Далее идет код, который занимается показом нужной панели.

После того, как мы добавили необходимые функции в цепочку, выполняется метод this.callChain() и далее, вся цепочка выполняется последовательно, благодаря тому, что в каждом звене цепочки задан собственный вызов this.callChain().

Мы создали класс, который позволяет объединить любое количество эффектов и произвольных функций и обеспечивает их выполнение в том порядке, в котором мы хотим. Таким образом, основная идея класса Chain заключается в создании стека функций и выполнии их в нужном порядке, когда это потребуется.
<h3>Демонстрация</h3>
Смотреть <a href="/files/mootools-chain/">online-demo</a>.
<p style="text-align: right;">Эта статья - художественный перевод поста <a href="http://www.daniel-skinner.co.uk/chaining-with-mootools-12-tutorial/31/01/2008">Дэниэла Скиннера</a>.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>114</wp:post_id>
<wp:post_date>2009-05-02 21:17:20</wp:post_date>
<wp:post_date_gmt>2009-05-02 16:17:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>chaining-with-mootools-12</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241302917</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>210825921946xxbg</title>
<link>http://torqueo.net/chaining-with-mootools-12/210825921946xxbg/</link>
<pubDate>Sat, 02 May 2009 22:16:10 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/05/210825921946xxbg.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>120</wp:post_id>
<wp:post_date>2009-05-03 03:16:10</wp:post_date>
<wp:post_date_gmt>2009-05-02 22:16:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>210825921946xxbg</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>114</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/05/210825921946xxbg.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/05/210825921946xxbg.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"250";s:6:"height";s:3:"188";s:14:"hwstring_small";s:23:"height='95' width='127'";s:4:"file";s:28:"2009/05/210825921946xxbg.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"210825921946xxbg-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Шедевральное видео. Тупые америкосы.</title>
<link>http://torqueo.net/stupid-americans/</link>
<pubDate>Fri, 08 May 2009 07:18:10 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[свежий навоз]]></category>

		<category domain="category" nicename="%d1%81%d0%b2%d0%b5%d0%b6%d0%b8%d0%b9-%d0%bd%d0%b0%d0%b2%d0%be%d0%b7"><![CDATA[свежий навоз]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=130</guid>
<description></description>
<content:encoded><![CDATA[Боянистое видео, но всё-равно актуальное. Хотя у нас тоже обычный обыватель не так уж умён, но сможет ответить, сколько было мировых войн и какая валюта используется в Соединённом Королевстве. Всё-таки, страна инженеров :)

For people who speak English: turn off the sound and read the subtitles.

Смотрим:

<a href="http://www.youtube.com/watch?v=rNo75xvfnJw"><object width="425" height="350" data="http://www.youtube.com/v/rNo75xvfnJw" type="application/x-shockwave-flash"><param name="src" value="http://www.youtube.com/v/rNo75xvfnJw" /></object>
</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>130</wp:post_id>
<wp:post_date>2009-05-08 12:18:10</wp:post_date>
<wp:post_date_gmt>2009-05-08 07:18:10</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>stupid-americans</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1241767693</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>106</wp:comment_id>
<wp:comment_author><![CDATA[HighjackMaster]]></wp:comment_author>
<wp:comment_author_email>a2b@bk.ru</wp:comment_author_email>
<wp:comment_author_url>http://stereolab.ru</wp:comment_author_url>
<wp:comment_author_IP>82.193.148.142</wp:comment_author_IP>
<wp:comment_date>2009-05-08 13:13:26</wp:comment_date>
<wp:comment_date_gmt>2009-05-08 08:13:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[это ппц...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>107</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru/</wp:comment_author_url>
<wp:comment_author_IP>81.91.63.38</wp:comment_author_IP>
<wp:comment_date>2009-05-08 15:13:18</wp:comment_date>
<wp:comment_date_gmt>2009-05-08 10:13:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну дык что ты хотел , когда я ещё в школе учился народ страны на карте найти не мог =) Так что я думаю сейчас наш народ потупел ещё больше.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>108</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>212.119.242.254</wp:comment_author_IP>
<wp:comment_date>2009-05-08 20:08:36</wp:comment_date>
<wp:comment_date_gmt>2009-05-08 15:08:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Saint_Byte, какой страны народ не мог найти?
Ты случайно не про тот народ, который 40 лет по пустыне бродил? ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>109</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin2@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>213.140.127.177</wp:comment_author_IP>
<wp:comment_date>2009-05-09 12:29:11</wp:comment_date>
<wp:comment_date_gmt>2009-05-09 07:29:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Дык ... ты вот как будто вот так сразу найдешь тот же Гондурас на карте =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>110</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>212.119.242.157</wp:comment_author_IP>
<wp:comment_date>2009-05-09 14:52:55</wp:comment_date>
<wp:comment_date_gmt>2009-05-09 09:52:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Может границы Гондураса тебе и не смогу показать, но скажу, что он находится в Латинской Америке, рядом с панамским каналом.
<em>ЗЫ: Гугль и карты не юзал.</em>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>109</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Мысли о  том, как приложение должно работать с запросами</title>
<link>http://torqueo.net/requests-in-apps/</link>
<pubDate>Sun, 17 May 2009 18:53:15 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=135</guid>
<description></description>
<content:encoded><![CDATA[PHP скрипт может быть запущен из-под:
<ol>
	<li>Веб-сервера</li>
	<li>Коммандной строки (CLI)</li>
	<li>PHP-GTK (GUI интерфейс на php) (не знаю, как технически оно там работает)</li>
</ol>
<!--more-->Движок должен сам определять, под чем он запущен (Web Server, CLI, PHP-GTK) и, в зависимости от этого, запускать нужный класс (CLI, HTTP_Request, PHP_GTK). Все эти классы наследуются от класса Abstract_Request, который описывает интерфейс объекта запроса (т.е. методы и свойства, которые обязательно должен содержать суперкласс).

К примеру, при работе через коммандную строку в приложение не получает заголовки, оно получает лишь набор переданных приложению параметров. В этом случае, наш класс (CLI) может содержать набор методов для облегчения работы с полученными параметрами. Например:
<ul>
	<li>Проверить, передан ли некий параметр</li>
	<li>Получить параметр</li>
	<li>Кол-во переданных параметров</li>
	<li>Получить весь список параметров</li>
</ul>
При работе через HTTP - приложение получает набор заголовков и тело (тело только при запросах типа POST и PUT). И тут уже наш класс HTTP_Request может содержать кучу методов:
<ul>
	<li>Получить текущий URI</li>
	<li>Получить текущий домен</li>
	<li>Получить текущий IP</li>
	<li>Получить произвольный заголовок</li>
	<li>Текущий метод запроса - POST?</li>
	<li>Текущий метод запроса - GET?</li>
	<li>Текущий метод запроса - PUT?</li>
	<li>Текущий метод запроса - HEAD?</li>
	<li>Текущий метод запроса - OPTIONS?</li>
	<li>Текущий метод запроса - DELETE?</li>
	<li>Получить текущую кодировку</li>
</ul>
Ну и различные другие методы.

Дальше.

Допустим, мы захотели, чтобы наше приложение научилось понимать AMF запросы, т.е. запросы, приходящие от Flash. Как я понял, в php скрипт такие запросы приходят методом POST, в теле которого содержится сериализованный объект Flash в бинарном виде.
Значит, наша задача сводится к разбору этого объекта. Так же нам понадобится добавить полезные методы для работы с AMF, какие? Пока не знаю. Зависит от того, что мы хотим.
Так как AMF запросы передаются по протоколу HTTP, то мы создадим новый класс HTTP_AMF_Request, унаследованный от HTTP_Request. Надеюсь, понятно почему?

<strong>И вот какая дилемма у меня возникла. Начнем с примера.</strong>
Допустим, у нас есть некий сайт, который работает по HTTP и, соответственно, движок, понимая это, автоматически использует класс HTTP_Request.
Но вдруг нам понадобилось, чтобы какая-то часть сайта понимала запросы, приходящие с использованием AMF. Значит, нам надо чтобы движок для таких запросов стал подключать  HTTP_AMF_Request. Но как это сделать?

Я вижу такие выходы из этой ситуации.
<ol>
	<li>Всегда пождключать HTTP_AMF_Request, так как он будет работать и для AMF запросов и для обычных HTTP запросов.</li>
	<li>Автоматически определять тип запроса, и если пришел AMF запрос, то использовать HTTP_AMF_Request</li>
	<li>Написать хитрый конфиг, в котором прописать, какие части сайта хотят понимать AMF запросы и подключать для них HTTP_AMF_Request</li>
</ol>
Пока склоняюсь к использованию 1-го метода. По моему мнению самый тупой способ - это способ 3.

Расскажу, почему считаю способ номер 1 самым лучшим.
Сайт всегда работает с использованием одного протокола - HTTP. Если мы хотим, чтобы какая-то часть сайта умела работать с запросами, основанными на использорвании протокола HTTP, то мы просто могли бы добавить эти специальные возвожности, расширив стандартный класс запроса (HTTP_Request) .
Если я захочу, чтобы сайт мог работать так же по протоколу NNTP, допустим, если захочу, чтобы по NNTP транслировался форум, то мне придется делать отдельное приложение, в котором я создам класс NNTP_Request (унаследованный от Abstract_Request). Этот класс и будет принимать поступившие запросы от NNTP-сервера.

В заключении мысль такая: Одно и то же приложение не может одновременно понимать запросы разных типов (как например HTTP и NNTP). Но если хотим добавить поддержку технологии, работающей на основе какого-либо протокола (как HTTP), то тогда создаем новый класс, унаследованный, в данном случае, от HTTP_Request и, далее, используем этот класс во всем приложении.

Ссылки по теме:
<ul>
	<li><a href="http://osflash.org/documentation/amf">Документация по AMF</a></li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>135</wp:post_id>
<wp:post_date>2009-05-17 23:53:15</wp:post_date>
<wp:post_date_gmt>2009-05-17 18:53:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>requests-in-apps</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1242586429</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>120</wp:comment_id>
<wp:comment_author><![CDATA[Homoz]]></wp:comment_author>
<wp:comment_author_email>safrio@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://safrio.ru</wp:comment_author_url>
<wp:comment_author_IP>92.248.159.67</wp:comment_author_IP>
<wp:comment_date>2009-05-18 00:09:59</wp:comment_date>
<wp:comment_date_gmt>2009-05-17 19:09:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Всегда подключать HTTP_*_Request можно если классов подреквестов не много, иначе второй путь лучше имхо]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Tanraya под Zend Framework</title>
<link>http://torqueo.net/tanraya-under-zend-framework/</link>
<pubDate>Mon, 18 May 2009 03:38:30 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[tanraya]]></category>

		<category domain="category" nicename="tanraya"><![CDATA[tanraya]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=138</guid>
<description></description>
<content:encoded><![CDATA[<img class="alignleft size-full wp-image-140" style="float: left" title="zend-framework" src="http://torqueo.net/wp-content/uploads/2009/05/zend-framework.png" alt="zend-framework" width="185" height="187" />Что-то сегодня вечером меня переклинило и я решил досконально покопаться в <a href="http://framework.zend.com/">Zend Framework'e</a>. Как-то раз я уже писал аппликуху с его использованием, но это было давненько и в глубины фреймворка я не вникал - тогда с меня требовалось по-быстрому накидать простенький сайт.

Сначала я слил мануал о том, <a href="http://zendframework.ru/articles/basic-site-with-modules-on-zend-framework">как сделать модульную структуру приложения</a> с использованием ZF. Посмотрел сырцы - но там все оказалось <em>крайне не очень</em>, как и во всех подобных приложениях, коих я посмотрел несколько. Авторы подобных приложений мало раскрывают все удобство использования модульной структуры. Чего стоят только их огромные конфиги. Жуть.<!--more-->

Я приверженец идеи "соглашений над конфигурацией" и хочу, чтобы в моём приложении нужно было по-минимуму настраивать ручками, чтобы оно все само работало.

Не найдя ничего хорошего под ZF (хотя нет, одна хорошая аппликуха, судя по описанию - все же нашлась, но она пока закрыта и не распространяется, но <a href="http://myengine.com.ua/">штука впечатляющая</a>) решил собрать свою аппликуху, которая бы унаследовала от Tanraya Framework самое лучшее и не унаследовала бы худшее :)

Пока что собрал небольшое приложение, сейчас обучаю его правильно понимать модульную структуру. Удивился, насколько все в ZF сделано похоже, как в Tanraya. Хотя, конечно, в ZF сделано "на широкую ногу" - почти все и вся можно сконфигурить или расширить. И это хорошо. Это позволит реализовать мне свою аппликуху именно так, как я этого хочу. И, кроме того, это будет быстрее, чем если бы я продолжил писать Tanraya с чистого листа. Поэтому, буду биться.

Вот плюсы, которые я вижу, при использовании ZF для написания Tanraya:
<ul>
	<li>Более быстрое написание Tanraya</li>
	<li>Легкое использование различных классов ZF</li>
	<li>Отличная расширяемость</li>
	<li>Хорошая документация самого ZF</li>
	<li>Большое community, поэтому Tanraya, написанная под ZF заинтересует больше разработчиков</li>
	<li>Ясно, как все работает в ZF, поэтому так же будет понятно, как все работает в Tanraya</li>
	<li>Постоянное улучшение и расширение возможностей ZF. Для Tanraya это означает, что она тоже будет поддерживаться и развиваться, так как развитие ZF будет к этому подталкивать.</li>
	<li>Большое количество решений, типсов и триков под ZF</li>
</ul>
Теперь о том, что не нравится:
<ul>
	<li>Беспонтовый ORM (<a href="http://framework.zend.com/manual/ru/zend.db.html">Zend_Db</a>), основанный на паттернах проектирования <a href="http://www.martinfowler.com/eaaCatalog/tableDataGateway.html">Table Data Gateway</a> и <a href="http://www.martinfowler.com/eaaCatalog/rowDataGateway.html">Row Data Gateway</a>. Чтобы им пользоваться - надо писать тонны кода. Да и паттерн <a href="http://www.martinfowler.com/eaaCatalog/activeRecord.html">ActiveRecord</a> мне нравится больше, чем тот, который использует ZF.</li>
	<li>Работа с формами. Это тоже ахтунг. Стандартный способ работы с формами в ZF - это описание работы формы при помощи набора классов. Внешний вид формы задается тоже при помощи классов-декораторов. По-моему - ужасно. Просто тонны кода. Нужно быть проще.</li>
	<li>Стандартное поведение <a href="http://framework.zend.com/manual/ru/zend.application.html">Zend_Application</a>. Мне оно просто не нравится :)</li>
	<li>Роутинг (маршрутизация). Это тоже пипец. Дохрена кода. Это плохо. Можно все сделать проще - что я и сделаю. Возможно, не в первой же версии Tanraya, но в последующих - точно.</li>
</ul>
Так что вот, робяты. Надеюсь, и даже уверен - сейчас дела пойдут гораздо быстрее. Все таки Zend Framework это готовое решение. Не нужно писать ничего с нуля - достаточно грамотно связать и настроить все нужные компоненты фреймворка.

Скорее всего, при выпуске первой версии "Tanraya under ZF" создам отдельную страничку с описухой и открытый Subversion репозиторий.

Только вот не знаю, как теперь Танраю обзывать. Tanraya Framework получается уже не катит :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>138</wp:post_id>
<wp:post_date>2009-05-18 08:38:30</wp:post_date>
<wp:post_date_gmt>2009-05-18 03:38:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tanraya-under-zend-framework</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1242618400</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>126</wp:comment_id>
<wp:comment_author><![CDATA[lcf]]></wp:comment_author>
<wp:comment_author_email>lcfsoft@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.27.93.23</wp:comment_author_IP>
<wp:comment_date>2009-05-20 14:26:49</wp:comment_date>
<wp:comment_date_gmt>2009-05-20 09:26:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Статейка просто outdated немного, но что вам не понравилось в огромных конфигах? Почему жуть?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>127</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>212.119.243.137</wp:comment_author_IP>
<wp:comment_date>2009-05-20 16:08:46</wp:comment_date>
<wp:comment_date_gmt>2009-05-20 11:08:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Не понравилось то, что во многих аппликухах, которые я смотрел - конфиги вида "огромный массив непонятно чего". И обычно все в одном файле. Нужно разделять например на конфиругирование: среды приложения (тут всякие пути и кодировки), настроки БД, настройки приложения (здесь настройки таймзоны, настройки УРЛ и прочее.).
И чтобы не было в конфигах подобного: 'driver_options'=&gt; array(PDO::MYSQL_ATTR_INIT_COMMAND =&gt; 'SET NAMES UTF8'),
Когда можно сделать просто db_encoding: "utf-8"

Но, конечно, конфиги - это не главное.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>126</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>zend-framework</title>
<link>http://torqueo.net/tanraya-under-zend-framework/zend-framework/</link>
<pubDate>Mon, 18 May 2009 03:40:12 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/05/zend-framework.png</guid>
<description></description>
<content:encoded><![CDATA[Zend Framework]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>140</wp:post_id>
<wp:post_date>2009-05-18 08:40:12</wp:post_date>
<wp:post_date_gmt>2009-05-18 03:40:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>zend-framework</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>138</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/05/zend-framework.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/05/zend-framework.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"185";s:6:"height";s:3:"187";s:14:"hwstring_small";s:22:"height='96' width='94'";s:4:"file";s:26:"2009/05/zend-framework.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"zend-framework-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Один хороший человек сделал Zen HTML для Netbeans</title>
<link>http://torqueo.net/zen-html-for-netbeans/</link>
<pubDate>Fri, 22 May 2009 18:26:59 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=144</guid>
<description></description>
<content:encoded><![CDATA[Твою меть!

Не могу не поделиться этой новостью: <a href="http://rmcreative.ru">Александр Макаров</a> обновил ааатличную штуку Zen HTML под NetBeans! Yeah!

Читаем и юзаем: <a href="http://rmcreative.ru/blog/post/netbeans-zen-html-1.1">http://rmcreative.ru/blog/post/netbeans-zen-html-1.1</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>144</wp:post_id>
<wp:post_date>2009-05-22 23:26:59</wp:post_date>
<wp:post_date_gmt>2009-05-22 18:26:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>zen-html-for-netbeans</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1243016870</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>146</wp:comment_id>
<wp:comment_author><![CDATA[Homoz]]></wp:comment_author>
<wp:comment_author_email>safrio@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://safrio.ru</wp:comment_author_url>
<wp:comment_author_IP>92.248.159.67</wp:comment_author_IP>
<wp:comment_date>2009-05-23 05:18:47</wp:comment_date>
<wp:comment_date_gmt>2009-05-23 00:18:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Не понял как его поставить куданибудь.. Все редакторы под Mac вроде]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>151</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>188.17.204.41</wp:comment_author_IP>
<wp:comment_date>2009-05-23 11:49:43</wp:comment_date>
<wp:comment_date_gmt>2009-05-23 06:49:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Неа. СетевыеБобы под винду. Я на них пишу.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>putty_ssh</title>
<link>http://torqueo.net/making-virtual-dev-server-on-virtualbox-with-rails/putty_ssh/</link>
<pubDate>Fri, 03 Jul 2009 09:16:41 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/07/putty_ssh.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>153</wp:post_id>
<wp:post_date>2009-07-03 14:16:41</wp:post_date>
<wp:post_date_gmt>2009-07-03 09:16:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>putty_ssh</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>152</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/07/putty_ssh.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/putty_ssh.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"466";s:6:"height";s:3:"448";s:14:"hwstring_small";s:22:"height='96' width='99'";s:4:"file";s:21:"2009/07/putty_ssh.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"putty_ssh-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"putty_ssh-300x288.png";s:5:"width";s:3:"300";s:6:"height";s:3:"288";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>ssh_connected</title>
<link>http://torqueo.net/making-virtual-dev-server-on-virtualbox-with-rails/ssh_connected/</link>
<pubDate>Fri, 03 Jul 2009 09:20:18 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/07/ssh_connected.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>154</wp:post_id>
<wp:post_date>2009-07-03 14:20:18</wp:post_date>
<wp:post_date_gmt>2009-07-03 09:20:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>ssh_connected</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>152</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/07/ssh_connected.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/ssh_connected.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"675";s:6:"height";s:3:"424";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:25:"2009/07/ssh_connected.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"ssh_connected-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"ssh_connected-300x188.png";s:5:"width";s:3:"300";s:6:"height";s:3:"188";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Делаем сервер разработчика Rails с использованием виртуализации</title>
<link>http://torqueo.net/making-virtual-dev-server-on-virtualbox-with-rails/</link>
<pubDate>Fri, 03 Jul 2009 10:03:12 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[kubuntu]]></category>

		<category domain="category" nicename="kubuntu"><![CDATA[kubuntu]]></category>

		<category><![CDATA[виртуализация]]></category>

		<category domain="category" nicename="%d0%b2%d0%b8%d1%80%d1%82%d1%83%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f"><![CDATA[виртуализация]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[kubuntu]]></category>

		<category domain="tag" nicename="kubuntu"><![CDATA[kubuntu]]></category>

		<category domain="tag"><![CDATA[lamp]]></category>

		<category domain="tag" nicename="lamp"><![CDATA[lamp]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[virtualbox]]></category>

		<category domain="tag" nicename="virtualbox"><![CDATA[virtualbox]]></category>

		<category domain="tag"><![CDATA[виртуализация]]></category>

		<category domain="tag" nicename="%d0%b2%d0%b8%d1%80%d1%82%d1%83%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f"><![CDATA[виртуализация]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=152</guid>
<description></description>
<content:encoded><![CDATA[Всем пламенный привет после небольшого моего отсутствия :)

Сразу с места в карьер: я все свои разработки пишу в основном в windows. Это, конечно имеет как ряд преимуществ (лично для меня), так и ряд неудобств.

Недавно мне пришла в голову идея - почему бы не сделать сервер разработки приложений при помощи виртуальной машины. А что - это удобно. Мы получим нативную среду для приложений и избавимся от многих неудобств.

И тогда я установил Kubuntu в виртуальной машине <a href="http://www.virtualbox.org/">VirtualBox</a> и установил там LAMP и Rails. Сейчас по-порядку расскажу, как все это сделать.

Итак - первое, что нужно сделать - это установить саму виртуальную машину. Я воспользовался VirtualBox, так как она легкая, удобная и к тому же бесплатная. Я не буду рассказывать как установить Kubuntu под VirtualBox - это легко и достаточно материалов по этой теме есть в интернете.<!--more-->

Теперь, когда мы имеем установленную Kubuntu под виртуалкой, нам нужно сделать форвардинг портов из гостевой ОС Kubuntu в хост-ОС Windows, чтобы мы могли из windows соединяться с Kubuntu например по ssh или по http. Делается это так: создаем forwarding.bat файл в директории С:\Program Files\Sun\xVM VirtualBox\ и пишем в него следующие строки (kubuntu - это название вашей виртуальной машины):

Форвардинг апача с 80 на 8888 порт:
<pre><code>VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/apache/HostPort" 8888
VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/apache/GuestPort" 80
VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/apache/Protocol" TCP</code></pre>
Форвардинг монгрела с 3000 на 3000 порт:
<pre><code>VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/mongrel/HostPort" 3000
VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/mongrel/GuestPort" 3000
VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/mongrel/Protocol" TCP</code></pre>
Форвардинг ssh с 22 на 2222 порт:
<pre><code>VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/ssh/HostPort" 2222
VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/ssh/GuestPort" 22
VBoxManage setextradata kubuntu "VBoxInternal/Devices/pcnet/0/LUN#0/Config/ssh/Protocol" TCP</code></pre>
Все. Теперь останавливаем виртуальную машину, если она запущена, затем сохраняем forwarding.bat и запускаем его. После этого снова запускаем виртуальную машину. Кстати, в настройках виртуальной машины соединение по сети должно быть установлено через NAT.

Сейчас нам нужно установить ssh сервер, чтобы мы смоги соединяться в гостевой ос из хост-ос по ssh. В консоли пишем:
<pre><code class="bash">$ sudo apt-get install openssh-server</code></pre>
Ssh будет установлен и запущен. Давайте соединимся с гостевой ОС. Для этого используем клиент Putty:

<img class="size-full wp-image-153 alignnone" title="putty_ssh" src="http://torqueo.net/wp-content/uploads/2009/07/putty_ssh.png" alt="putty_ssh" width="466" height="448" />

Отлично - соединились. Если все же не получилось соединиться - попробуйте перезагрузить компьютер.

<img class="size-full wp-image-154" title="ssh_connected" src="http://torqueo.net/wp-content/uploads/2009/07/ssh_connected.png" alt="ssh_connected" width="675" height="424" />

Итак, соединение с гостевой ОС Kubuntu по ssh теперь работает. Приступим к установке Ruby и Rails.
<h3>Установка Ruby и Rails в Kubuntu</h3>
Установим Ruby:
<pre><code class="bash">$ sudo apt-get install ruby ruby1.8-dev libopenssl-ruby1.8 rdoc ri irb build-essential wget ssl-cert</code></pre>
Потом установим дополнительные пакеты gem'ы для Ruby:
<pre><code class="bash">$ cd /tmp
$ wget http://rubyforge.org/frs/download.php/57643/rubygems-1.3.4.tgz
$ tar zxf rubygems-1.3.4.tgz
$ cd rubygems-1.3.4
$ sudo ruby setup.rb
$ sudo ln -sfv /usr/bin/gem1.8 /usr/bin/gem</code></pre>
Далее, установим Mongrel. Он работает быстрее, чем дефолтный веб-сервер WEBrick. И к томуже - у меня так и не получилось сделать форвардинг 3000 порта, когда был WEBrick - я не стал разбираться отчего это происходит - просто установил Mongrel. Итак - устанавливаем:
<pre><code class="bash">$ sudo gem install mongrel</code></pre>
Теперь по команде script/server будет запускаться именно Mongrel. Давайте создадим пустое rails-приложение, чтобы проверить что все работает.

Переходим в домашнюю директорию:
<pre><code class="bash">$ cd $HOME</code></pre>
И создаем Rails-приложение:
<pre><code class="bash">$ rails mycoolapp</code></pre>
Потом запускаем Mongrel
<pre><code class="bash">$ cd mycoolapp
$ script/server</code></pre>
Открываем браузер в Kubuntu и набираем <a href="http://localhost:3000/">http://localhost:3000/</a>. Если все работает - то вы увидите дефолтную страничку Rails-приложения. Все, можно работать :).

Но - можно установить еще кое что.
<h3>Установка LAMP в Kubuntu</h3>
Давайте установим еще и LAMP - не помешает. Кому помешает - ставьте только Mysql и не читайте дальше :)
<pre><code class="bash">$ sudo tasksel install lamp-server</code></pre>
И PHPMyAdmin - пригодится:
<pre><code class="bash">$ sudo apt-get install phpmyadmin</code></pre>
После установки о будет находиться по адресу <a href="http://localhost/phpmyadmin">http://localhost/phpmyadmin</a> на гостевой ОС, или по адресу <a href="http://localhost:8888/phpmyadminhttp://">http://localhost:8888/phpmyadmin</a> на хост-ОС.
<p style="text-align: right;"><em>Спасибо <a href="http://tumalevich.pp.ru/">Константину Тумалевичу</a> за помощь в подготовке статьи</em></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>152</wp:post_id>
<wp:post_date>2009-07-03 15:03:12</wp:post_date>
<wp:post_date_gmt>2009-07-03 10:03:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>making-virtual-dev-server-on-virtualbox-with-rails</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1298987672</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1873</wp:comment_id>
<wp:comment_author><![CDATA[Fedyashev Nikita]]></wp:comment_author>
<wp:comment_author_email>loci.master@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>212.97.14.16</wp:comment_author_IP>
<wp:comment_date>2010-08-31 20:45:04</wp:comment_date>
<wp:comment_date_gmt>2010-08-31 15:45:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо за статью. Было интересно :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2827</wp:comment_id>
<wp:comment_author><![CDATA[Alex Night]]></wp:comment_author>
<wp:comment_author_email>zed911@list.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.25.34.186</wp:comment_author_IP>
<wp:comment_date>2010-11-16 03:14:54</wp:comment_date>
<wp:comment_date_gmt>2010-11-15 22:14:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[как раз то, что мне надо =) огромное спасибо, все просто и доходчиво =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5475</wp:comment_id>
<wp:comment_author><![CDATA[Nicklasos]]></wp:comment_author>
<wp:comment_author_email>ariets@gala.net</wp:comment_author_email>
<wp:comment_author_url>http://nicklasos.heroku.com</wp:comment_author_url>
<wp:comment_author_IP>213.160.145.194</wp:comment_author_IP>
<wp:comment_date>2011-03-01 18:04:56</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 13:04:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Интересно.
Есть проект Virtual Rails, что-то подобное http://www.virtualrails.org/
Лично для себя выбрал cygwin под windows, гораздо удобнее.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5476</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-01 18:28:54</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 13:28:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А linux еще удобнее будет. Я выбрал Ubuntu для себя)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5475</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5477</wp:comment_id>
<wp:comment_author><![CDATA[Nicklasos]]></wp:comment_author>
<wp:comment_author_email>ariets@gala.net</wp:comment_author_email>
<wp:comment_author_url>http://nicklasos.heroku.com</wp:comment_author_url>
<wp:comment_author_IP>213.160.145.194</wp:comment_author_IP>
<wp:comment_date>2011-03-01 18:39:14</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 13:39:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Конечно удобнее :)
Просто на моей домашней машинке проблема с драйверами на видеокарту, вот там и удобно cygwin + gvim, а так да, только Linux!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5476</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Подборка хороших плагинов для Mootools</title>
<link>http://torqueo.net/a-list-of-good-plugins-for-mootools/</link>
<pubDate>Sat, 04 Jul 2009 15:53:52 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[mootools]]></category>

		<category domain="category" nicename="mootools"><![CDATA[mootools]]></category>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[calendar]]></category>

		<category domain="tag" nicename="calendar"><![CDATA[calendar]]></category>

		<category domain="tag"><![CDATA[mootools]]></category>

		<category domain="tag" nicename="mootools"><![CDATA[mootools]]></category>

		<category domain="tag"><![CDATA[plugins]]></category>

		<category domain="tag" nicename="plugins"><![CDATA[plugins]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=128</guid>
<description></description>
<content:encoded><![CDATA[Плагины бывают разные - плохие и хорошие. Очень много плагинов пишется из рук вон плохо - смотришь - вроде все красиво, а как полезешь смотреть код - а там такое, что хоть святых выноси.

Одних клонов лайтбокса понаписано сотни. Но достойных из них всего пара штук. Почему? Потому что плагин написать не так-то просто как кажется новичкам, изучившим какой-либо js-фреймворк и сразу кинувшимися в бой.<!--more-->

Прежде всего, чтобы плагин получился хорошим, нужно продумать и минимизировать количество html элементов. Потом создать правильный, понятный и легко кастомизируемый css код. Но это еще не всё. Нужно позаботиться так же о таких вещах, как graceful degradation, unobtrusive javascript, минимизировать количество изображений в плагине, используя css sprite's. Это не говоря про продумывание, написание и документирование самого JS кода.

В общем, как видно - не простое это дело. Поэтому, я решил собирать плагины для Mootools, прошедшие мой отбор по качеству и публиковать их список здесь. Список будет пополняться.

Смотрим - список плагинов для Mootools.
<ul>
	<li><a href="http://mifjs.net/tree/">Mif Tree - набор скриптов для создания деревьев на javascript</a>. Штука большая и очень функциональная. Я думаю она покроет уж точно 95% задач, которые могут вам потребоваться. Имеет хорошую документацию.</li>
	<li><a href="http://www.electricprism.com/aeron/calendar/">Mootools Calendar - javascript-календарь для Mootools.</a> Достаточно качественный проект, имеет отличную документацию, хорошо настраивается, так же есть скины.</li>
	<li><a href="http://dev.base86.com/scripts/vista-like_ajax_calendar_version_2.html">Vista-like Calendar</a> - еще более впечатляющий календарь для Mootools.</li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>128</wp:post_id>
<wp:post_date>2009-07-04 20:53:52</wp:post_date>
<wp:post_date_gmt>2009-07-04 15:53:52</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>a-list-of-good-plugins-for-mootools</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1247153037</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Загрузка view по-требованию в Zend Framework</title>
<link>http://torqueo.net/load-view-template-in-zend-framework-if-exists/</link>
<pubDate>Tue, 07 Jul 2009 10:18:55 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[zf action helper]]></category>

		<category domain="tag" nicename="zf-action-helper"><![CDATA[zf action helper]]></category>

		<category domain="tag"><![CDATA[zf view]]></category>

		<category domain="tag" nicename="zf-view"><![CDATA[zf view]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=162</guid>
<description></description>
<content:encoded><![CDATA[Поведение ZF по-умолчанию мне не очень нравится - он всегда загружает шаблон вида. То есть для каждого действия в контроллере обязательно должен быть шаблон вида.

Но шаблон часто не требуется - например, когда отдаете данные из действия в JSON, или не отдаете вообще ничего. В этом случае вам приходится отключать рендеринг вида при помощи
<pre><code class="php">$this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender(true);</code></pre>
Но так делать не удобно, если у вас много действий, где шаблон вида не нужен. Давайте пойдём по пути Rails :). Мы сделаем так, чтобы шаблон вида загружался только в том случае, если он существует. Для этого напишем помощник действия (action helper):<!--more-->
<pre><code class="php">// Coded by lcf http://lcf.name/
class Project_Controller_Action_Helper_Template extends Zend_Controller_Action_Helper_Abstract
{
    public function postDispatch()
    {
        // Get ViewRender instance
        $viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');

        // Specifies script name for the current action
        $name  = $viewRenderer-&gt;getViewScript();
        // Get list of script paths which were this script will be matched
        $paths = $viewRenderer-&gt;view-&gt;getScriptPaths();
        // Set shouldRender flag to false (disable autorendering)
        $shouldRender = false;
        // Check all paths in cycle
        foreach ($paths as $dir) {
            if (is_readable($dir . $name)) {
                // Set flag in true if file exists
                $shouldRender = true;
            }
        }
        // On the shouldRender flag final value turn off or turn on the rendering
        if ($shouldRender) {
            $viewRenderer-&gt;setNoRender(false);
        } else {
            $viewRenderer-&gt;setNoRender(true);
        }
    }
}</code></pre>
Класс помощника готов. Теперь нужно зарегистрировать наш класс в брокере помощников (делайте это в вашем Bootstrap файле):
<pre><code class="php">Zend_Controller_Action_HelperBroker::getStack()
       -&gt;offsetSet(90, new Project_Controller_Action_Helper_Template());</code></pre>
Таким образом, мы сделали Action helper, который срабатывает до запуска viewRenderer'а, но после диспетчеризации действия и сообщает viewRenderer'у, нужно ли рендерить шаблон вида или нет.
<p style="text-align: right;">Спасибо <strong>lcf</strong> &lt;<a href="http://lcf.name">http://lcf.name</a>&gt; за любезно предоставленный код :)</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>162</wp:post_id>
<wp:post_date>2009-07-07 15:18:55</wp:post_date>
<wp:post_date_gmt>2009-07-07 10:18:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>load-view-template-in-zend-framework-if-exists</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1250508609</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Установка title, keywords и description на страницы сайта в Zend Framework</title>
<link>http://torqueo.net/adding-title-keywords-and-description-on-your-pages-in-zend-framework/</link>
<pubDate>Wed, 08 Jul 2009 12:30:34 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag" nicename="zf-front-controller-plugin"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag"><![CDATA[zf layout]]></category>

		<category domain="tag" nicename="zf-layout"><![CDATA[zf layout]]></category>

		<category domain="tag"><![CDATA[zf view]]></category>

		<category domain="tag" nicename="zf-view"><![CDATA[zf view]]></category>

		<category domain="tag"><![CDATA[zf view helpers]]></category>

		<category domain="tag" nicename="zf-view-helpers"><![CDATA[zf view helpers]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=164</guid>
<description></description>
<content:encoded><![CDATA[Итак, в один прекрасный момент работы с Zend Framework вам понадобится устанавливать title, description и keywords или какую-либо другую информацию к своим страницам, получая эту информацию из БД.

Можно долго думать, как сделать это наиболее правильно, как долго думал я. Но в итоге, посовещавшись с некоторыми людьми, я пришел к выводу, что лучшего решения, как сделать плагин для фронт-контроллера - не найти.

Поэтому, я написал эту функциональность в виде готового плагина.<!--more-->
<pre><code class="php">class Project_Controller_Plugin_Meta extends Zend_Controller_Plugin_Abstract
{
    public function preDispatch(Zend_Controller_Request_Abstract $request)
    {
        // Get data from model user-defined method
        $sitemap = new Sitemap;
        $this-&gt;page_data = $sitemap-&gt;getNodeInfoByUri( $request-&gt;getRequestUri() );

        Zend_Registry::set('page_data', $this-&gt;page_data);
    }

    public function postDispatch(Zend_Controller_Request_Abstract $request)
    {
            // Set title, keywords and description
            $layout = Zend_Layout::getMvcInstance();
            $view   = $layout-&gt;getView();

            $view-&gt;headTitle($this-&gt;page_data['title']);
            $view-&gt;headMeta($this-&gt;page_data['description'], 'description');
            $view-&gt;headMeta($this-&gt;page_data['keywords'], 'keywords');
    }
}</code></pre>
Как видно по названию плагина - структура библиотек моего приложения следует соглашению об именовании ZF, и повторяет структуру его библиотек для удобства. Все плагины загружаются автоматически при помощи  <em>Zend_Loader_Autoloader</em>. Точно так же загружается и плагин из <a href="/load-view-template-in-zend-framework-if-exists/">предыдущего поста</a>.

К фронт-контроллеру плагин подключается следующим образом:
<pre><code class="php">$front-&gt;registerPlugin(new Project_Controller_Plugin_Meta(), 110);</code></pre>
Теперь разберемся, что же происходит внутри плагина и как он работает. В методе <em>preDispatch()</em> нашего плагина мы получаем информацию о странице из БД, используя модель <em>Sitemap </em>и основываясь на текущем URI. Затем сохраняем полученную информацию в свойстве объекта плагина и в <em>Zend_Registry</em>.

Мы получаем информацию из БД именно в методе <em>preDispatch()</em> для того, чтобы она была доступна так же и в действии (action), чтобы нам не пришлось делать еще один SQL запрос, если мы захотим работать с информацией о странице внутри действия.

Затем, в методе <em>postDispatch()</em> мы получаем экземпляр объекта <em>Zend_Layout</em> и зарегистрированный в нём объект <em>Zend_View</em>. Он то нам и нужен. Дальше, при помощи помощников вида <em>headTitle </em>и <em>headMeta </em>мы устанавливаем в макет (layout) нужную информацию.

В макете, в секции <em>head</em>, выводим заголовок и мета-теги следующим образом:
<pre><code class="html">&lt;head&gt;
    &lt;?php echo $this-&gt;headTitle() ?&gt;
    &lt;?php echo $this-&gt;headMeta() ?&gt;
&lt;/head&gt;</code></pre>
Вот и все. Юзайте Zend Framework! :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>164</wp:post_id>
<wp:post_date>2009-07-08 17:30:34</wp:post_date>
<wp:post_date_gmt>2009-07-08 12:30:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>adding-title-keywords-and-description-on-your-pages-in-zend-framework</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1247152945</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Меню администратора, или блоки в Zend Framework.</title>
<link>http://torqueo.net/admin-menu-or-blocks-in-zend-framework/</link>
<pubDate>Thu, 09 Jul 2009 15:18:14 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[plugins]]></category>

		<category domain="tag" nicename="plugins"><![CDATA[plugins]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag" nicename="zf-front-controller-plugin"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag"><![CDATA[zf layout]]></category>

		<category domain="tag" nicename="zf-layout"><![CDATA[zf layout]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=166</guid>
<description></description>
<content:encoded><![CDATA[Продолжаю серию постов о <strong>Zend Framework</strong>.

В моем проекте передо мной встала задача. Мне нужно было сделать меню администратора, которое бы появлялось на странице при определенных событиях (например, после аутентификации).

Сначала я хотел решить эту задачу, определив базовый контроллер для всех контроллеров моего проекта. Но, я подумал, что это не лучший способ решения задачи, потому как я нашел более привлекательный метод - использовать плагин для фронт-контроллера. Такое решение мне показалось лучшим потому, что мы получаем менее связанный код. Чтобы убрать меню - нам придется всего лишь отключить плагин фронт-контроллера - это все. Нас опять выручают плагины!<!--more-->

Нам понадобится написать код плагина. Далее, я расскажу, как он работает. Итак, код:
<pre><code class="php">class Project_Controller_Plugin_Toolbar extends Zend_Controller_Plugin_Abstract
{
    public function dispatchLoopStartup(Zend_Controller_Request_Abstract $request)
    {
        if (!$request-&gt;isXmlHttpRequest()) {
            $actionStack = Zend_Controller_Front::getInstance()
                -&gt;getPlugin('Zend_Controller_Plugin_ActionStack');

            $menuAction = clone $request;
            $menuAction-&gt;setModuleName('application')
                       -&gt;setActionName('index')
                       -&gt;setControllerName('toolbar');

            $actionStack-&gt;pushStack($menuAction);
        }
    }
}</code></pre>
Теперь прокомментирую код.

Этот плагин срабатывает перед запуском цикла диспетчеризации, это обеспечивается определением метода <em>dispatchLoopStartup(), </em>в<em> </em>который<em> </em>передается объект текущего запроса. Видно, что логика метода завернуто в условие, которое определяет, что код не должен выполняться для <em>AJAX</em> запросов - нам же не нужно кашу к примеру, из <em>JSON</em> и нашего меню? :)

Дальше мы получаем стек плагин, управляющий стеком действий. Затем клонируем объект текущего запроса и устанавливаем при помощи аксессоров объекта свои значения контроллера, действия и модуля (так как мой проект имеет модульную структуру контроллеров).

В конце метода мы кладем в стек наш клонированный и настроенный объект запроса.

Итак, что получилось? Получилось, что мы создали новый объект запроса путем клонирования, которому установили значения модуля, контроллера и действия, а затем поместили его в стек действий. Плагин <em>Zend_Controller_Plugin_ActionStack </em>последовательно производит диспетчеризацию запросов из стека, после диспетчеризации основного действия (плагин делает это в хуке postDispatch()).

<strong>Важно!</strong> Не забудьте подключить к фронт-контроллеру плагин <em>Zend_Controller_Plugin_ActionStack</em> обслуживающий стек действий. Без него наш плагин <em>Project_Controller_Plugin_Toolbar </em>работать не будет.
<pre><code class="php">$front-&gt;registerPlugin(new Zend_Controller_Plugin_ActionStack(), 97);</code></pre>
И, конечно, не забываем подключить и наш свеженаписанный плагин:
<pre><code class="php">$front-&gt;registerPlugin(new Tanraya_Controller_Plugin_Toolbar(), 111);</code></pre>
А что же происходит в нашем контроллере ToolbarController? Там все просто - в методе <em>indexAction()</em> мы указываем, в какой сегмент макета выводить отрендеренный шаблон вида:
<pre><code class="php">$this-&gt;_helper-&gt;viewRenderer-&gt;setResponseSegment('toolbar');</code></pre>
А в макете вывод сегмента выглядит так:
<pre><code class="php">&lt;?=$this-&gt;layout()-&gt;toolbar ?&gt;</code></pre>
Ну вот - наше меню готово. У меня появились мысли, сделать универсальный механизм для работы с блоками, чтобы не писать отдельных плагинов для каждого блока на сайте. Я имею в виду те блоки, которые не кочуют из проекта в проект, как меню администратора, а используются только на конкретном сайте. Я пока не придумал, как реализовать такой механизм красиво, но зачатки мыслей уже есть и их нужно еще раз обдумать и реализовать. Как сделаю - напишу об этом отдельный пост.

Всем спасибо за внимание :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>166</wp:post_id>
<wp:post_date>2009-07-09 20:18:14</wp:post_date>
<wp:post_date_gmt>2009-07-09 15:18:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>admin-menu-or-blocks-in-zend-framework</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1247168986</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>224</wp:comment_id>
<wp:comment_author><![CDATA[IndecyImmenny]]></wp:comment_author>
<wp:comment_author_email>nonotot@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.163.44.16</wp:comment_author_IP>
<wp:comment_date>2009-08-18 17:26:42</wp:comment_date>
<wp:comment_date_gmt>2009-08-18 12:26:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Огромное спасибо! Очень помогла ваша информация!!!)))))))))))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>506</wp:comment_id>
<wp:comment_author><![CDATA[Atapin]]></wp:comment_author>
<wp:comment_author_email>info@atapin.de</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>217.88.159.233</wp:comment_author_IP>
<wp:comment_date>2009-10-17 03:15:07</wp:comment_date>
<wp:comment_date_gmt>2009-10-16 22:15:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А чем Zend_Navigation  не таков?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>me</title>
<link>http://torqueo.net/about/me/</link>
<pubDate>Sat, 11 Jul 2009 19:05:33 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2008/11/me.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>178</wp:post_id>
<wp:post_date>2009-07-12 00:05:33</wp:post_date>
<wp:post_date_gmt>2009-07-11 19:05:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>me</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>6</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2008/11/me.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2008/11/me.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"250";s:6:"height";s:3:"376";s:14:"hwstring_small";s:22:"height='95' width='63'";s:4:"file";s:14:"2008/11/me.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"me-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"me-199x300.jpg";s:5:"width";s:3:"199";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Блоки в Zend Framework</title>
<link>http://torqueo.net/blocks-in-zend-framework/</link>
<pubDate>Mon, 20 Jul 2009 11:09:07 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[plugins]]></category>

		<category domain="tag" nicename="plugins"><![CDATA[plugins]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag" nicename="zf-front-controller-plugin"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag"><![CDATA[Блоки в ZF]]></category>

		<category domain="tag" nicename="%d0%b1%d0%bb%d0%be%d0%ba%d0%b8-%d0%b2-zf"><![CDATA[Блоки в ZF]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=183</guid>
<description></description>
<content:encoded><![CDATA[В <a href="/admin-menu-or-blocks-in-zend-framework/">предыдущей заметке</a> я рассказывал, как сделать меню администратора на сайте в виде блока, встраиваемого в макет. В конце заметки я обещал написать, как сделать так, чтобы было удобно использовать блоки в <strong>Zend Framework</strong>. В этом посте я расскажу, как это сделать.

Если следовать принципу предыдущей заметки, то для каждого блока нам понадобилось бы создавать отдельный плагин фронт-контроллера, и подключать его в Bootstrap-файле. Но это накладные расходы, чего нам не надо.<!--more-->

<strong>Внимание! Читаем новую версию: <a href="/blocks-in-zend-framework-2/">Блоки в Zend Framework, версия 2</a></strong>

Я пришел к выводу, что оптимальнее всего было бы сделать отдельный конфигурационный файл, где были бы описаны все блоки, существующие у нас на сайте. Скажу сразу, что нас интересуют только такие блоки, которые имеют какое-либо поведение (юзер-кастом блоки, блоки зависящие от некоторого состояния приложения и т.п).

В общем, я сделал вот такой ini-файл <em>blocks.ini</em>, где разместил определение интересующих меня блоков:
<pre><code class="ini">
; Отдельные блоки на сайте, которые маппятся на контроллеры

; Блок: меню администратора
[toolbar]
  module=application
  controller=toolbar
  action=index
  supportXhr=false

; Блок: еще один блок
 [someblock]
   module=something
   controller=something
   action=something
   supportXhr=false
</code></pre>
Дальше я создал плагин фронт-контроллера, где подключил конфиг blocks.ini и совершил особую уличную магию (ничего сложного):
<pre><code class="php">
/**
 * Плагин для распределения блоков.
 *
 * Этот плагин позволяет загрузить различные контроллеры,
 * ответ которых потом можно вставить в layout в виде блоков.
 *
 * Конфиг блоков лежит в: config/blocks.ini
 */
class Tanraya_Controller_Plugin_Blocks extends Zend_Controller_Plugin_Abstract
{
    public function dispatchLoopStartup(Zend_Controller_Request_Abstract $request)
    {
        $actionStack = Zend_Controller_Front::getInstance()
        	-&gt;getPlugin('Zend_Controller_Plugin_ActionStack');

        // Получаем конфиги
        $path_to_app = Zend_Registry::get('path_to_app');
        $config      = Zend_Registry::get('config');

        // Получаем конфиг блоков
        $blocksConfig = new Zend_Config_Ini("{$path_to_app}/{$config-&gt;paths-&gt;blocks_config}");

        // Пробегаемся по всем перечисленным в конфиге блокам
        // и создаем новые объекты запроса для каждого блока, затем кладем
        // объекты запроса в стек
    	foreach ($blocksConfig-&gt;toArray() as $blockName=&gt;$blockOptions)
    	{
    		// Поддерживать Xhr запросы для данного блока?
    		// Если supportXhr == false, то контроллер для блока не будет запущен
    		if ($blockOptions['supportXhr'] === true &amp;&amp; $request-&gt;isXmlHttpRequest() === false)
    		{
    			continue;
    		}

            $r = clone $request;
            $r-&gt;setModuleName($blockOptions['module'])
              -&gt;setControllerName($blockOptions['controller'])
              -&gt;setActionName($blockOptions['action']);

            $actionStack-&gt;pushStack($r);
    	}
    }
}</code></pre>
Из кода должно быть все понятно, тем более тем, кто следил за серией постов. Параметр <em>supportXhr</em> нужен для того, чтобы не показывать блок, если происходит <em>AJAX</em>-запрос.

И, как обычно, подключаем наш плагин к фронт-контроллеру:
<pre><code class="php">
$this-&gt;front-&gt;registerPlugin(new Project_Controller_Plugin_Blocks());
</code></pre>
Как работает, надеюсь понятно - в конфиге мы просто указываем, какой контроллер и действие из какого модуля загружать. Принцип действия такой же, как и в заметке <a href="/admin-menu-or-blocks-in-zend-framework/">Меню администратора, или блоки в Zend Framework</a>. Кто еще не читал - резко читаем.

Засим откланяюсь, господа.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>183</wp:post_id>
<wp:post_date>2009-07-20 16:09:07</wp:post_date>
<wp:post_date_gmt>2009-07-20 11:09:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>blocks-in-zend-framework</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1250653827</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>194</wp:comment_id>
<wp:comment_author><![CDATA[Блоки в Zend Framework, версия 2 / Neurons to bytes]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://torqueo.net/blocks-in-zend-framework-2/</wp:comment_author_url>
<wp:comment_author_IP>127.0.5.88</wp:comment_author_IP>
<wp:comment_date>2009-07-24 13:33:30</wp:comment_date>
<wp:comment_date_gmt>2009-07-24 08:33:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] своей статье Блоки в Zend Framework я рассказал, как можно встраивать блоки в макет [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>226</wp:comment_id>
<wp:comment_author><![CDATA[Dr0n]]></wp:comment_author>
<wp:comment_author_email>pan_dron@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.52.219.72</wp:comment_author_IP>
<wp:comment_date>2009-08-19 02:54:31</wp:comment_date>
<wp:comment_date_gmt>2009-08-18 21:54:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Интерестно придумано с конфигом. Спасибо
зы Кстати поправьте сылку "локи в Zend Framework, версия 2".]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Блоки в Zend Framework, версия 2</title>
<link>http://torqueo.net/blocks-in-zend-framework-2/</link>
<pubDate>Fri, 24 Jul 2009 08:33:25 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[zf action helper]]></category>

		<category domain="tag" nicename="zf-action-helper"><![CDATA[zf action helper]]></category>

		<category domain="tag"><![CDATA[Блоки в ZF]]></category>

		<category domain="tag" nicename="%d0%b1%d0%bb%d0%be%d0%ba%d0%b8-%d0%b2-zf"><![CDATA[Блоки в ZF]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=190</guid>
<description></description>
<content:encoded><![CDATA[В своей статье <a href="http://torqueo.net/blocks-in-zend-framework/">Блоки в Zend Framework</a> я рассказал, как можно встраивать блоки в макет приложения на <strong>Zend Framework</strong>. Но, как оказалось, предложенный мною способ не является удобным - мы не можем управлять поведением блоков, то есть не можем включать их только для некоторых контроллеров. Это был огромный недостаток.

Но! Я хорошенько обмозговал все это дело и решил исправить ситуацию. Итак, представляю вам второй способ работы с блоками в ZF.<!--more-->

Конфиг блоков я оставил в том виде, в каком он был:
<pre><code class="ini">; Отдельные блоки на сайте, которые маппятся на контроллеры

; Блок: меню администратора
[toolbar]
  module=application
  controller=toolbar
  action=index

; Блок: еще один блок
 [someblock]
   module=something
   controller=something
   action=something
</code></pre>
Только убрал у блоков параметр <em>supportXhr </em>- теперь все блоки по-умолчанию не будут загружаться, если произошел <em>AJAX </em>запрос.

Дальше, пришлось написать для пущего удобства помощник действия (<em>action helper</em>) и отказаться от использования плагина фронт-контроллера (<em>controller plugin</em>). Это было сделано для того, чтобы можно было управлять поведением блоков из действий контроллера.

Помощник действия получился таким:
<pre><code class="php">class Project_Controller_Action_Helper_Block extends Zend_Controller_Action_Helper_ActionStack
{
    protected $_config = array();

    protected function loadConfig()
    {
        $blocksConfig  = new Zend_Config_Ini(APPLICATION_PATH . "/config/blocks.ini");
        $this-&gt;_config = $blocksConfig-&gt;toArray();
    }

    public function dispatch($blockName)
    {
        if ($this-&gt;getRequest()-&gt;isXmlHttpRequest())
        {
            return;
        }

        if (empty($this-&gt;_config)) {
            $this-&gt;loadConfig();
        }

        foreach ($this-&gt;_config as $name=&gt;$options) {
            if ($blockName == $name) {
                $r = new Zend_Controller_Request_Simple;
                $r-&gt;setModuleName($options['module'])
                  -&gt;setControllerName($options['controller'])
                  -&gt;setActionName($options['action'])
                  -&gt;setDispatched(false);

                $this-&gt;pushStack($r);
            }
        }
    }
}
</code></pre>
Теперь мы можем загрузить блок прямо из действия контроллера таким образом:
<pre><code class="php">$this-&gt;_helper-&gt;block-&gt;dispatch('toolbar');
</code></pre>
Для сквозных блоков, то есть тех, которые есть на каждой странице сайта, рекомендую делать базовый контроллер для всех остальных контроллеров и в его методе <em>preDispatch()</em> загружать нужные блоки.

Кстати, нельзя сначала загрузить блок, а потом выгрузить его. Обратного пути нет. Блок можно только загрузить  - обратное действие нелогично и неэффективно.

Кто-то может спросить - а зачем нужен конфиг блоков? Смысл конфига, в основном, заключается в систематизации - мы видим в одном месте, какие блоки у нас имеются на сайте. К тому же, код загрузки блока при помощи помощника действия уменьшился, так как мы указываем только имя блока. Еще один плюс - мы можем поменять значения модуля, контроллера и действия в одном месте. Считаю это удобным.

До скорого.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>190</wp:post_id>
<wp:post_date>2009-07-24 13:33:25</wp:post_date>
<wp:post_date_gmt>2009-07-24 08:33:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>blocks-in-zend-framework-2</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1266385511</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1135</wp:comment_id>
<wp:comment_author><![CDATA[helloamigo]]></wp:comment_author>
<wp:comment_author_email>helloamigo@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.241.45.60</wp:comment_author_IP>
<wp:comment_date>2010-02-17 07:37:05</wp:comment_date>
<wp:comment_date_gmt>2010-02-17 02:37:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо, хорошая работа.
А каким образом можно определить очередность вывода блоков в методе preDispatch()?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1136</wp:comment_id>
<wp:comment_author><![CDATA[helloamigo]]></wp:comment_author>
<wp:comment_author_email>helloamigo@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.241.45.60</wp:comment_author_IP>
<wp:comment_date>2010-02-17 07:59:26</wp:comment_date>
<wp:comment_date_gmt>2010-02-17 02:59:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я имею в виду седующее: каким образом я могу вывести нужный мне блок, в скрипте вида, в нужном мне месте?!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1135</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1137</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.13.37</wp:comment_author_IP>
<wp:comment_date>2010-02-17 10:50:44</wp:comment_date>
<wp:comment_date_gmt>2010-02-17 05:50:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Читайте финальную статью о блоках в ZF: http://torqueo.net/blocks-in-zend-framework-final-version/]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Микропост про базовый контроллер</title>
<link>http://torqueo.net/about-base-controller-in-zend-framework/</link>
<pubDate>Mon, 27 Jul 2009 11:48:57 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

<guid isPermaLink="false">http://torqueo.net/%d0%bc%d0%b8%d0%ba%d1%80%d0%be%d0%bf%d0%be%d1%81%d1%82-%d0%bf%d1%80%d0%be-%d0%b1%d0%b0%d0%b7%d0%be%d0%b2%d1%8b%d0%b9-%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%be%d0%bb%d0%bb%d0%b5%d1%80/</guid>
<description></description>
<content:encoded><![CDATA[В базовом контроллере приложения, от которого наследуются все остальные контроллеры, нельзя ничего инициализировать, в частности, инстанцировать. Если только объект не является синглетоном.

Лучше в нем вообще ничего не инициализировать, а только <em>проверять</em>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>194</wp:post_id>
<wp:post_date>2009-07-27 16:48:57</wp:post_date>
<wp:post_date_gmt>2009-07-27 11:48:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>about-base-controller-in-zend-framework</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248695686</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d0%bc%d0%b8%d0%ba%d1%80%d0%be%d0%bf%d0%be%d1%81%d1%82-%d0%bf%d1%80%d0%be-%d0%b1%d0%b0%d0%b7%d0%be%d0%b2%d1%8b%d0%b9-%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%be%d0%bb%d0%bb%d0%b5%d1%80</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>313</wp:comment_id>
<wp:comment_author><![CDATA[san]]></wp:comment_author>
<wp:comment_author_email>a.mahomet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://zendframework.ru</wp:comment_author_url>
<wp:comment_author_IP>77.122.63.123</wp:comment_author_IP>
<wp:comment_date>2009-09-07 01:18:07</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 20:18:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А лучше вообще не использовать его :) Так как есть плагины и хелперы]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Zend Translate и сканирование директорий</title>
<link>http://torqueo.net/zend-translate-and-directory-scanning/</link>
<pubDate>Tue, 28 Jul 2009 06:32:53 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[i18n]]></category>

		<category domain="tag" nicename="i18n"><![CDATA[i18n]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[Zend_Translate]]></category>

		<category domain="tag" nicename="zend_translate"><![CDATA[Zend_Translate]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=198</guid>
<description></description>
<content:encoded><![CDATA[Здарова, юзеры ZF!

Большинство из вас уже используют <strong>Zend_Translate</strong>. До сих пор возможность для сканирования каталогов для перевода файлов была доступна только при создании экземпляра Zend_Translate.

Теперь я добавил эту возможность  также и для метода <em>addTranslation()</em>, который означает, что вы теперь можете добавлять новые каталоги после создания экземпляра объекта. Эта функция удобна, когда вы используете модульную структуру приложения и файлы с переводами существуют для каждого модуля в отдельности.

Для тех, кто ничего не знает про данную функциональность - у меня тут есть краткое описание:

Вместо того, чтобы добавлять переводы вручную, будет гораздо удобнее использовать автоматическое добавление переводов, используя только один вызов метода.<!--more-->

Не рекомендуемый метод добавления переводов:
<pre><code class="php">$translate = new Zend_Translate('gettext', '/my/proj/lang/en/proj.mo', 'en');
$translate-&gt;addTranslation('/my/proj/lang/de/proj.mo', 'de');
$translate-&gt;addTranslation('/my/proj/lang/fr/proj.mo', 'fr');</code></pre>
Как вы видите, мы добавили лишь переводы для трех языков... Если вы работаете с разделенными переводами, когда для каждого языка используется несколько файлов перевода, то вам потребуется добавить гораздо больше файлов.

Поэтому, было бы лучше, если бы вы сделали это при помощи встроенной функциональности Zend_Translate. Смотрите следующий код:
<pre><code class="php">$translate = new Zend_Translate('gettext', '/my/proj/lang/', 'en',
     array('scan' =&gt; Zend_Translate::LOCALE_DIRECTORY));</code></pre>
Что происходит при использовании этого кода:

Zend_Translate получает список директорий по указанному пути. При помощи опции <em>scan</em> мы сообщяем ему, что  имена вложенных директорий по указанному пути являются именами языка/локали. Теперь Zend_Translate пробежится по всем вложенным директориям и автоматически добавит все найденные переводы.

Таким образом, файл <em>/my/proj/lang/de/proj.mo</em> будет добавлен в локаль <em>de</em>, так как имя каталога, содержащего файл перевода совпадает с именем немецкой локали. Не имеет значения, какую глубину вложенности имеют файлы каталога <em>/my/proj/lang/de/ </em>- все файлы переводов будут найдены во всех подкаталогах директории. Это работает не только с c адаптером <em>gettext</em>, но и с любым другим, таким как <em>TMX</em>, <em>Array</em>, <em>CSV </em>и т.д. Единственное, что должно совпасть - это имя директории с переводами с именем локали.

Но есть и другой способ, чтобы получить имя локали. Локаль может быть прописана в имени файла, одним из следующих способов:
<pre><code class="text">'/my/proj/lang/myfile_de.mo'
'/my/file/lang/myfile-de.mo'
'/my/file/lang/myfile.de.mo'</code></pre>
Все эти три способа именования файлов будут признаны для локали <em>de</em>.

Для использования этого способа именования вам только нужно установить значение <em>Zend_Locale::LOCALE_FILENAME</em> у опции <em>scan</em>.
<p style="text-align: right;"><em>Этот пост - вольный <a rel="noindex,nofollow" href="http://www.thomasweidner.com/flatpress/2008/03/02/zend-translate-and-directory-scanning/comments/">перевод поста</a> Томаса Вейднера,
Главного чувака в команде ZF по интернационализации.</em>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>198</wp:post_id>
<wp:post_date>2009-07-28 11:32:53</wp:post_date>
<wp:post_date_gmt>2009-07-28 06:32:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>zend-translate-and-directory-scanning</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248762881</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Хабрапридурки</title>
<link>http://torqueo.net/stupidfucks-from-habrahabr/</link>
<pubDate>Tue, 28 Jul 2009 08:06:38 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[свежий навоз]]></category>

		<category domain="category" nicename="%d1%81%d0%b2%d0%b5%d0%b6%d0%b8%d0%b9-%d0%bd%d0%b0%d0%b2%d0%be%d0%b7"><![CDATA[свежий навоз]]></category>

		<category domain="tag"><![CDATA[Мудаки]]></category>

		<category domain="tag" nicename="%d0%bc%d1%83%d0%b4%d0%b0%d0%ba%d0%b8"><![CDATA[Мудаки]]></category>

		<category domain="tag"><![CDATA[Хабр]]></category>

		<category domain="tag" nicename="%d1%85%d0%b0%d0%b1%d1%80"><![CDATA[Хабр]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=202</guid>
<description></description>
<content:encoded><![CDATA[Недавно на Хабре написал пост, в личный блог:
<blockquote><em>Небольшой багрепорт.</em>

<em>Только что полтора часа провел в терзаниях. У меня в блоге почему-то корявился код, который подсвечивается при помощи highlight.js. Я уж было разобрал на составляющие шаблоны моего блога в поисках ошибки, но, как оказалось, во всем виноват Firebug.</em>

<em>Столкнулся с еще одним глюком в нем. При написании поста в wordpress'е, когда срабатывает автосохранение, редактор вылетает в белый экран с кнопками (упрощенный вид редактирования).</em>

<em>Теперь сижу жду, когда Firebug обновится. </em></blockquote>
<p style="text-align: left;">И вот firebug обновился. Ошибки действительно были - "getfirebug.com has Firebug 1.4.1, an update of Firebug 1.4 with many bug fixes". Но блять, стоило написать об этом в <em>личный блог</em>, как пост начали активно минусить. Уродство. Хочется помочь людям - а какие то уроды минусят, спуская пост все ниже и ниже. Аж пришлось закрыть тот пост.</p>
<p style="text-align: left;">Из-за таких гомосеков отпадает все желание писать посты на Хабр (была тут мыслишка кое о чем написать). Но блять, про всякую хуйню писать - это, блять, они горазды, причем активно плюсуют. Теперь Хабр чеканным шагом идет нахуй, получается. Лучше буду сюда писать.</p>

Извините, не сдержался.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>202</wp:post_id>
<wp:post_date>2009-07-28 13:06:38</wp:post_date>
<wp:post_date_gmt>2009-07-28 08:06:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>stupidfucks-from-habrahabr</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1251905364</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>204</wp:comment_id>
<wp:comment_author><![CDATA[Konstantin Tumalevich]]></wp:comment_author>
<wp:comment_author_email>userad@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://tumalevich.pp.ru</wp:comment_author_url>
<wp:comment_author_IP>79.142.168.10</wp:comment_author_IP>
<wp:comment_date>2009-07-28 18:51:48</wp:comment_date>
<wp:comment_date_gmt>2009-07-28 13:51:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Сборище денисок, хуле]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>people</title>
<link>http://torqueo.net/who-are-all-these-people/people/</link>
<pubDate>Tue, 28 Jul 2009 09:56:30 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/07/people.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>205</wp:post_id>
<wp:post_date>2009-07-28 14:56:30</wp:post_date>
<wp:post_date_gmt>2009-07-28 09:56:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>people</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>204</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/07/people.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/07/people.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"400";s:6:"height";s:4:"1120";s:14:"hwstring_small";s:22:"height='96' width='34'";s:4:"file";s:18:"2009/07/people.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"people-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"people-107x300.jpg";s:5:"width";s:3:"107";s:6:"height";s:3:"300";}s:5:"large";a:3:{s:4:"file";s:19:"people-365x1024.jpg";s:5:"width";s:3:"365";s:6:"height";s:4:"1024";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Who are all these people?</title>
<link>http://torqueo.net/who-are-all-these-people/</link>
<pubDate>Tue, 28 Jul 2009 09:57:00 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=204</guid>
<description></description>
<content:encoded><![CDATA[I'm waiting your suggestions in the comments :)

<img class="alignleft size-full wp-image-205" title="people" src="http://torqueo.net/wp-content/uploads/2009/07/people.jpg" alt="people" width="400" height="1120" />]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>204</wp:post_id>
<wp:post_date>2009-07-28 14:57:00</wp:post_date>
<wp:post_date_gmt>2009-07-28 09:57:00</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>who-are-all-these-people</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1248775023</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>263</wp:comment_id>
<wp:comment_author><![CDATA[Grey2k]]></wp:comment_author>
<wp:comment_author_email>grey2k@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>91.202.46.82</wp:comment_author_IP>
<wp:comment_date>2009-08-31 22:38:52</wp:comment_date>
<wp:comment_date_gmt>2009-08-31 17:38:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[На седьмой фотке Страусбурп, создатель С++

остальных каюсь но не знаю


PS: отличный блог - пиши еще !]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>7340</wp:comment_id>
<wp:comment_author><![CDATA[Макс]]></wp:comment_author>
<wp:comment_author_email>maksim.sherstobitow@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>81.25.33.46</wp:comment_author_IP>
<wp:comment_date>2011-04-25 14:49:30</wp:comment_date>
<wp:comment_date_gmt>2011-04-25 09:49:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[3. Гвидо ван Россум
7. Бьерн Страуструп
8. Юкихиро Мацумото]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Zend_Form - установить собственное сообщение об ошибке</title>
<link>http://torqueo.net/zend_form-set-custom-error-message/</link>
<pubDate>Mon, 17 Aug 2009 10:43:48 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[Zend_Form]]></category>

		<category domain="tag" nicename="zend_form"><![CDATA[Zend_Form]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=211</guid>
<description></description>
<content:encoded><![CDATA[<h3>Zend_Form - переопределение ошибок.</h3>
Иногда требуется в форме установить собственное сообщение об ошибке, когда форма проходит валидацию.

Например, мы хотим проверить, заполнено ли имя пользователя:
<pre><code class="php">$username = $this-&gt;createElement('text', 'username');
$username-&gt;setRequired();

$username-&gt;addValidator('NotEmpty', false, array(
    'messages' =&gt; array(
        'isEmpty' =&gt; 'EmptyUsername'
    )
));</code></pre>
Видно, как в массиве сообщений мы делаем как бы алиас на нужное нам сообщение. Теперь осталось только добавить в файл с переводами строчку
<pre><code class="php">'EmptyUsername' =&gt; 'Введите имя пользователя'</code></pre>
и при валидации, если поле будет пустое, мы увидим переопределенную нами ошибку:

<em><strong>Введите имя пользователя</strong></em>

Вот так вот.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>211</wp:post_id>
<wp:post_date>2009-08-17 15:43:48</wp:post_date>
<wp:post_date_gmt>2009-08-17 10:43:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>zend_form-set-custom-error-message</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1250587748</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Дефолтный маршрут в Zend Framework. Некоторые тонкости.</title>
<link>http://torqueo.net/default-route-zend-framework-some-unobvious-things/</link>
<pubDate>Tue, 18 Aug 2009 09:13:42 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[Default Route]]></category>

		<category domain="tag" nicename="default-route"><![CDATA[Default Route]]></category>

		<category domain="tag"><![CDATA[Routing]]></category>

		<category domain="tag" nicename="routing"><![CDATA[Routing]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=217</guid>
<description></description>
<content:encoded><![CDATA[По-умолчанию в схеме маршрутизации <strong>Zend Framework</strong> используется дефолтный маршрут. Он добавляется непосредственно перед началом процесса маршрутизации, в методе<em> Zend_Controller_Router_Rewrite::route()</em>

Дефолтный маршрут - это объект класса <em>Zend_Controller_Router_Route_Module</em>. При создании этого объекта в его конструктор передаются объекты диспетчера и запроса.

И тут есть такая тонкость: в конструкторе объекта дефолтного маршрута параметры диспетчера и запроса указаны как необязательные. Может возникнуть предположение, что если в конструктор не были переданы эти объекты, то они автоматически инициализируются внутри дефолтного роута. Так вот - это не так.

Если вы собрались переопределить <em>Zend_Controller_Router_Route_Module</em>, то не забывайте при инстанцировании своего класса всегда передавать в него диспетчер и объект запроса - иначе долго будете искать ошибку, почему ничего не работает (как я искал):
<pre><code class="php">$front = Zend_Controller_Front::getInstance();

$front-&gt;getRouter()-&gt;addRoute('default',
    new My_Controller_Router_Route_Module(
        array(
                'lang'       =&gt; 'en',
                'module'     =&gt; 'application',
                'controller' =&gt; 'index',
                'action'     =&gt; 'index',
        ),
        $front-&gt;getDispatcher(),
        $front-&gt;getRequest()
    )
);</code></pre>
Мне не ясно, почему разработчики <em>ZF</em> сделали опциональными те два параметра. По-моему, их стоило бы сделать обязательными, тогда таких ошибок можно было бы не допускать.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>217</wp:post_id>
<wp:post_date>2009-08-18 14:13:42</wp:post_date>
<wp:post_date_gmt>2009-08-18 09:13:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>default-route-zend-framework-some-unobvious-things</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1250586825</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>10846</wp:comment_id>
<wp:comment_author><![CDATA[Игорь]]></wp:comment_author>
<wp:comment_author_email>igorokb@rambler.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>89.19.121.187</wp:comment_author_IP>
<wp:comment_date>2011-09-05 17:47:30</wp:comment_date>
<wp:comment_date_gmt>2011-09-05 12:47:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[+1 автору. Нашел ответ на свой вопрос.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Почему валидация в Zend_Form это плохо, или о том, как делать правильную валидацию</title>
<link>http://torqueo.net/why-zend-form-validation-is-bad-or-how-to-do-proper-validation/</link>
<pubDate>Thu, 27 Aug 2009 04:03:22 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[Zend_Db_Table]]></category>

		<category domain="tag" nicename="zend_db_table"><![CDATA[Zend_Db_Table]]></category>

		<category domain="tag"><![CDATA[Zend_Form]]></category>

		<category domain="tag" nicename="zend_form"><![CDATA[Zend_Form]]></category>

		<category domain="tag"><![CDATA[Валидаторы]]></category>

		<category domain="tag" nicename="%d0%b2%d0%b0%d0%bb%d0%b8%d0%b4%d0%b0%d1%82%d0%be%d1%80%d1%8b"><![CDATA[Валидаторы]]></category>

		<category domain="tag"><![CDATA[Модель]]></category>

		<category domain="tag" nicename="%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d1%8c"><![CDATA[Модель]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=221</guid>
<description></description>
<content:encoded><![CDATA[В настоящий момент <strong>Zend Framework</strong> имеет набор валидаторов, которые обычно используются для проверки входных данных из форм. Для этого используется пакет <strong>Zend_Form</strong>, отдельно же валидаторы используются достаточно редко.

Вроде бы всё хорошо, все пользуются и все довольны. Но если подумать, то в <strong>ZF</strong> валидация располагается не на том уровне, на котором хотелось бы. Я уверен, что валидация входных данных должна производиться именно в моделях и ни в коем случае не в формах, как сделано на даный момент. Почему? Остановимся на этом подробнее.<!--more-->

Представьте, что у вас есть форма для добавления поста в блог. Соответственно, есть класс, наследуемый от <strong>Zend_Form</strong>, который определяет, какие поля будут в форме, устанавливает на них валидаторы и, возможно, декораторы. В итоге мы получаем готовую форму, которую достаточно только вывести в нужное место шаблона - и можно использовать. Все будет валидироваться, и вроде бы все прекрасно.

Но представьте, что в один прекрасный момент вам понадобится написать робота, который должен будет опубликовывать посты, приходящие на указанный e-mail. То есть скрипт должен заходить на почтовый ящик через некоторые промежутки времени, получать по некоторым критериям письма, парсить их и опубликовывать в блоге. Получается, что форма тут не нужна - мы добавляем письма напрямую, минуя форму. А вдруг парсинг письма пройдет неправильно? Мы запросто можем получить пустой пост в блоге, или некорректный, если произойдут ошибки при парсинге.

Что делать? Чтобы избежать подобных ситуаций, придется добавлять валидатор и в модель, которая отвечает за добавление поста. Но получается, что теперь валидаторы будут указаны в двух разных местах - в форме и в модели. Это ужасно.

Чтобы избежать подобных противоречий, необходимо определять валидаторы только в конечной точке, отвечающей за непосредственное добавление поста в БД - конечно же в модели, и забыть про использование валидаторов в форме.

Кто-то скажет: так ведь форма не обязательно может добавлять данные в БД, она, например, может отправлять письмо на ту же почту, или делать что-то другое, не работая с БД. Зачем тогда определять валидаторы в модели?

Тут нужно понять, что модель - это не та штука, которая предназначена только для добавления данных в БД. Модель - это бизнес-логика, это то место, где происходит обработка поступивших данных. В <strong>Zend Framework</strong> мы имеем только один вид модели - <strong>Zend_Db_Table</strong>, и эта модель работает только с таблицами БД. Мы пока не имеем нечто среднее - модель, которая умеет работать и с таблицей и без ее использования. Когда мы получим такую функциональность, тогда мы сможем определять валидаторы в модели, будь это модель, добавляющая данные в таблицу БД, либо же не имеющая таблицы.

Я не знаю, есть ли какие-то подвижки в сторону "правильных моделей" у команды разработчиков <strong>ZF</strong>, но я очень надеюсь, что подобные желания у них есть. В любом случае, даже если это не так, я сам возьмусь за написание описанной мною функциональности.

Спасибо, надеюсь вам было интересно :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>221</wp:post_id>
<wp:post_date>2009-08-27 09:03:22</wp:post_date>
<wp:post_date_gmt>2009-08-27 04:03:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>why-zend-form-validation-is-bad-or-how-to-do-proper-validation</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1256914465</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>272</wp:comment_id>
<wp:comment_author><![CDATA[san]]></wp:comment_author>
<wp:comment_author_email>a.mahomet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://zendframework.ru</wp:comment_author_url>
<wp:comment_author_IP>77.122.63.123</wp:comment_author_IP>
<wp:comment_date>2009-09-02 17:20:44</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 12:20:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Модель в моем понимании это то что не поставляется ни в каком виде фреймворком, это логика приложения. Zend_Db_Table всего лишь предоставляет способ удобного доступа в БД.
А вообще рассуждения весьма интересные, сам об этом думал недавно. Интересно было бы увидеть вариант реализации подобной идеи.

P.S. Добавил ваш блог в каталог.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>274</wp:comment_id>
<wp:comment_author><![CDATA[lcf]]></wp:comment_author>
<wp:comment_author_email>lcfsoft@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>85.172.104.27</wp:comment_author_IP>
<wp:comment_date>2009-09-02 19:08:00</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 14:08:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA["Для этого используется пакет Zend_Form, отдельно же валидаторы используются достаточно редко."
Ничего не знаю, я использую валидаторы для валидации. формы тут вообще не причем. То что в них можно встроить валидаторы - удобная фича.

"Но представьте, что в один прекрасный момент вам понадобиться написать робота, который должен будет опубликовывать посты, приходящие на указанный e-mail. То есть скрипт должен заходить на почтовый ящик через некоторые промежутки времени, получать по некоторым критериям письма, парсить их и опубликовывать в блоге. Получается, что форма тут не нужна - мы добавляем письма напрямую, минуя форму. А вдруг парсинг письма пройдет неправильно? Мы запросто можем получить пустой пост в блоге, или некорректный, если произойдут ошибки при парсинге."

Фишка в том, что валидаторы не обязательно должны быть использованны вместе с формой. Вы можете взять валидатор (который сам по себе является моделью реализующей валидирующую часть упомянутой вами бизнес логики) где угодно. В скрипте-роботе, для валидации объекта запроса... ваще где угодно. Таккой подход/вынесение валидации в отдельную модель нравится гораздо больше. Он предоставляет тот же функционал, но более диференцированно, гораздо гибче. Я могу валидировать данные где угодно когда угодно, мне не надо вызывать методы модели Книга чтобы узнать валидны ли какие либо данные.

Конечные же модели должны генерировать исключения в исключительных ситуациях,

Где что я не вижу? Где узкие места?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>276</wp:comment_id>
<wp:comment_author><![CDATA[lcf]]></wp:comment_author>
<wp:comment_author_email>lcfsoft@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>85.172.104.27</wp:comment_author_IP>
<wp:comment_date>2009-09-02 19:57:50</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 14:57:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Как подписаться на уведомление о новых комментах? Можно как нить?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>277</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.234.164</wp:comment_author_IP>
<wp:comment_date>2009-09-02 20:15:39</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 15:15:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[2 san:

Да, вы правы, модель - это, конечно же, не таблица в БД. Это то "мясо" приложения, которое находится на костях - контроллере (если можно провести такую аналогию). Просто чаще всего, в приложениях которые каждый из нас делает, это наша бизнес-логика завязана в основном на БД. И нам бы нужно какой-то инструмент, чтобы было удобнее работать с подобными вещами - но увы, его пока нет. Приходится обходиться.
Я пока смотрю в сторону Rails - очень уж там удобно сделана работа с моделями. Очень :) Конкретной реализации у меня пока нет, есть только кое какие наброски, килобайт на 30 кода. Тут наверное нужно единомышленников искать - одному это можно годами делать. Потом как-нибудь напишу пост на эту тему.

Спасибо за добавление в каталог :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>272</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>279</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.234.164</wp:comment_author_IP>
<wp:comment_date>2009-09-02 20:23:38</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 15:23:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[2 lcf:

<blockquote>Фишка в том, что валидаторы не обязательно должны быть использованны вместе с формой.</blockquote>

Это так. Но я видел что люди его чаще всего используют именно в формах. Наверное, это зависит от специфики проекта.

<blockquote>
Я могу валидировать данные где угодно когда угодно, мне не надо вызывать методы модели Книга чтобы узнать валидны ли какие либо данные. ... Где что я не вижу? Где узкие места?</blockquote>

Мысль понятна. Но так ли это накладно будет вызвать нужные методы у модели, особенно если это было бы сделано удобно? Тем более, где еще нужно валидировать данные, как не в модели? По-моему это и есть та самая точка, где требуется валидация пришедших данных, потому, как после этой точки с данными что-то происходит: они записываются в БД, посылаются на e-mail, или отправляются на дальнейшую обработку куда-либо.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>274</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>285</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-09-03 10:45:28</wp:comment_date>
<wp:comment_date_gmt>2009-09-03 05:45:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Поставил плагин - теперь можно подписываться.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>276</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>290</wp:comment_id>
<wp:comment_author><![CDATA[lcf]]></wp:comment_author>
<wp:comment_author_email>lcfsoft@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>85.172.104.27</wp:comment_author_IP>
<wp:comment_date>2009-09-03 21:40:41</wp:comment_date>
<wp:comment_date_gmt>2009-09-03 16:40:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>285</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>312</wp:comment_id>
<wp:comment_author><![CDATA[Zh0rzh]]></wp:comment_author>
<wp:comment_author_email>georgy.turevich@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.134.34.176</wp:comment_author_IP>
<wp:comment_date>2009-09-07 01:11:42</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 20:11:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А еще робот паук может сделать так :)

$data = ...;

$form = new App_MyForm();
if($form-&gt;isValid($data)) {
   ...
}

Формы очень удобно агрегируют валидаторы и из них же опять удобно извлечь все ошибки валидаторов.

Плюс есть мнение - что объекты форм тоже можно отнести к части модели]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>332</wp:comment_id>
<wp:comment_author><![CDATA[giovanni]]></wp:comment_author>
<wp:comment_author_email>egor@tpc2.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>88.203.91.53</wp:comment_author_IP>
<wp:comment_date>2009-09-08 17:02:49</wp:comment_date>
<wp:comment_date_gmt>2009-09-08 12:02:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[а наиболее острый вопрос не в том где валидировать, а в том КАК узнает клиент (форма) о требуемом формате данных у сервера (модели). потому что валидировать с последующим выбросом exception - это не валидация, а просто sanity check.

вот как сделать так модель, чтобы она не просто валидировала, но и ДЕКЛАРИРОВАЛА свою валидационную составляющую]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>334</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.32</wp:comment_author_IP>
<wp:comment_date>2009-09-08 20:53:05</wp:comment_date>
<wp:comment_date_gmt>2009-09-08 15:53:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Смотрите, если я вас правильно понял, то тогда примерно так.

Если делать так, что в модели будут валидироваться входящие данные, то, можно указывать валидаторы наподобие валидаторов в Rails. Соответственно, модель теперь знает, как валидировать свои данные (она хранит определенные валидаторы внутри объекта). Теперь, если мы передадим объект модели в view script, а в нем в какой-либо хелпер вида, который сгенерирует нам javascript-код для валидации формы.

И какой такой формат данных может быть у модели?
Все же, мне кажется, моя твоя непониль :)

Жду ответа.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>332</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>335</wp:comment_id>
<wp:comment_author><![CDATA[giovanni]]></wp:comment_author>
<wp:comment_author_email>egor@tpc2.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>88.203.91.53</wp:comment_author_IP>
<wp:comment_date>2009-09-08 21:07:44</wp:comment_date>
<wp:comment_date_gmt>2009-09-08 16:07:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[смотри пример. есть класс Employee, у которого есть свойство age. в итоге имеем $employee-&gt;age. у этого свойства есть ряд мета-свойств. а именно:
- диапазон значений
- смысл (что это вообще за свойство)
- условия допустимости (например if ($sex == 'female') $age &lt; 60 else $age &lt; 65)
- и куча всего прочего

теперь имеем две формы. разные. в одной мы хотим назначить возраст сотруднику. в другой мы хотим этот возраст редактировать на основании чего-то (допустим это разные формы).

теперь я хочу чтобы инициализация и конфигурация формы (!) происходила автоматом, на основании мета-данных из моего класса Employee. я хочу чтобы форма САМА поняла, что можно а что нельзя делать с этим свойством $age.

и форма и кто угодно любой другой. и поняла и получила бы адекватный ответ из класса Employee...

хочется создать такой механизм]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>338</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-09-09 08:56:31</wp:comment_date>
<wp:comment_date_gmt>2009-09-09 03:56:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ага, теперь мне все стало понятно. Надо придумать, как указывать эти "мета-свойства" в модели.

Гляну, как в Ruby ActiveRecord подобное реализуется (наверняка там есть что-то похожее).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>335</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>341</wp:comment_id>
<wp:comment_author><![CDATA[giovanni]]></wp:comment_author>
<wp:comment_author_email>egor@tpc2.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>88.203.91.53</wp:comment_author_IP>
<wp:comment_date>2009-09-09 15:30:43</wp:comment_date>
<wp:comment_date_gmt>2009-09-09 10:30:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[да, будет здорово услышать идеи]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>338</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>594</wp:comment_id>
<wp:comment_author><![CDATA[Dr0n]]></wp:comment_author>
<wp:comment_author_email>pan_dron@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.88.112.130</wp:comment_author_IP>
<wp:comment_date>2009-10-29 19:17:46</wp:comment_date>
<wp:comment_date_gmt>2009-10-29 14:17:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[В моем понимании модель - это объект для работы с данными, не важно с какими данными (таблица в БД, набор таблиц, файловая система). И валидировать данные в модели, в моем понимании, не правильно. Потому что в различных местах проекта для одной и той же модели, могут быть присущи различные правила валидации. 
При подходе с валидацией данных в модели Вам придется отслеживать все эти участки и учитывать при проектировании модели.
Валидация данных должна происходить в контроллере, и даже не обязательно в объекте Form (как писалось выше это просто удобная фича).
Для валидации у себя в проектах я использую цепочки валидации применяемые к моделям. Т.е. до того как данные будут сохранены.
Цепочки валидации тоже можно вынести в модели, если используются одинаковые в разных местах.
В общем смысле есть модель в ней `сохранены` данные с поста, гета. К модели применяются цепочки валидации, если все валидно, то у модели вызывается метод save который уже сохраняет данные используя DbTable, если данные не валидны, то выводится причина ошибки - все это происходит в контроллере. Кому интересно могу объяснить подробнее.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>595</wp:comment_id>
<wp:comment_author><![CDATA[Dr0n]]></wp:comment_author>
<wp:comment_author_email>pan_dron@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.88.112.130</wp:comment_author_IP>
<wp:comment_date>2009-10-29 19:18:54</wp:comment_date>
<wp:comment_date_gmt>2009-10-29 14:18:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Забыл написать что это все касается серверной валидации.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>596</wp:comment_id>
<wp:comment_author><![CDATA[giovanni]]></wp:comment_author>
<wp:comment_author_email>egor@tpc2.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tpc2.com</wp:comment_author_url>
<wp:comment_author_IP>195.158.105.112</wp:comment_author_IP>
<wp:comment_date>2009-10-29 19:40:14</wp:comment_date>
<wp:comment_date_gmt>2009-10-29 14:40:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[валидация данных ВНЕ места их хранения - это нарушение принципа decoupling. что в итоге приведет к разрыву связи между данными и принципами их проверки. рано или поздно мы изменим данные и забудем где находится валидация. и валидацию не изменим. в итоге получим tight coupling, что есть зло.

в общем я категорически не согласен. могу объяснить подробнее :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>594</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>605</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-10-30 14:13:47</wp:comment_date>
<wp:comment_date_gmt>2009-10-30 09:13:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Согласен с вами и так же не согласен с Dron'ом. Вы привели правильные доводы, именно поэтому, я и предложил производить валидацию непосредственно в модели.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>596</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>609</wp:comment_id>
<wp:comment_author><![CDATA[giovanni]]></wp:comment_author>
<wp:comment_author_email>egor@tpc2.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tpc2.com</wp:comment_author_url>
<wp:comment_author_IP>88.203.91.53</wp:comment_author_IP>
<wp:comment_date>2009-10-30 15:41:25</wp:comment_date>
<wp:comment_date_gmt>2009-10-30 10:41:25</wp:comment_date_gmt>
<wp:comment_content><![CDATA[То что в модели - тут двух мнений быть не может. А вот как потом результат этой валидации "доносить" доходчиво до всех клиентов - тут разногласия. Я считаю, что через Exceptions. Когда модель получает невалидные данные - она бросает exception. А форма должна понимать это и текст этого исключения писать под кнопкой SUBMIT. Я так вижу и так оно у меня работает. Вроде бы все логично.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>605</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>610</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-10-30 16:11:47</wp:comment_date>
<wp:comment_date_gmt>2009-10-30 11:11:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[У меня эксепшенами не бросается, а просто собирает список ошибок валидаторов в массив:

$user = new User;
$user->name = '';

if (!$user->save()) { // save запускает валидацию
  print_r($user->getErrorMessages());
}

Как-то так. В общем, если интересно, могу показать свою ORM :) Вообще, ищу единомышленников для создания ORM ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>609</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>611</wp:comment_id>
<wp:comment_author><![CDATA[giovanni]]></wp:comment_author>
<wp:comment_author_email>egor@tpc2.com</wp:comment_author_email>
<wp:comment_author_url>http://www.tpc2.com</wp:comment_author_url>
<wp:comment_author_IP>88.203.91.53</wp:comment_author_IP>
<wp:comment_date>2009-10-30 16:24:31</wp:comment_date>
<wp:comment_date_gmt>2009-10-30 11:24:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[все вроде верно, только я не понял про print_r().. куда печатать то будем?

напиши мне на емейл, пообщаемся в скайпе.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>610</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>612</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-10-30 16:55:59</wp:comment_date>
<wp:comment_date_gmt>2009-10-30 11:55:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[print_r() - это для примера. На самом деле, я передаю объект модели в вид, и там происходит "магия" - в общем, это лучше увидеть.)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>611</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>613</wp:comment_id>
<wp:comment_author><![CDATA[Dr0n]]></wp:comment_author>
<wp:comment_author_email>pan_dron@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.88.112.130</wp:comment_author_IP>
<wp:comment_date>2009-10-30 17:38:54</wp:comment_date>
<wp:comment_date_gmt>2009-10-30 12:38:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Нверное не совсем корректно описал идею, напишу немного подробнее.
Согласен с тем, что не правильно разделять хранение данных и валидацию, но хранить валидаторы в модели которая отвечает за эти данные тоже считаю неверным подходом. Считаю что валидироваться в модели должны только некорректные данные которые могут привести к ексепшену при сохранении/обновлении.

Простой пример: 
Во фронтенде новый юзер при добавлении комментария, указывает ник. Валидация для ника только буквы  + длина ограничена.
В баккенде при использовании этой же модели я хочу разрешить админу использовать еще и цифры пробелы и т.д. При подходе валидации данных в модели, мне придется писать костыль который скажет что надо применять другую валидацию для этого поля. А если таких различных мест много в проекте, то у нас получится очень странная модель которая  пытается реализовать всю валидацию необходимую для проекта в целом.

Набором валидаторов применяемых в конкретной ситуации может выступать отдельная модель-валидатор. Которая сможет проверить данные в соответствии со своими заданными правилами валидации. Эту модель можно применять для валидации других моделей-данных. Вот как то так я себе все это представляю.

Хочу услышать пример, который приведет к нестыковке данных при таком подходе.
Спасибо за конструктивную критику.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>594</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3565</wp:comment_id>
<wp:comment_author><![CDATA[Bas]]></wp:comment_author>
<wp:comment_author_email>bastaller@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://biiiz.ru</wp:comment_author_url>
<wp:comment_author_IP>93.81.185.224</wp:comment_author_IP>
<wp:comment_date>2010-12-09 17:42:53</wp:comment_date>
<wp:comment_date_gmt>2010-12-09 12:42:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну собственно речь о fat models. Всё верно.
http://www.survivethedeepend.com/zendframeworkbook/en/1.0/the.model]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2046</wp:comment_id>
<wp:comment_author><![CDATA[Oleg Lobach]]></wp:comment_author>
<wp:comment_author_email>oleg@lobach.info</wp:comment_author_email>
<wp:comment_author_url>http://lobach.info/</wp:comment_author_url>
<wp:comment_author_IP>194.186.227.83</wp:comment_author_IP>
<wp:comment_date>2010-09-23 19:54:45</wp:comment_date>
<wp:comment_date_gmt>2010-09-23 14:54:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[<cite>Простой пример:
Во фронтенде новый юзер при добавлении комментария, указывает ник. Валидация для ника только буквы + длина ограничена.
В баккенде при использовании этой же модели я хочу разрешить админу использовать еще и цифры пробелы и т.д. При подходе валидации данных в модели, мне придется писать костыль который скажет что надо применять другую валидацию для этого поля. А если таких различных мест много в проекте, то у нас получится очень странная модель которая пытается реализовать всю валидацию необходимую для проекта в целом.</cite>

Хм... на мой взгляд, тут 2 модели: "Комментатор" и "Пользователь". Каждая модель валидируется по-своему, но хранилище могут использовать общее. Как-то так...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>613</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2047</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-09-23 20:02:49</wp:comment_date>
<wp:comment_date_gmt>2010-09-23 15:02:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Совершенно правильно. Я бы тоже использовал 2 модели. Вот только задача уж слишком высосанная из пальца, как говорится - вы не должны этого хотеть)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2046</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2123</wp:comment_id>
<wp:comment_author><![CDATA[Evgeny Sergeev]]></wp:comment_author>
<wp:comment_author_email>sal1982@list.ru</wp:comment_author_email>
<wp:comment_author_url>http://www.codeart.ru</wp:comment_author_url>
<wp:comment_author_IP>95.188.80.251</wp:comment_author_IP>
<wp:comment_date>2010-10-01 06:55:10</wp:comment_date>
<wp:comment_date_gmt>2010-10-01 01:55:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[giovanni, 
"валидация данных ВНЕ места их хранения - это нарушение принципа decoupling"

Тогда их нужно валидировать в базе :-) Кстати, валидация данных вне места их использования - это тоже decoupling! Так что получается, что все задачи проекта должны решаться в одной модели.

Я против того, чтобы валидировать данные в модели. Точнее я за применение "инверсии зависимостей" - т.е. вынести валидацию во внешний класс и при инстантировании модели передавать соответствующий валидатор в модель.

Теперь по существу. Перед данными модели, работающей с БД, всегда ставиться несколько вопросов:
1. Может ли она сохранить эти данные (технические ограничения);
2. Должна ли она сохранить эти данные (логические ограничения зависящие от контекста использования)
3. Может ли она использовать сохраненные данные при выполнении данной задачи.

Простой пример, задача "Подсчитать среднюю сумму одного заказа в интернет магазине"  рассчет такой Sср = Sобщ / Nпок, где Sср - средняя сумма, Sобщ - общая сумма покупок, Nпок - количество покупок.
Допустим в каком-то месяце продаж не было. Это значит Sобщ и Nпок имеют нулевые значения, а это значит что ответы на вышестоящие вопросы будут следующими:
1. Может ли модель сохранить данные? - Да
2. Должна ли модель сохранить данные? - Да
3. Может ли модель использовать сохранненные данные? Нет. Делить на ноль нельзя!

Ответы на вопросы 1,2 никогда не будут контролироваться моделью, по крайней мере до тех пор пока будет использоваться БД. Я бы сказал, что модель успешно может отвечать только на вопрос 3, причем в разных случаях ответ на этот вопрос может быть разным. 

Опять же не нужно забывать, что любая декомпозиция - это установка логических связей, и эти связи могут быть разными по своей силе (композиция, ассоциация). Сильная связь вполне допустима между классом модели и классом валидатора!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Ресайзинг изображений на сайте. Как сделать это удобно?</title>
<link>http://torqueo.net/image-resizing-easy-and-useful-solution/</link>
<pubDate>Sat, 29 Aug 2009 16:37:14 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[htaccess]]></category>

		<category domain="tag" nicename="htaccess"><![CDATA[htaccess]]></category>

		<category domain="tag"><![CDATA[mod_rewrite]]></category>

		<category domain="tag" nicename="mod_rewrite"><![CDATA[mod_rewrite]]></category>

		<category domain="tag"><![CDATA[thumbnail]]></category>

		<category domain="tag" nicename="thumbnail"><![CDATA[thumbnail]]></category>

		<category domain="tag"><![CDATA[ресайз изображений]]></category>

		<category domain="tag" nicename="%d1%80%d0%b5%d1%81%d0%b0%d0%b9%d0%b7-%d0%b8%d0%b7%d0%be%d0%b1%d1%80%d0%b0%d0%b6%d0%b5%d0%bd%d0%b8%d0%b9"><![CDATA[ресайз изображений]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=224</guid>
<description></description>
<content:encoded><![CDATA[Когда на сайте используется изображение в различных размерах, например,  когда обложка музыкального диска должна отображаться в нескольких размерах, многие разработчики чего только выдумывают, чтобы реализовать эту функциональность. Например, после закачки картинки, делается несколько копий картинки и кладется на диск. Некоторые вообще везде используют оригинальную картинку, а когда нужно, "меняют" ее размер, выставляя нужную высоту и ширину в теге <em>img </em>- такое встречается повсеместно (за такое решение нужно кое-что отрывать).

Я расскажу, как сделать ресайзинг картинок по-запросу. Впервые, я использовал это решение в 2004 году в одном из проектов, над которым я работал. Идея проста до безобразия.<!--more-->

Давайте представим, что у вас есть оригинальное изображение, размером <em>1000х1000</em> пикселей. Вам нужно использовать уменьшенные копии этого изображения в различных местах сайта в размерах <em>300х300, 200х200</em> и <em>50х50</em> пикселей.

Вы закачиваете оригинальное изображение на сайт через форму и оно распологается здесь, от document_root:
<pre>/pictures/777.jpg</pre>
Теперь, на одной из страниц сайта, вы хотите показать это изображение, но в размере <em>200х200</em> пикселей, и вы вставляете на странице тег:
<pre>&lt;img src="/pictures/200x200/777.jpg" /&gt;</pre>
и - вуаля - картинка в нужном вам размере отображается на странице! Как это сделано? Довольно просто. Нам всего лишь нужно перехватить все обращения веб-сервера к несуществующим картинкам. Для этого напишем правило в<em> .htaccess</em> и положим его в <em>document_root</em>:
<pre><code class="apache">&lt;IfModule mod_rewrite.c&gt;
   RewriteEngine on
   RewriteCond %{REQUEST_FILENAME} !-d
   RewriteCond %{REQUEST_FILENAME} !-f
   RewriteCond %{REQUEST_FILENAME} !-l
   RewriteRule ^(pictures/\d+x\d+/\d+.+)    resize.php?image_path=$1
&lt;/IfModule&gt;</code></pre>
Теперь все обращения к несуществующим картинкам в папке <em>/pictures</em> будут передаваться в скрипт <em>resize.php</em>, расположенный в корне. В скрипт будет передаваться путь к несуществующей картинке относительно<em> document_root</em>.

Скрипт приводить я не буду - оставлю реализацию вам. Я только укажу, что необходимо предусмотреть в скрипте.
<ul>
	<li>Определить путь к оригинальному изображению.</li>
	<li>Нужно проверить существование оригинального изображения. Если оно не существует, вернуть 404-ю ошибку.</li>
	<li>Нужно получить из пути к запрашиваемой картинки требуемую ширину и высоту.</li>
	<li>Если оригинальное изображение существует и существует запрашиваемая директория (например<em> /pictures/200x200</em> - это даст защиту от указания произвольных размеров картинки), то изменяем размер картинки при помощи <a href="http://www.imagemagick.org/script/convert.php" rel="nofollow,noindex">ImageMagick</a> или <a href="http://ru.php.net/manual/en/book.image.php" rel="nofollow,noindex">GD</a> и сохраняем картинку по запрашиваемому пути. Затем делаем на внось созданную картинку внутренний редирект (например, Location: <em>/pictures/200x200/777.jpg</em>).</li>
</ul>
После реализации подобного скрипта наша система ресайзинга картинок готова. Скрипт будет изменять размер картинки только один раз. Если запрашиваемая заресайзенная картинка уже существует, то скрипт изменения размера даже не будет запускаться - правило в .htaccess не сработает, всю работу выполнит веб-сервер.

Я знаю, что подобное решение использую не я один =). Но надеюсь, моя заметка поможет тем, кто не знал о подобном решении.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>224</wp:post_id>
<wp:post_date>2009-08-29 21:37:14</wp:post_date>
<wp:post_date_gmt>2009-08-29 16:37:14</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>image-resizing-easy-and-useful-solution</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1251875296</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>267</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru/</wp:comment_author_url>
<wp:comment_author_IP>81.91.63.38</wp:comment_author_IP>
<wp:comment_date>2009-09-02 11:01:38</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 06:01:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Все конечно хорошо , но у ресайз картинок это очень затратная по ресурсам штука - и проход поисковика может вызвать проблемы с местом на диске и производительностью =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>268</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-09-02 12:04:05</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 07:04:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну ты не забывай, что это всего лишь пример. На боевом проекте можно сделать проверку на поисковых ботов в .htaccess. Либо, пробежаться по всем страницам сайта своим роботом, чтобы картинки заресайзились.

Да мало ли способов!
К тому же, как показывает практика - обычно все картинки ресайзятся до прихода роботов, благодаря обычным посетителям, которые просматривают эти самые странички.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>267</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>273</wp:comment_id>
<wp:comment_author><![CDATA[Stepan Tanasiychuk]]></wp:comment_author>
<wp:comment_author_email>stepan.tanasiychuk@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://blog.stfalcon.com</wp:comment_author_url>
<wp:comment_author_IP>193.27.0.23</wp:comment_author_IP>
<wp:comment_date>2009-09-02 18:38:45</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 13:38:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[да. это хороший вариант. ещё на статику можно поцепить проксирующий сервер (типа nginx) и тогда после ресайза картинки апач вобще дергаться не будет.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>280</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.234.164</wp:comment_author_IP>
<wp:comment_date>2009-09-02 20:26:48</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 15:26:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Согласен. Но фронтенд нужен в основном для медленных клиентов, которые долго что-то закачивают или наоборот, скачивают (соединение долго не разрывается). А так и апач плюется статикой только в путь.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>273</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>475</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru/</wp:comment_author_url>
<wp:comment_author_IP>81.91.63.38</wp:comment_author_IP>
<wp:comment_date>2009-10-12 16:26:25</wp:comment_date>
<wp:comment_date_gmt>2009-10-12 11:26:25</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Дык, вот так и начинаются проблемы с производительностью. Надо подходить к разработке исходя из того что имеется не супер пуппер кластер в 1000 серверов. А относительно современный сервер. А относительно соврменный сервер это примерно 2х по 3Ггц. Вот а теперь засеки сколько ресайзиться картинка в 9 мегапикселей (средние значение у современных фотиков) а теперь попробуй ресайзить их 10 штук одновременно.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>268</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>482</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.20</wp:comment_author_IP>
<wp:comment_date>2009-10-13 11:52:44</wp:comment_date>
<wp:comment_date_gmt>2009-10-13 06:52:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Никто не мешает при закачке ресайзить картинку до приемлемых значений. Данный мною подход сделан для дальнейшего удобства при ресайзинге картинок, когда тебе нужно несколько размеров одной и той же картинки.

Мы использовали этот подход на проекте с 500 000 хитов в сутки. Нагрузки вообще никакой не было замечено.

Конечно, к каждому техническому решению нужно подходить с умом, не существует идеального универсального решения.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>475</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1774</wp:comment_id>
<wp:comment_author><![CDATA[Arqus]]></wp:comment_author>
<wp:comment_author_email>cj20001@ya.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.128.103.3</wp:comment_author_IP>
<wp:comment_date>2010-07-26 17:05:39</wp:comment_date>
<wp:comment_date_gmt>2010-07-26 12:05:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[как это проделать на asp?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Блоки в Zend Framework. Финальная версия.</title>
<link>http://torqueo.net/blocks-in-zend-framework-final-version/</link>
<pubDate>Wed, 02 Sep 2009 08:08:55 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[zf action helper]]></category>

		<category domain="tag" nicename="zf-action-helper"><![CDATA[zf action helper]]></category>

		<category domain="tag"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag" nicename="zf-front-controller-plugin"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag"><![CDATA[Блоки в ZF]]></category>

		<category domain="tag" nicename="%d0%b1%d0%bb%d0%be%d0%ba%d0%b8-%d0%b2-zf"><![CDATA[Блоки в ZF]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=230</guid>
<description></description>
<content:encoded><![CDATA[Я продолжил свои изыскания на тему <strong>блоков в Zend Framework</strong>. Я все искал, как сделать работу с блоками на сайте максимально удобной.

До этого, я написал несколько статей, посвященных блокам:
<ul>
	<li><a href="/admin-menu-or-blocks-in-zend-framework/">Меню администратора, или блоки в Zend Framework</a></li>
	<li><a href="/blocks-in-zend-framework/">Блоки в Zend Framework</a></li>
	<li><a href="/blocks-in-zend-framework-2/">Блоки в Zend Framework, версия 2</a></li>
</ul>
Но не далее, как неделю назад я придумал еще более удобный способ работы с блоками. Некоторые мои предыдущие утверждения я опроверг :)

Блоки в новой версии так же работают на основе конфига блоков. Но теперь блоки можно как включать, так и отключать в любом месте контроллера. Именно отключения блоков и не было в прошлых версиях - как мне тогда показалось, оно было излишним. Но практика показала, что это не так.

Итак, в этой версии у нас есть помощник действия (action helper) и плагин фронт-контроллера (controller plugin). При помощи помощника действия мы указываем, какие блоки нужно будет загрузить или отключить, а плагин фронт-контроллера управляет непосредственно загрузкой блоков, которая происходит сразу после диспетчеризации действия в контроллере.<!--more-->

Сначала приведу листинг конфига блоков. Например, у нас будет конфиг с двумя определенными блоками:
<pre><code class="ini">[toolbar]
  module=application
  controller=toolbar
  action=index

[banner]
  module=application
  controller=banner
  action=show</code></pre>
Дальше, давайте посмотрим на код помощника действия:
<pre><code class="php">/**
 * @author http://torqueo.net/
 */
class Project_Controller_Action_Helper_Block extends Zend_Controller_Action_Helper_Abstract
{
    /**
     * An instance of Project_Controller_Plugin_Block plugin
     * @var object
     */
    protected $_blocksPlugin = null;

    /**
     * Initialize Project_Controller_Plugin_Block plugin
     * and blocks config
     */
    public function init()
    {
        $front = Zend_Controller_Front::getInstance();
        if (!$front-&gt;hasPlugin('Project_Controller_Plugin_Block')) {
            $this-&gt;_blocksPlugin = new Project_Controller_Plugin_Block();
            $front-&gt;registerPlugin($this-&gt;_blocksPlugin, 93);
        } else {
            $this-&gt;_blocksPlugin = $front-&gt;getPlugin('Project_Controller_Plugin_Block');
        }

        $blocksConfig = new Zend_Config_Ini(APPLICATION_PATH . "/config/blocks.ini");
        $this-&gt;_blocksPlugin-&gt;setConfig( $blocksConfig );
    }

    /**
     * Add block on page by block name
     * @param string $blockName
     */
    public function add($blockName)
    {
        $this-&gt;_blocksPlugin-&gt;add($blockName);
    }

    /**
     * Remove block from page by block name
     * @param string $blockName
     */
    public function remove($blockName)
    {
        $this-&gt;_blocksPlugin-&gt;remove($blockName);
    }

    /**
     * Remove all blocks from page
     */
    public function removeAll()
    {
        $this-&gt;_blocksPlugin-&gt;removeAll();
    }
}</code></pre>
Теперь взглянем, как выглядит плагин фронт-контроллера, отвечающий за загрузку блоков:
<pre><code class="php">/**
 * @author http://torqueo.net/
 */
class Project_Controller_Plugin_Block extends Zend_Controller_Plugin_Abstract
{
    /**
     * Here's a states for each block (enabled or disabled)
     * @var array
     */
    protected $_blocks  = array();

    /**
     * Blocks config with specified module, controller
     * and action for each block
     * @var array
     */
    protected $_config = array();

    /**
     * Enable block by block name  (set enabled flags)
     * @param string $blockName
     * @return void
     */
    public function add($blockName)
    {
        $this-&gt;_blocks[ $blockName ] = true;
    }

    /**
     * Disable block by block name (set disabled flags)
     * @param string $blockName
     * @return void
     */
    public function remove($blockName)
    {
        $this-&gt;_blocks[ $blockName ] = false;
    }

    /**
     * Disable all blocks (set disabled flags to all)
     * @param string $blockName
     * @return void
     */
    public function removeAll()
    {
        foreach ($this-&gt;_blocks as $blockName=&gt;$blockEnabled) {
            $this-&gt;_blocks[ $blockName ] = false;
        }
    }

    /**
     * Hook on postDispatch event. Disable or enable blocks.
     * @param Zend_Controller_Request_Abstract $request
     * @return void
     */
    public function postDispatch(Zend_Controller_Request_Abstract $request)
    {
        if (!$request-&gt;isXmlHttpRequest() &amp;&amp; !empty($this-&gt;_config)) {
            $this-&gt;_layout = Zend_Layout::getMvcInstance();
            $this-&gt;_view   = $this-&gt;_layout-&gt;getView();

            foreach ($this-&gt;_config as $blockName=&gt;$options) {
                if (isset($this-&gt;_blocks[ $blockName ]) &amp;&amp; $this-&gt;_blocks[ $blockName ] === true) {
                    $this-&gt;_layout-&gt;{$blockName} = $this-&gt;_view-&gt;action(
                        $options['action'],
                        $options['controller'],
                        $options['module'],
                        $request->getParams()
                    );
                }
            }

        }
    }

    /**
     * Set blocks config
     * @param Zend_Config $config
     * @return void
     */
    public function setConfig(Zend_Config $config)
    {
        $this-&gt;_config = $config-&gt;toArray();
    }
}</code></pre>
В итоге в любом контроллере нашего приложения мы можем работать с блоками вот так:
<pre><code class="php">class NewsController extends Zend_Controller_Action
{
    public function preDispatch()
    {
        // Add toolbar block on page
        $this-&gt;_helper-&gt;block-&gt;add('toolbar');

        // Add banners block on page
        $this-&gt;_helper-&gt;block-&gt;add('banner');
    }

    public function viewNews()
    {
        // Disable banners block in this action
        $this-&gt;_helper-&gt;block-&gt;remove('banner');

        // ... or disable all blocks
        $this-&gt;_helper-&gt;block-&gt;removeAll();
    }
}

</code></pre>
В макете (layout) любой блок можно вывести так, по имени блока:
<pre><code class="php">&lt;?=$this-&gt;layout()-&gt;toolbar?&gt;

&lt;?=$this-&gt;layout()-&gt;banner?&gt;</code></pre>
По комметариям в коде должно быть понятно, как нужно работать с блоками. Можно еще добавить в помощник метод <em>addAll()</em> для загрузки всех блоков, в противоположность методу <em>removeAll()</em> - но это уже на ваш вкус.

Надеюсь, вам помогла эта заметка. Буду рад комментариям.

<strong>UPDATE:</strong>
<strong>На самом деле, так, как написано в статье лучше не делать :) Я склоняюсь к другому методу - размещать блоки через именованные сегменты лайота. Только нужно придумать, как сделать это удобно. Оно быстрее работает в разы, да и вообще плохо делать диспетчеризацию несколько раз за один запрос. Просто ZF позволяет так делать, но на самом деле - это порочная практика.</strong>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>230</wp:post_id>
<wp:post_date>2009-09-02 13:08:55</wp:post_date>
<wp:post_date_gmt>2009-09-02 08:08:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>blocks-in-zend-framework-final-version</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1293527199</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>269</wp:comment_id>
<wp:comment_author><![CDATA[lcf]]></wp:comment_author>
<wp:comment_author_email>lcfsoft@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>85.172.104.27</wp:comment_author_IP>
<wp:comment_date>2009-09-02 15:13:21</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 10:13:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Выглядит красиво.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>270</wp:comment_id>
<wp:comment_author><![CDATA[lcf]]></wp:comment_author>
<wp:comment_author_email>lcfsoft@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>85.172.104.27</wp:comment_author_IP>
<wp:comment_date>2009-09-02 15:15:49</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 10:15:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А зачем в

    public function setConfig(Zend_Config $config)
    {
        $this-&gt;_config = $config-&gt;toArray();
    }

переводить в массив?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>271</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-09-02 16:10:18</wp:comment_date>
<wp:comment_date_gmt>2009-09-02 11:10:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вообще-то да, справедливое замечание. Zend_Config имеет итератор, я что-то про это совсем забыл. Так что можно не приводить к массиву, а бегать по объекту.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>270</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>314</wp:comment_id>
<wp:comment_author><![CDATA[Zh0rzh]]></wp:comment_author>
<wp:comment_author_email>georgy.turevich@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.134.34.176</wp:comment_author_IP>
<wp:comment_date>2009-09-07 01:26:51</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 20:26:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А почему здесь используется плагин фронт-контроллера?
action-хелперы ведь тоже позволяют встроить postDispatch-событие.

Тогда вместо двух - у вас будет один класс]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>321</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-09-07 08:53:39</wp:comment_date>
<wp:comment_date_gmt>2009-09-07 03:53:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Плагин будет вызываться один раз, а хелпер столько раз, сколько контроллеров у нас запускается. Или я неправ?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>314</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1138</wp:comment_id>
<wp:comment_author><![CDATA[helloamigo]]></wp:comment_author>
<wp:comment_author_email>helloamigo@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.241.45.60</wp:comment_author_IP>
<wp:comment_date>2010-02-17 16:34:58</wp:comment_date>
<wp:comment_date_gmt>2010-02-17 11:34:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[=) Спасибо, как говорится, Слона-то я и не приметил ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1188</wp:comment_id>
<wp:comment_author><![CDATA[helloamigo]]></wp:comment_author>
<wp:comment_author_email>helloamigo@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.241.45.60</wp:comment_author_IP>
<wp:comment_date>2010-03-11 23:42:43</wp:comment_date>
<wp:comment_date_gmt>2010-03-11 18:42:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо за наработку, очень полезная.
Правда в Модулях ведут себя не понятно. Не выводятся блоки описанные в модулях + может вывести 2 блока вместо одного....]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1376</wp:comment_id>
<wp:comment_author><![CDATA[Роман]]></wp:comment_author>
<wp:comment_author_email>liveonline22@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.241.45.60</wp:comment_author_IP>
<wp:comment_date>2010-04-16 17:29:50</wp:comment_date>
<wp:comment_date_gmt>2010-04-16 12:29:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Привет, не подскажешь как c помошью твоего плагина и хелпера подтянуть в default модуль блок из другого модуля. Например у меня есть блоки (новости, опрос и тд) - они экшены default модуля! И есть модуль memebers и в адном из его экшенов как раз какой то блок который доступен после залогинивания.... Если я захочу будучи залогиненым посмотреть страницы default модуля то блоки новости, опрос и тд будут на месте, а некий блок пропадет!!! почему он доступен только в модуле memebers? как это все можно обыграть? 
спасибо за внимание!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1377</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.30.156.228</wp:comment_author_IP>
<wp:comment_date>2010-04-16 18:59:47</wp:comment_date>
<wp:comment_date_gmt>2010-04-16 13:59:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Рекомендую обратить внимание на этот код - это хелпер вида action:

$this->action('action', 'controller', 'module');

Это вызовет экшен action в контроллере controller модуля module, и выведет результат в вид. Прочтите статью еще раз внимательно - там есть всё, что вы хотите.

Хочу сказать, что моё решение, возможно, не подойдет под все ваши нужды. Этот код просто пример, как можно поступить. Он не претендует на законченное решение, а лишь дает основу, при помощи которой вы можете сделать собственное решение.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1376</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1499</wp:comment_id>
<wp:comment_author><![CDATA[Роман]]></wp:comment_author>
<wp:comment_author_email>liveonline22@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>109.205.249.237</wp:comment_author_IP>
<wp:comment_date>2010-05-04 22:31:57</wp:comment_date>
<wp:comment_date_gmt>2010-05-04 17:31:57</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2000</wp:comment_id>
<wp:comment_author><![CDATA[Alexey]]></wp:comment_author>
<wp:comment_author_email>lexerom@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://suhih.ru</wp:comment_author_url>
<wp:comment_author_IP>188.186.230.155</wp:comment_author_IP>
<wp:comment_date>2010-09-14 07:24:05</wp:comment_date>
<wp:comment_date_gmt>2010-09-14 02:24:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Насколько я понимаю, использовать $view-&gt;action() не является хорошей практикой, поскольку сильно влияет на производительность. Добавление контента в сегменты - хорошо, но это стоит делать иным способом. Т.е. загрузку контента в сегменты стоит также делать в плагине, только контент этот брать из другого места. Например, написать свои модели блока и использовать их в плагине.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2001</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.30.195.16</wp:comment_author_IP>
<wp:comment_date>2010-09-14 07:40:29</wp:comment_date>
<wp:comment_date_gmt>2010-09-14 02:40:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Конечно, это влияет на производительность, т.к. происходит диспетчеризация. Можно делать рендеринг в именованные сегменты лайота, но это менее удобно, хоть и быстрее.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2000</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11815</wp:comment_id>
<wp:comment_author><![CDATA[n1ko]]></wp:comment_author>
<wp:comment_author_email>frisst@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>46.73.4.112</wp:comment_author_IP>
<wp:comment_date>2011-10-20 03:09:35</wp:comment_date>
<wp:comment_date_gmt>2011-10-19 22:09:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Доброго времени суток. Я совсем недавно начал изучать ZF. Вот появилось много вопросов, после прочтения статьи.
1) В какой директории хранить плагин фронт-контроллера, как подключить и где указать местонахождение (если нужно).
2) Как подключить помошника (если нужно)

Прошу прощения, возможно за глупые вопросы, но самостоятельно я разобраться не могу.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Сортировка по значению массивов и выборок из БД</title>
<link>http://torqueo.net/sorting-php-arrays-and-db-rowsets-by-value/</link>
<pubDate>Thu, 03 Sep 2009 05:31:47 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[mysql]]></category>

		<category domain="tag" nicename="mysql"><![CDATA[mysql]]></category>

		<category domain="tag"><![CDATA[php]]></category>

		<category domain="tag" nicename="php"><![CDATA[php]]></category>

		<category domain="tag"><![CDATA[сортировка]]></category>

		<category domain="tag" nicename="%d1%81%d0%be%d1%80%d1%82%d0%b8%d1%80%d0%be%d0%b2%d0%ba%d0%b0"><![CDATA[сортировка]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=237</guid>
<description></description>
<content:encoded><![CDATA[Для кого-то эта статья покажется тривиальной, но новички могут открыть для себя что-то новое. В любом случае, советую почитать.

Иногда бывает нужно сделать сортировку списка по значению какого-то поля из этого списка. Поясню. Например, у вас есть список дел, каждое дело в списке помечено приоритетом. Бывают приоритеты (самый приоритетный, приоритетный, средний приоритет, низкий приоритет и самый низкий приоритет).

Давайте посмотрим это на примере таблицы <em>mysql</em>. Создадим таблицу:

<pre><code class="sql">CREATE TABLE `tasks` (
`id` INT NOT NULL AUTO_INCREMENT ,
`priority` ENUM( 'highest', 'hight', 'medium', 'low', 'lowest' ) NOT NULL ,
`title` VARCHAR( 255 ) NOT NULL ,
PRIMARY KEY ( `id` )
);</code></pre>

и добавим в нее данные:

<pre><code class="sql">INSERT INTO `tasks` VALUES (1, 'medium', 'Выгулять собаку');
INSERT INTO `tasks` VALUES (2, 'lowest', 'Полить кактус');
INSERT INTO `tasks` VALUES (3, 'medium', 'Сходить в магазин');
INSERT INTO `tasks` VALUES (4, 'highest', 'Захватить мир');
INSERT INTO `tasks` VALUES (5, 'low', 'Прочитать Ремарка');
INSERT INTO `tasks` VALUES (6, 'hight', 'Прыгнуть с парашютом');
INSERT INTO `tasks` VALUES (7, 'medium', 'Поспать');</code></pre>
<!--more-->
<h3>Сортировка выборки из таблицы mysql по-значению</h3>

Теперь давайте напишем запрос, который выведет нам записи из таблицы от самого высокого приоритета (он будет сверху), до самого низкого (соответственно, он будет в самом низу):

<pre><code class="sql">SELECT * FROM `tasks` ORDER BY FIELD(`priority`, 'highest', 'hight', 'medium', 'low', 'lowest')</code></pre>

В итоге, мы получим такой список:

<table cellspacing="1" cellpadding="2" border="1">
<tr>
    <th>id</th>
    <th>priority</th>
    <th>title</th>
</tr>

<tr>
    <td>4</td>
    <td>highest</td>
    <td>Захватить мир</td>
</tr>
            
<tr>
    <td>6</td>
    <td>hight</td>
    <td>Прыгнуть с парашютом</td>
</tr>
<tr>
    <td>7</td>
    <td>medium</td>
    <td>Поспать</td>
</tr>
<tr>         
    <td>1</td>
    <td>medium</td>
    <td>Выгулять собаку</td>
</tr>
<tr>
    <td>3</td>
    <td>medium</td>
    <td>Сходить в магазин</td>
</tr>
            
<tr>
    <td>5</td>
    <td>low</td>
    <td>Прочитать Ремарка</td>
</tr>
            
<tr>
    <td>2</td>
    <td>lowest</td>
    <td>Полить кактус</td>
</tr>
</table>

Таким способом, как этот, можно легко сделать функциональность "прикрепленные темы" в форуме - те темы, которые находятся всегда наверху в списке тем.

<h3>Сортировка массивов php по значению</h3>

Теперь представим, что у нас есть те же данные, что и в вышеприведенной таблице mysql, но теперь в виде php-массива. Нам требуется отсортировать этот массив так же, как и выборку из таблицы. Посмотрим, как выглядит сам массив:

<pre><code class="php">$tasks = array(
    array(
        'id'       => 1,
        'priority' => 'medium',
        'title'    => 'Выгулять собаку'
    ),
    array(
        'id'       => 2,
        'priority' => 'lowest',
        'title'    => 'Полить кактус'
    ),
    array(
        'id'       => 3,
        'priority' => 'medium',
        'title'    => 'Сходить в магазин'
    ),
    array(
        'id'       => 4,
        'priority' => 'highest',
        'title'    => 'Захватить мир'
    ),
    array(
        'id'       => 5,
        'priority' => 'low',
        'title'    => 'Прочитать Ремарка'
    ),
    array(
        'id'       => 6,
        'priority' => 'hight',
        'title'    => 'Прыгнуть с парашютом'
    ),
    array(
        'id'       => 7,
        'priority' => 'medium',
        'title'    => 'Поспать'
    )
);</code></pre>

Теперь посмотрим на код, сортирующий массив. Главная фишка находится в функции-коллбэке - там мы задаем порядок, в котором будут сортироваться записи.

<pre><code class="php">uasort($tasks, 'sort_by_value');
print_r($tasks);

function sort_by_value($a, $b) {
    // Определяем порядок сортировки
    $order = array(
        'highest' => 1,
        'hight'   => 2,
        'medium'  => 3,
        'low'     => 4,
        'lowest'  => 5
    );

    if ($order[ $a['priority'] ] == $order[ $b['priority'] ]) {
        return 0;
    }

    return ($order[ $a['priority'] ] < $order[ $b['priority'] ]) ? -1 : 1;
}</code></pre>

После того, как код отработает, мы получим отсортированный массив:

<pre><code class="php">Array
(
    [3] => Array
        (
            [id] => 4
            [priority] => highest
            [title] => Захватить мир
        )

    [5] => Array
        (
            [id] => 6
            [priority] => hight
            [title] => Прыгнуть с парашютом
        )

    [6] => Array
        (
            [id] => 7
            [priority] => medium
            [title] => Поспать
        )

    [0] => Array
        (
            [id] => 1
            [priority] => medium
            [title] => Выгулять собаку
        )

    [2] => Array
        (
            [id] => 3
            [priority] => medium
            [title] => Сходить в магазин
        )

    [4] => Array
        (
            [id] => 5
            [priority] => low
            [title] => Прочитать Ремарка
        )

    [1] => Array
        (
            [id] => 2
            [priority] => lowest
            [title] => Полить кактус
        )
)
</code></pre>

Надеюсь, кто-нибудь узнал что-то новое для себя :)
Буду рад комментариям.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>237</wp:post_id>
<wp:post_date>2009-09-03 10:31:47</wp:post_date>
<wp:post_date_gmt>2009-09-03 05:31:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>sorting-php-arrays-and-db-rowsets-by-value</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252058115</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>295</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru/</wp:comment_author_url>
<wp:comment_author_IP>81.91.63.38</wp:comment_author_IP>
<wp:comment_date>2009-09-04 14:49:55</wp:comment_date>
<wp:comment_date_gmt>2009-09-04 09:49:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[1. Перечисляемые поля это хорошо . Но ихмо они нечасто подходят =)
2. Сортировать методом пузырька хорошо - но есть ещё куча алгоритмов =)
(Надо купить книжку по ним , недавно видел книжку Вирта в 10000 книг , отпугнуло слово паскаль)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>12467</wp:comment_id>
<wp:comment_author><![CDATA[Тарас]]></wp:comment_author>
<wp:comment_author_email>th@thdot.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>217.118.64.61</wp:comment_author_IP>
<wp:comment_date>2011-11-25 00:30:56</wp:comment_date>
<wp:comment_date_gmt>2011-11-24 19:30:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо за информацию, перая часть очень помогла.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Используйте партиалы, а не хелперы!</title>
<link>http://torqueo.net/use-partials-not-helpers/</link>
<pubDate>Fri, 04 Sep 2009 10:14:59 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[partials]]></category>

		<category domain="tag" nicename="partials"><![CDATA[partials]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[zf view helpers]]></category>

		<category domain="tag" nicename="zf-view-helpers"><![CDATA[zf view helpers]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=254</guid>
<description></description>
<content:encoded><![CDATA[Часто приходится видеть, как люди неправильно используют <em>хелперы </em>вида в своих приложениях. В такие хелперы они внедряют большие куски <em>html </em>разметки, даже не понимая, что хелперы вида предназначены совсем не для этого. Посмотрите на код стандартных хелперов вида в <strong>Zend Framework</strong> - разве они содержат огромные куски разметки? Нет.

Отформатировать дату, раскрасить имя пользователя, выводимое на страницу, показать иконку статуса icq, отрисовать специфичную кнопку - вот тот круг задач, для которого были придуманы хелперы. Применяйте хелперы тогда, когда требуется выполнять в скриптах вида определенный набор повторяющихся функций.

Если же вам требуется вывести какой-либо большой кусок html разметки в нескольких местах проекта - здесь отлично подойдут партиалы (partials). Они-то как раз и предназначены для решения подобного типа задач. Кстати, за подключение партиала в скрипт вида отвечает хелпер - <em>partial </em>и <em>partialLoop </em>(если требуется вывести партиал в цикле). Почувствуйте разницу.

Если вы еще не использовали партиалы ни разу, вот вам ссылка на официальный мануал, читайте до полного понимания: <a href="http://framework.zend.com/manual/en/zend.view.helpers.html#zend.view.helpers.initial.partial" rel="noindex,nofollow">Partial Helper</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>254</wp:post_id>
<wp:post_date>2009-09-04 15:14:59</wp:post_date>
<wp:post_date_gmt>2009-09-04 10:14:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>use-partials-not-helpers</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252059397</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>297</wp:comment_id>
<wp:comment_author><![CDATA[san]]></wp:comment_author>
<wp:comment_author_email>a.mahomet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://zendframework.ru</wp:comment_author_url>
<wp:comment_author_IP>77.122.63.123</wp:comment_author_IP>
<wp:comment_date>2009-09-05 15:21:11</wp:comment_date>
<wp:comment_date_gmt>2009-09-05 10:21:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[partials клонируют объект view и поэтому создают повышенную нагрузку. Для кусков хтмл кода следует использовать render. 
http://framework.zend.com/manual/en/performance.view.html#performance.view.partial.render]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>298</wp:comment_id>
<wp:comment_author><![CDATA[san]]></wp:comment_author>
<wp:comment_author_email>a.mahomet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://zendframework.ru</wp:comment_author_url>
<wp:comment_author_IP>77.122.63.123</wp:comment_author_IP>
<wp:comment_date>2009-09-05 15:22:23</wp:comment_date>
<wp:comment_date_gmt>2009-09-05 10:22:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Поставьте плагин для отдачи целого текста статьи в фид. Будет намного приятнее читать ваш блог по RSS]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>304</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.121</wp:comment_author_IP>
<wp:comment_date>2009-09-06 17:13:34</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 12:13:34</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я боюсь что роботы будут тырить контент для сплогов, поэтому обрезаю посты... очень неудобно? :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>298</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>305</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.121</wp:comment_author_IP>
<wp:comment_date>2009-09-06 17:14:55</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 12:14:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[То есть, насколько я смог понять после трудных выходных, render() делает то же самое, что и partial(), но не создает излишней нагрузки?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>297</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>306</wp:comment_id>
<wp:comment_author><![CDATA[san]]></wp:comment_author>
<wp:comment_author_email>a.mahomet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://zendframework.ru</wp:comment_author_url>
<wp:comment_author_IP>77.122.63.123</wp:comment_author_IP>
<wp:comment_date>2009-09-06 17:57:31</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 12:57:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Нет, ключевое отличие в том что partials имеют свою независимую область видимости. Помимо мана можно еще прочесть здесь http://zendframework.ru/articles/view-helpers-in-zend-framework#partials. Но в случае с простыми повторящимися кусками html кода - отдельной области видимости не требуется, поэтому лучше использовать render.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>305</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>307</wp:comment_id>
<wp:comment_author><![CDATA[san]]></wp:comment_author>
<wp:comment_author_email>a.mahomet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://zendframework.ru</wp:comment_author_url>
<wp:comment_author_IP>77.122.63.123</wp:comment_author_IP>
<wp:comment_date>2009-09-06 18:01:58</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 13:01:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Лично мне да, у меня много блогов в RSS ридере, и переходить на каждую страницу чтобы прочесть полный текст - жалко времени. Скажу вам как блоггер с некоторым стажем - многие изначально отдавали только тизер как вы, но со временем большинство стали отдавать весь фид. Это способствует более быстрому росту количества подписчиков. Я думаю о роботах можете не переживать, техническая тематика видимо не очень интересна спамерам ) это могу сказать по личному опыту. Ну и если заметите активное воровство всегда сможете отключить полный фид.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>304</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>308</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.121</wp:comment_author_IP>
<wp:comment_date>2009-09-06 18:10:13</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 13:10:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[San, уговорил, врубаю полную отдачу RSS :) У меня до сих пор не тырили контент, но я просто опасался. Надеюсь, опасения были напрасны :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>307</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>309</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.121</wp:comment_author_IP>
<wp:comment_date>2009-09-06 18:10:45</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 13:10:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Кстати, уведомления по почте приходят? Оно работает? :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>307</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>310</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.121</wp:comment_author_IP>
<wp:comment_date>2009-09-06 18:15:59</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 13:15:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Завтра добавлю эти дополнения в пост, конечно, со ссылкой на автора дополнений)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>306</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>311</wp:comment_id>
<wp:comment_author><![CDATA[san]]></wp:comment_author>
<wp:comment_author_email>a.mahomet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://zendframework.ru</wp:comment_author_url>
<wp:comment_author_IP>77.122.63.123</wp:comment_author_IP>
<wp:comment_date>2009-09-06 18:28:18</wp:comment_date>
<wp:comment_date_gmt>2009-09-06 13:28:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да работает =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>309</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Использование Zend_Form без декораторов</title>
<link>http://torqueo.net/using-zend-form-without-decorators/</link>
<pubDate>Tue, 08 Sep 2009 05:19:54 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[php]]></category>

		<category domain="tag" nicename="php"><![CDATA[php]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[Zend_Form]]></category>

		<category domain="tag" nicename="zend_form"><![CDATA[Zend_Form]]></category>

		<category domain="tag"><![CDATA[Валидаторы]]></category>

		<category domain="tag" nicename="%d0%b2%d0%b0%d0%bb%d0%b8%d0%b4%d0%b0%d1%82%d0%be%d1%80%d1%8b"><![CDATA[Валидаторы]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=210</guid>
<description></description>
<content:encoded><![CDATA[Лично мне использование декораторов в формах в <strong>Zend Framework</strong> никогда не нравилось, потому что это никогда не было для меня удобным. Каждый раз, когда приходилось добавлять дополнительные элементы и разметку в довольно сложную форму, это превращалось в великую головную боль.

Кроме того, я почему-то уверен, что использование декораторов в <em>Zend Form</em> это не лучшее решение. В настоящей действительности все чаще приходится работать с готовой <em>XHTML </em>разметкой, которую предоставляет верстальщик. В таком случае, программисту приходится "переводить" уже сверстанную форму в php-код. Разве это удобно, разве это способствует продуктивности? Никак нет. Просто делается лишняя работа, вместо того, чтобы подставить в нужные места формы вывод ошибок и прочего.

Но как сделать так, чтобы наша форма сохраняла функциональность валидаторов, "зашитых" в ней, и при этом мы могли бы визуально видеть разметку формы? Как ни странно, но в этом нам поможет декоратор!<!--more-->

В стандартной поставке Zend Form существует декоратор <strong>viewScript</strong>, он то нам и поможет. Наиболее простым решением будет создать новый класс, унаследованный от Zend Form. От этого нового класса мы будем наследовать все остальные классы форм, используемые в проекте.

Посмотрим на код:
<pre><code class="php">class Project_Form extends Zend_Form
{
    /**
     * Установить шаблон для формы
     *
     * @param string $template Имя файла с шаблоном без расширения
     */
    public function setTemplate($template)
    {
        $this->setDecorators(array(
            array('viewScript', array(
               'viewScript' => $template . '.html'
            )))
        );
    }

    /**
     * Добавление элемента в форму без декораторов
     *
     * @see Zend_Form::addElement()
     */
    public function addElement($element, $name = null, $options = null)
    {
        parent::addElement($element, $name, $options);

        if (isset($this->_elements[$name])) {
            $this->_elements[$name]->removeDecorator('Label');
            $this->_elements[$name]->removeDecorator('HtmlTag');
            $this->_elements[$name]->removeDecorator('DtDdWrapper');
            $this->_elements[$name]->removeDecorator('Description');
        }
    }

    /**
     * Создание элемента формы
     *
     * @see Zend_Form::createElement()
     */
    public function createElement($type, $name, $options = null)
    {
        $element = parent::createElement($type, $name, $options);
        $element->removeDecorator('Label');
        $element->removeDecorator('HtmlTag');
        $element->removeDecorator('DtDdWrapper');
        $element->removeDecorator('Description');
        return $element;
    }
}</code></pre>
Это наиболее простой способ удобного использования декоратора. Теперь, в ваших классах форм вам достаточно вызывать метод <em>setTemplate()</em> с указанием имени шаблона для формы. Так же мы видим два переопределенных метода: <em>addElement()</em> и <em>createElement()</em>. Они создают и добавляют элементы в форму без декораторов по-умолчанию, чтобы элементы формы не были обернуты ненужными нам тегами. Конечно, можно автоматизировать выбор шаблона, чтобы вам не приходилось вручную указывать его. Я показал наиболее простой пример использования, выбор реализации остается за вами.

При таком подходе, для каждой формы используется отдельный шаблон. Давайте взглянем на то, как может выглядеть шаблон:
<pre><code class="html">&lt;form
    action="&lt;?=$this-&gt;element-&gt;getAction()?&gt;"
    method="&lt;?=$this-&gt;element-&gt;getMethod()?&gt;"&gt;

    &lt;div class="separate-field"&gt;
        &lt;label for="sitemap-title"&gt;&lt;?=$this-&gt;translate('Заголовок страницы')?&gt;&lt;/label&gt;
        &lt;?= $this-&gt;element-&gt;title ?&gt;
    &lt;/div&gt;

    &lt;div class="edit-field"&gt;
        &lt;?= $this-&gt;element-&gt;article ?&gt;
    &lt;/div&gt;

    &lt;div class="action-bar"&gt;
        &lt;?= $this-&gt;element-&gt;submit ?&gt;
    &lt;/div&gt;
&lt;/form&gt;</code>
</pre>

Как мы видим, теперь все поля формы вставляются вручную. Теперь, у нас нет никаких декораторов. Радуемся :)

Я сейчас думаю над более комплексным решением для работы с формами под Zend Framework. Возможно, в моем решении пакет Zend Form вообще отпадёт за ненадобностью. Я сейчас использую Zend Form в основном для удобной валидации, так как все валидаторы на форму расположены в одном месте, в классе формы. Но я планирую делать валидацию в конечной точке пользовательского запроса - в модели. В этом случае, Zend Form мне уже не понадобится.

Программирование форм - это нудятина. Нам всем (веб-разработчикам) нужно искать средства избавления от нее :)

Надеюсь, было интересно :) Жду комментов.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>210</wp:post_id>
<wp:post_date>2009-09-08 10:19:54</wp:post_date>
<wp:post_date_gmt>2009-09-08 05:19:54</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>using-zend-form-without-decorators</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1254242183</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>330</wp:comment_id>
<wp:comment_author><![CDATA[atukai]]></wp:comment_author>
<wp:comment_author_email>atukai@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>81.25.46.198</wp:comment_author_IP>
<wp:comment_date>2009-09-08 12:51:11</wp:comment_date>
<wp:comment_date_gmt>2009-09-08 07:51:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вместо element-&gt;getAction()?&gt; скорее всего form-&gt;getAction()?&gt;]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>331</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.216.52</wp:comment_author_IP>
<wp:comment_date>2009-09-08 13:46:24</wp:comment_date>
<wp:comment_date_gmt>2009-09-08 08:46:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Нет, именно так, как написано :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>330</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>431</wp:comment_id>
<wp:comment_author><![CDATA[Dr0n]]></wp:comment_author>
<wp:comment_author_email>pan_dron@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.52.233.231</wp:comment_author_IP>
<wp:comment_date>2009-09-27 12:55:38</wp:comment_date>
<wp:comment_date_gmt>2009-09-27 07:55:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Можно назвать это хаком). Но для меня тоже подошло. Спасибо.
Кстати не совсем понятно для чего нужен отдельный html шаблон для формы?
Не проще ли также выводить эллементы формы но только во вььюхе контроллера конкретного акшена? 
Там где конечно необходимо повторно дублировать форму это поможет, но реально в целом проекте таких мест не так уж и много.
И кстати вечная делема, где хранить инициализацию эллементов формы, ini, xml, или на лету создавая обьекты.
зы кстати тоже совсем не нравяться формы, нудщятина которая занимает слишком много времени]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>432</wp:comment_id>
<wp:comment_author><![CDATA[Dr0n]]></wp:comment_author>
<wp:comment_author_email>pan_dron@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.52.233.231</wp:comment_author_IP>
<wp:comment_date>2009-09-27 14:09:15</wp:comment_date>
<wp:comment_date_gmt>2009-09-27 09:09:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Кстати поправте код:
[php]
if(null == $name ) {
          $name = $element-&gt;getName();
        }
[/php] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Какую музыку я люблю?</title>
<link>http://torqueo.net/what-kind-of-music-i-like/</link>
<pubDate>Tue, 08 Sep 2009 18:07:23 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[lifestyle]]></category>

		<category domain="tag" nicename="lifestyle"><![CDATA[lifestyle]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=263</guid>
<description></description>
<content:encoded><![CDATA[Не все же писать о разработке. Надо иногда посметь раскрыть перед читателями одну из сторон жизни. Наверное, это интересно?

Какую музыку я люблю? 

В музыке мне первое что важно - это смысл. Чтоб был смысл в ней. Не важно какой - главное чтобы тема не была бессмысленною.  Например, я обожаю рэп на социальную тематику, но чтобы не про наркоту. Да, я слушал многоточие и у них есть достойные темы, но когда все темы про наркоту - ну, это как то ...
Люблю транс. Больше всего - вокальный транс. К примеру - Dj Shah - очень нравится мне. Позитивный дядька. Спасает меня, особенно при моей-то наклонности грузиться, какое вокруг все говно, за исключением отдельных лучиков света :). Хотя по жизни я хоть и задумчивый, но стараюсь быть позитивным - зачем кого-то грузить?
Да, пожалуй транс занимает первое место в моем личном чарте. Наверное, мне он нравится за такое немного грустное настроение, переливающемся с громогласным позитивом. Люблю послушать psy-trance - я сразу ощущаю себя охуенным роботом.<!--more-->

Рокеры - сразу простите меня, что я не такой, как вы :) Да, я бывает заценю что-то из темы. Но далеко не все мне нравится. Я думаю, у меня слуховой аппарат просто не выносит жестких гитарных рифов :) Я как-то даже фанател за Rammstein - это было в 1996 году, тогда вообще никто не знал о существовании такой группы. и я тоже, но ровно до тех пор, пока друг не дал мне кассету с "sehnsucht". Потом я уже надыбал ихние песни на английском, коих было довольно много, но сейчас я не могу их нигде найти (хелп)! Но как началось массовое фанатство на Rammstein - у меня как-то сразу все опустилось, но старые их темы я ценю и уважаю. Как и многие другие из старого, новое что-то редко меня цепляет. Я не люблю в роке всякие "орущие" стили... ну там screamo, например... и еще это, как их ... ? Ну, когда чувак орет так, как будто ему расколённый кол воткнули ...

Рэп для меня - это отдельная тема. Хоть я и не похож на рил нигга :) Как-то зацепило. Но не рэп про то, какие мы пиздатые. Мне нравится именно социальный рэп, или рэп переживаний. Списочек приведу: Карандаш, Каста, Akhenaton, Sir-J, ЮГ, IAM - ну и другие, их не мало. Так же стебный рэп: Worna Brazass,AK-47; интеллектуальный (мое любимое): Ek-Playaz, G-Wylx, Bonch Bru Bonch и так далее.

Не люблю house за его монотонность и неимению мелодии. Кто скажет, что хаус содержит мелодию - тот труп :) Где она? Наверное там, где дергают конечностями в такт. Я ее не услышал. Есть отдельные темы - но это редкость, достойная занесения в КК.

Особенно ненавижу нашу русскую, отечественную, мозгосношающую попсу, но за несколькими исключениями, там., где сделано с душой и надлежащим качеством.

В общем, вкусы у меня самые разнообразные, я многие даже не упомянул, так как упоминать их всю ночь можно. Самое главное, пацаны, мне, как и вам нравится качественная музыка - та, в которой чувствуется - создатели заложили туда свое вдохновение. Вот так то.

И я, как всегда, буду рад, если вы, пацаны, мне отпишите пару комментов о той музыке, что вы слушаете, когда кодите.
Спасибо.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>263</wp:post_id>
<wp:post_date>2009-09-08 23:07:23</wp:post_date>
<wp:post_date_gmt>2009-09-08 18:07:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>what-kind-of-music-i-like</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252557587</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Работа с несколькими БД в Zend Framework и с иcпользованием Zend_Application</title>
<link>http://torqueo.net/multiple-db-in-zend-framework-using-zend-application/</link>
<pubDate>Wed, 09 Sep 2009 04:43:47 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[Zend_Db]]></category>

		<category domain="tag" nicename="zend_db"><![CDATA[Zend_Db]]></category>

		<category domain="tag"><![CDATA[Zend_Db_Table]]></category>

		<category domain="tag" nicename="zend_db_table"><![CDATA[Zend_Db_Table]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=265</guid>
<description></description>
<content:encoded><![CDATA[Как работать с несколькими БД в ZF? Давайте посмотрим, начнем с конфигурационного файла. Вы ведь используете компонент <strong>Zend_Application</strong>? Тогда поехали.

Будем придерживаться правильного подхода в разработке приложений. Давайте создадим такой ini файл с настройками для Zend_Application. В конфиге будет одна общая секция, и 3 секции для разных сред выполнения нашего приложения - <em>development</em>, <em>test </em>и <em>production</em>. В каждой из этих секций мы сможем работать с несколькими БД одновременно.
<!--more-->
Смотрим конфиг:

<pre><code class="ini">; Общие настройки
[bootstrap]
  ; Подключение к БД #1
  resources.dbs.db1.adapter                    = "pdo_mysql"
  resources.dbs.db1.params.host                = "localhost"
  resources.dbs.db1.isDefaultTableAdapter      = true
  resources.dbs.db1.params.driver_options.1002 = "SET NAMES utf8"
  resources.dbs.db1.params.profiler.enabled    = true
  resources.dbs.db1.params.profiler.class      = Zend_Db_Profiler_Firebug

  ; Подключение к БД #2
  resources.dbs.db2.adapter                    = "pdo_mysql"
  resources.dbs.db2.params.host                = "localhost"
  resources.dbs.db2.isDefaultTableAdapter      = false
  resources.dbs.db2.params.driver_options.1002 = "SET NAMES utf8"
  resources.dbs.db2.params.profiler.enabled    = true
  resources.dbs.db2.params.profiler.class      = Zend_Db_Profiler_Firebug

; Настройки проекта в стадии development
[development : bootstrap]
  ; Подключение к БД #1
  resources.dbs.db1.params.dbname   = "mydatabase_development"
  resources.dbs.db1.params.username = "root"
  resources.dbs.db1.params.password = ""

  ; Подключение к БД #2
  resources.dbs.db2.params.dbname   = "mydatabase2_development"
  resources.dbs.db2.params.username = "root"
  resources.dbs.db2.params.password = ""

; Настройки проекта в стадии test
[test : bootstrap]
  ; Подключение к БД #1
  resources.dbs.db1.params.dbname   = "mydatabase_test"
  resources.dbs.db1.params.username = "root"
  resources.dbs.db1.params.password = ""

  ; Подключение к БД #2
  resources.dbs.db2.params.dbname   = "mydatabase2_test"
  resources.dbs.db2.params.username = "root"
  resources.dbs.db2.params.password = ""

; Настройки проекта в стадии production
[production : bootstrap]
  ; Подключение к БД #1
  resources.dbs.db1.params.dbname   = "mydatabase_production"
  resources.dbs.db1.params.username = "root"
  resources.dbs.db1.params.password = ""

  ; Подключение к БД #2
  resources.dbs.db2.params.dbname   = "mydatabase2_production"
  resources.dbs.db2.params.username = "root"
  resources.dbs.db2.params.password = ""
</code></pre>

В общей секции (<em>bootstrap</em>) мы определяем общие настройки подключения к БД. В остальных секциях, мы указываем различные БД и реквизиты доступа, в зависимости от типа секции. Итак, на каждую стадию разработки приложения, такие как непосредственная разработка, тестирование, пуск в эксплуатацию у нас есть своя БД (или несколько, если требуется работать с несколькими БД одновременно).

Видели в конфиге ресурс <em>dbs</em>? Да, у нас нет такого ресурса. Придется его создать. Я взял этот код с сайта <a href="http://blog.keppens.biz" rel="noindex,nofollow">blog.keppens.biz</a>.

Вот, как выглядит ресурс, дающий нам возможность работать с несколькими БД:

<pre><code class="php">/**
 * Amazium Library
 *
 * @category   Amz
 * @package    Amz_Application
 * @subpackage Resource
 * @copyright  Copyright (c) 2009 Amazium (http://www.amazium.be)
 */

/**
 * Resource for creating multiple database adapters
 *
 * @uses       Zend_Application_Resource_Base
 * @category   Amz
 * @package    Amz_Application
 * @subpackage Resource
 * @copyright  Copyright (c) 2009 Amazium (http://www.amazium.be)
 */
class Project_Application_Resource_Dbs extends Zend_Application_Resource_ResourceAbstract
{

    /**
     * Adapter to use
     *
     * @var array
     */
    protected $_db = array();

    /**
     * Default adapter
     *
     * @var boolean
     */
    protected $_defaultDb = null;

    /**
     * Adapter type to use
     *
     * @return string
     */
    public function getAdapter($db)
    {
        $db = $this->isValidDb($db);
        if (isset($this->_options[$db]['adapter'])) {
            return $this->_options[$db]['adapter'];
        }
        return null;
    }

    /**
     * Adapter parameters
     *
     * @return array
     */
    public function getParams($db)
    {
        $db = $this->isValidDb($db);
        if (isset($this->_options[$db]['params'])) {
            return $this->_options[$db]['params'];
        }
        return array();
    }

    /**
     * Is this adapter the default table adapter?
     *
     * @return void
     */
    public function isDefaultTableAdapter($db)
    {
        $db = $this->isValidDb($db);
        if (isset($this->_options[$db]['isDefaultTableAdapter'])) {
            return $this->_options[$db]['isDefaultTableAdapter'];
        }
        return false;
    }

    /**
     * Retrieve initialized DB connection
     *
     * @return null|Zend_Db_Adapter_Interface
     */
    public function getDbAdapter($db = null)
    {
        // check if the DB is valid
        $db = $this->isValidDb($db, true);
        if (is_null($db) && is_null($db = $this->_defaultDb)) {
            return null;
        }

        if ((!isset($this->_db[$db]) || (null === $this->_db[$db]))
            && (null !== ($adapter = $this->getAdapter($db)))
        ) {
            $this->_db[$db] = Zend_Db::factory($adapter, $this->getParams($db));
        }
        return $this->_db[$db];
    }

    /**
     * Defined by Zend_Application_Resource_IResource
     *
     * @return void
     */
    public function init()
    {
        if (is_null($this->_defaultDb)) {
            $options = $this->getOptions();
            $defaultDb = null;
            foreach ($options as $db=>$dbOptions) {
                if (null !== ($adapter = $this->getDbAdapter($db))) {
                    if ($this->isDefaultTableAdapter($db) || is_null($defaultDb)) {
                        $defaultDb = $db;
                    }
                }
            }
            if (!is_null($defaultDb)) {
                $this->_defaultDb = $defaultDb;
                Zend_Db_Table::setDefaultAdapter($this->getDbAdapter($defaultDb));
            }
        }
    }

    /**
     * Check if a database key is valid
     *
     * @param string $db
     * @param boolean $revertToDefaultDb
     * @return string
     */
    public function isValidDb($db, $revertToDefaultDb = false)
    {
        $db = strtolower(trim($db));
        if (!in_array($db, array_keys($this->_options))) {
            if (!$revertToDefaultDb) {
                $db = $this->_defaultDb;
            } else {
                throw new Zend_Application_Resource_Exception('Invalid database specified');
            }
        }
        return $db;
    }

}</code></pre>

Теперь, в нашем файле Bootstrap, нам нужно запустить наш ресурс:

<pre><code class="php">class Project_Application_Bootstrap extends Zend_Application_Bootstrap_Bootstrap
{
    /**
     * Initialize connections to multiple db's
     * 
     * @return void
     */
    protected function _initDbs()
    {
        $this->bootstrap('dbs');
        $dbs = $this->getPluginResource('dbs');

        Zend_Registry::set('db', $dbs->getDbAdapter('db1'));
        Zend_Registry::set('db2', $dbs->getDbAdapter('db2'));

        return $dbs;
    }
}</code></pre>

Как видно, мы поместили адаптеры БД в реестр, откуда можем получить их в любой части приложения. По-умолчанию будет использоваться адаптер №1 - <em>db</em>, мы указали это в конфиге при помощи опции <em>isDefaultTableAdapter</em>. То есть, например, <em>Zend_Db_Table</em> по-умолчанию будет работать именно с первым адаптером.

Это все, что вам нужно сделать, чтобы работать с несколькими БД в Zend Framework.
Спрашивайте в комментах, если что-то непонятно.
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>265</wp:post_id>
<wp:post_date>2009-09-09 09:43:47</wp:post_date>
<wp:post_date_gmt>2009-09-09 04:43:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>multiple-db-in-zend-framework-using-zend-application</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1252758032</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>343</wp:comment_id>
<wp:comment_author><![CDATA[Yaroslav Vorozhko]]></wp:comment_author>
<wp:comment_author_email>vorozhko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://pro100pro.com</wp:comment_author_url>
<wp:comment_author_IP>87.244.129.5</wp:comment_author_IP>
<wp:comment_date>2009-09-09 16:09:14</wp:comment_date>
<wp:comment_date_gmt>2009-09-09 11:09:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вы показали как сделать несколько подключений, но неправильно сказали про метод их применения.
Из вашего конфига видно, что разные подключения вы используете для разного окружения: test, development, production. Для этого нет необходимости создавать несколько подключений, достаточно при инициализации указать какой тип бд использовать.
В общем интересует вопрос зачем вам несколько подключений?
И как происходит выбор необходимого подключения (адаптера) в модели?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>344</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>90.151.104.86</wp:comment_author_IP>
<wp:comment_date>2009-09-09 20:54:56</wp:comment_date>
<wp:comment_date_gmt>2009-09-09 15:54:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ярослав, что-то не очень понятно, о чем вы.
О том, что плохо создавать сразу несколько подключений в бутстрапе?
В общем, расскажите, пожалуйста, подробнее.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>343</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>354</wp:comment_id>
<wp:comment_author><![CDATA[lcf]]></wp:comment_author>
<wp:comment_author_email>lcfsoft@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://lcf.name</wp:comment_author_url>
<wp:comment_author_IP>85.172.73.69</wp:comment_author_IP>
<wp:comment_date>2009-09-12 02:59:41</wp:comment_date>
<wp:comment_date_gmt>2009-09-11 21:59:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ты пишешь:

<i>В общей секции (bootstrap) мы определяем общие настройки подключения к БД. В остальных секциях, мы указываем различные БД и реквизиты доступа, в зависимости от типа секции. Итак, на каждую стадию разработки приложения, такие как непосредственная разработка, тестирование, пуск в эксплуатацию у нас есть своя БД.</i>

Однако расказываешь о другом, о работе с двумя объектами подключения бд. На каждую стадию разработки приложения у нас допустим и своя бд но объект то один и тотже. Поэтому ваще обычно люди ограничиваются различными секциями в конфигурационном файле.

Типа (кусок аппликейшн ини)

[production]
;
;	Database initialization
;

resources.db.adapter = "PDO_MYSQL"
resources.db.params.host = "mysql.notes-notes.com"
resources.db.params.dbname = "notes"
resources.db.params.username = "notes-notes"
resources.db.params.password = "supersecretpass"

[development : production]
;
; For development, we want to display errors and use other database
;

phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
phpSettings.error_reporting = E_ALL

resources.db.params.host = "mysql.dev.notes-notes.com"
resources.db.params.dbname = "devnotes"
resources.db.params.username = "lcf"
resources.db.params.password = "iamadeveloper"

***

Хотя в принципе два подключения то допустим и могут понадобится, ситуация вполне реальная, когда например просто приложение работает с разными уже существующими бд или чо нить в этом духе, так что пост вполне может быть полезен, но аргументация не правильная.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>344</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>358</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.3</wp:comment_author_IP>
<wp:comment_date>2009-09-12 17:16:29</wp:comment_date>
<wp:comment_date_gmt>2009-09-12 12:16:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, я понял что вам не понравилось. На самом деле, такой разбитый на несколько "сред" ini-конфиг я привел лишь для того, чтобы продвигать правильный стиль разработки в массы. Я мог, конечно, обойтись и одной секцией, чтобы показать, как работать с несколькими БД одновременно.

Пост я подправил немного.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>354</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Zend_Translate: занружаем только один язык при использовании мультиязычности</title>
<link>http://torqueo.net/?p=276</link>
<pubDate>Mon, 28 Sep 2009 12:25:31 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/zend_translate-%d0%b7%d0%b0%d0%bd%d1%80%d1%83%d0%b6%d0%b0%d0%b5%d0%bc-%d1%82%d0%be%d0%bb%d1%8c%d0%ba%d0%be-%d0%be%d0%b4%d0%b8%d0%bd-%d1%8f%d0%b7%d1%8b%d0%ba-%d0%bf%d1%80%d0%b8-%d0%b8%d1%81%d0%bf/</guid>
<description></description>
<content:encoded><![CDATA[Когда мы используем мультиязычность, то в память загружаются сразу все языки. Это засоряет память.
Нужно сделать так, чтобы использовался только один язык, а другие языки загружались бы по мере необходимости, когда делаем $t->translate('Some phrase', 'de') - lazy loading.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>276</wp:post_id>
<wp:post_date>2009-09-28 17:25:31</wp:post_date>
<wp:post_date_gmt>2009-09-28 12:25:31</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>zend_translate-%d0%b7%d0%b0%d0%bd%d1%80%d1%83%d0%b6%d0%b0%d0%b5%d0%bc-%d1%82%d0%be%d0%bb%d1%8c%d0%ba%d0%be-%d0%be%d0%b4%d0%b8%d0%bd-%d1%8f%d0%b7%d1%8b%d0%ba-%d0%bf%d1%80%d0%b8-%d0%b8%d1%81%d0%bf</wp:post_name>
<wp:status>draft</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1266330820</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Время - деньги. Как сэкономить деньги при разработке ПО.</title>
<link>http://torqueo.net/time-is-money/</link>
<pubDate>Thu, 22 Oct 2009 07:10:41 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Разработка проектов]]></category>

		<category domain="category" nicename="%d1%80%d0%b0%d0%b7%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b0-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%be%d0%b2"><![CDATA[Разработка проектов]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[архитектура проекта]]></category>

		<category domain="tag" nicename="%d0%b0%d1%80%d1%85%d0%b8%d1%82%d0%b5%d0%ba%d1%82%d1%83%d1%80%d0%b0-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%b0"><![CDATA[архитектура проекта]]></category>

		<category domain="tag"><![CDATA[деньги]]></category>

		<category domain="tag" nicename="%d0%b4%d0%b5%d0%bd%d1%8c%d0%b3%d0%b8"><![CDATA[деньги]]></category>

		<category domain="tag"><![CDATA[заказчик]]></category>

		<category domain="tag" nicename="%d0%b7%d0%b0%d0%ba%d0%b0%d0%b7%d1%87%d0%b8%d0%ba"><![CDATA[заказчик]]></category>

		<category domain="tag"><![CDATA[проектирование]]></category>

		<category domain="tag" nicename="%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5"><![CDATA[проектирование]]></category>

		<category domain="tag"><![CDATA[разработка]]></category>

		<category domain="tag" nicename="%d1%80%d0%b0%d0%b7%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b0"><![CDATA[разработка]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=280</guid>
<description></description>
<content:encoded><![CDATA[Во время разработки любого проекта самое пристальное внимание стоит обращать на качество кода и аспекты документирования. Для меня это аксиома, для многих других нет.

Заказчику как правило все равно, как там оно работает внутри, лишь бы все работало. Такой подход к разработке складывается и у разработчиков проекта. Может показаться, что так это и правильно, главное ведь, чтобы проект работал? В этой статье я хочу рассказать, как можно сэкономить деньги при разработке программного продукта.

Часто временные рамки не позволяют "сделать красиво" в коде проекта, часто сделать это мешает квалификация разработчиков. Но очень важно, чтобы проект был красив не только снаружи, но и изнутри, в архитектуре и коде. Заказчикам часто все равно, а зря - они несут лишние потери денег, и вот почему:<!--more-->
<h3>Код не документирован, либо документирован плохо, непонятно.</h3>
Для программистов проекта и новых людей, включившихся в разработку это означает больше потраченного времени на понимание всех нюансов работы проекта и отдельных компонентов. Новые программисты будут отвлекать других работников, чтобы расспросить о каких-то деталях. В итоге, теряется время, его теряется больше, чем на написание документации в процессе разработки проекта, так как каждому новому члену команды каждый раз приходится объяснять работу проекта. Для заказчика это - потеря денег.

Поэтому, при разработке чего-угодно, даже если над этим трудится один человек, необходимо писать документацию - вы же не знаете, может в дальнейшем ваша команда расширится. Документацию необходимо проверять, перечитывать - она должна быть понятной. От сложной, запутанной документации толку нет, это то же самое, как если бы документации не было вообще. Курировать создание документации должен тим-лидер проекта.
<h3>Кривой код</h3>
Кривой код это большая беда как для заказчика, так и для всех, кто работает над проектом. Заказчик теряет гораздо больше денег, потому что разработчикам требуется больше времени, чтобы внедрить новые функции. Причем, чем дольше продолжается разработка, тем больше времени будет требоваться на добавление новой функциональности.

Для разработчиков же подобный труд превращается в рутину и нервотрепку, а этим вещам не место в программировании. За тем, какой код пишут разработчики должен следить тим-лидер, он должен часть своего рабочего времени уделять просмотру созданного ими кода и не лениться вносить комментарии и заставлять переписывать код, если он не соответствует принципам правильной разработки. Это очень важно, следить за качеством кода, в дальнейшем будет тратиться гораздо меньше времени на создание нового кода, а заказчик сэкономит деньги.
<h3>Проблемы с архитектурой</h3>
Вы должны знать, что и где у вас лежит. Классы, названия файлов - все должно соответствовать соглашению об именовании той среды, под которой вы ведете разработку. Я при работе над своими проектами уделяю очень много времени проектированию архитектуры, ведь это то, на чем будет строиться вся дальнейшая разработка. За годы работы, конечно, я пришел к некой стандартной для себя архитектуре, но которая все же улучшается от проекта к проекту.

Проектированию классов тоже стоит уделять особенно пристальное внимание. Если вы используете класс, это еще не говорит о том, что бы пишете ООП код (особенно это касается php-программистов). Нужно помнить, что класс - это "черный ящик". Вам не должно быть важно, что и как происходит у него внутри, вам нужен только его интерфейс - доступные снаружи методы. Всю необходимую информацию, нужную классу для работы, нужно устанавливать только при помощи методов-сеттеров, класс не должен брать данный неизвестно откуда (например, из глобальных переменных).

Вообще, стоит почитать отдельную литературу по проектированию ООП кода. И одними паттернами тут дело не ограничивается. Я считаю что чуть ли не самое важное в ООП-подходе, это понять парадигму "черного ящика" - вот тогда придет просветление.

Кода архитектура вашего проекта отточена, вам всегда легко привнести в него новую функциональность, это будет происходить быстро, вы не будете долго раздумывать над тем, где разместить класс или файл, вы сэкономите кучу времени, а заказчик кучу денег и будет доволен, как быстро появляется новая функциональность.
<h3>Что делать дальше?</h3>
Нужно вести список дел, когда вы что-то разрабатываете. Большинство людей давно использует какие-либо системы ведения совместной разработки, где ведут список тикетов. Но часто тикеты ведутся неправильно. Один тикет должен содержать в себе ровно одну простую задачу. Не надо создавать таких тикетов, как например "Разработать систему добавления новостей". Это порочная практика, вашему заказчику трудно отслеживать ход выполнения задачи в этом случае, и он начинает беспокоиться. Разбейте один тикет на много отдельных - повторюсь, в каждом должна быть простая и понятная задача.

Таким образом, вы будете всегда знать, что вам делать дальше, после выполнения очередной задачи. Это снизит простои (экономия средств заказчика), а вам будет просто вернуться к работе после бурных выходных. К тому же, за небольшую и простую задачу морально гораздо легче взяться. И заказчик будет радоваться, увидев, как часто вы закрываете тикеты.
<h3>Задачи тим-лидера</h3>
Я свято верю в то, что тим-лидер команды по разработке программного продукта должен быть и грамотным программистом и менеджером. Причем "программистская" составляющая намного важнее менеджерской - он ведь работает по большей части с программистами (хотя служит "мостом" между программистами и заказчиком). Я уверен в том, что тим-лидер не должен писать код вместе с программистами - он может проектировать архитектуру проекта совместно с ними, но писать код - задача программистов, тим-лидер же должен следить за чистотой кода, документацией и обеспечивать коммуникацию между всеми участниками проекта.

<em>Вот и все пока. Наверное, что-то упустил, но если вспомню, то обязательно добавлю. Пока писал этот пост, появилась мысль об еще одном посте под кодовым названием "Как разработать проект с нуля", в котором расскажу, как начать разработку проекта, на что вообще обращать внимание при разработке, что делать сначала и что потом.</em>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>280</wp:post_id>
<wp:post_date>2009-10-22 12:10:41</wp:post_date>
<wp:post_date_gmt>2009-10-22 07:10:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>time-is-money</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1258818463</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>763</wp:comment_id>
<wp:comment_author><![CDATA[Oleg Lobach]]></wp:comment_author>
<wp:comment_author_email>oleg@lobach.info</wp:comment_author_email>
<wp:comment_author_url>http://lobach.info/</wp:comment_author_url>
<wp:comment_author_IP>95.24.193.35</wp:comment_author_IP>
<wp:comment_date>2009-11-21 20:28:18</wp:comment_date>
<wp:comment_date_gmt>2009-11-21 15:28:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Хочется возразить на утверждение, что тим-лид писать не должен. Если перестать писать, можно и квалификацию потерять (что не работает, то атрофируется), и "чувство кода" утратить. Согласен с тем, что у тим-лида много чисто менеджерской работы, но если он совсем перестанет писать, то это будет уже не тим-лид, а ПМ или архитектор (или технический директор - зависит от размеров компании/команды).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>764</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.95</wp:comment_author_IP>
<wp:comment_date>2009-11-21 20:55:54</wp:comment_date>
<wp:comment_date_gmt>2009-11-21 15:55:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну тим-лид не должен писать такие штуки, типа форм или рассылки e-mail, я имел в виду именно это. Т.е. он не должен распыляться на рутинные задачи.
Тим-лид должен писать не то что бы код - а скорее, разрабатывать архитектуру системы или подсистемы. И тут уж ему никто не мешает накидать интерфейсов, а программисты пусть потом их реализуют. Конечно, тим-лид может взяться и за написание отдельного кода, если у него есть свободное время.
Эта моя статья нацелена скорее на небольшие команды разработчиков, где нет отдельных архитекторов проекта, а есть один лидер, которые управляет всеми программистами и взаимодействует с заказчиком.

Олег, я немного сумбурно описал, конечно (но что то не получается выстроить мысль стройно) - но думаю общий посыл будет понятен.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>763</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>766</wp:comment_id>
<wp:comment_author><![CDATA[Oleg Lobach]]></wp:comment_author>
<wp:comment_author_email>oleg@lobach.info</wp:comment_author_email>
<wp:comment_author_url>http://lobach.info/</wp:comment_author_url>
<wp:comment_author_IP>95.24.193.35</wp:comment_author_IP>
<wp:comment_date>2009-11-21 21:33:04</wp:comment_date>
<wp:comment_date_gmt>2009-11-21 16:33:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну да, писать код мелких рутинных задач тим-лиду несруки. С этим я согласен.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>764</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Как получить размеры видимой части окна браузера (viewport size).</title>
<link>http://torqueo.net/get-viewport-size/</link>
<pubDate>Tue, 27 Oct 2009 08:18:48 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[js]]></category>

		<category domain="tag" nicename="js"><![CDATA[js]]></category>

		<category domain="tag"><![CDATA[viewport size]]></category>

		<category domain="tag" nicename="viewport-size"><![CDATA[viewport size]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=284</guid>
<description></description>
<content:encoded><![CDATA[А вот так:
<pre><code class="javascript">
function getViewportSize() {
    var size = {};

    if (typeof window.innerWidth != 'undefined') {
        size.width  = window.innerWidth,
        size.height = window.innerHeight
    }
    else if (typeof document.documentElement != 'undefined'
        &amp;&amp; typeof document.documentElement.clientWidth !=
        'undefined' &amp;&amp; document.documentElement.clientWidth != 0) {
            size.width  = document.documentElement.clientWidth,
            size.height = document.documentElement.clientHeight
    } else {
        size.width  = document.getElementsByTagName('body')[0].clientWidth,
        size.height = document.getElementsByTagName('body')[0].clientHeight
    }

    return size;
}
</code></pre>

В Mootools лучше делать так:

<pre><code class="javascript">
window.implement({
    getViewportSize: function() {
        var size = {};

        if (typeof window.innerWidth != 'undefined') {
            size.width  = window.innerWidth,
            size.height = window.innerHeight
        }
        else if (typeof document.documentElement != 'undefined'
            &amp;&amp; typeof document.documentElement.clientWidth !=
            'undefined' &amp;&amp; document.documentElement.clientWidth != 0) {
                size.width  = document.documentElement.clientWidth,
                size.height = document.documentElement.clientHeight
        } else {
            size.width  = document.getElementsByTagName('body')[0].clientWidth,
            size.height = document.getElementsByTagName('body')[0].clientHeight
        }

        return size;
    }
});</code></pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>284</wp:post_id>
<wp:post_date>2009-10-27 13:18:48</wp:post_date>
<wp:post_date_gmt>2009-10-27 08:18:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>get-viewport-size</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1256631589</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>577</wp:comment_id>
<wp:comment_author><![CDATA[Konstantin Tumalevich]]></wp:comment_author>
<wp:comment_author_email>userad@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://tumalevich.pp.ru</wp:comment_author_url>
<wp:comment_author_IP>90.151.108.203</wp:comment_author_IP>
<wp:comment_date>2009-10-27 18:23:50</wp:comment_date>
<wp:comment_date_gmt>2009-10-27 13:23:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну ничто не мешает написать и так:
window.getViewportSize = function()
{
var size = {};

    if (typeof window.innerWidth != 'undefined') {
        size.width  = window.innerWidth,
        size.height = window.innerHeight
    }
    else if (typeof document.documentElement != 'undefined'
        &amp;&amp; typeof document.documentElement.clientWidth !=
        'undefined' &amp;&amp; document.documentElement.clientWidth != 0) {
            size.width  = document.documentElement.clientWidth,
            size.height = document.documentElement.clientHeight
    } else {
        size.width  = document.getElementsByTagName('body')[0].clientWidth,
        size.height = document.getElementsByTagName('body')[0].clientHeight
    }

    return size;
}]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>580</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>188.17.195.82</wp:comment_author_IP>
<wp:comment_date>2009-10-28 00:05:02</wp:comment_date>
<wp:comment_date_gmt>2009-10-27 19:05:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да не спорю, но тогда сканает и первый вариант, так как функция в js является методом объекта window ;-)

Я просто показал пример, как принято делать это в Mootools)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>577</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Получение ответа в виде JSON от Form.Request в Mootools</title>
<link>http://torqueo.net/get-response-as-json-in-mootools-form-request/</link>
<pubDate>Sat, 14 Nov 2009 17:01:02 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category><![CDATA[mootools]]></category>

		<category domain="category" nicename="mootools"><![CDATA[mootools]]></category>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[AJAX]]></category>

		<category domain="tag" nicename="ajax"><![CDATA[AJAX]]></category>

		<category domain="tag"><![CDATA[Form.Request]]></category>

		<category domain="tag" nicename="formrequest"><![CDATA[Form.Request]]></category>

		<category domain="tag"><![CDATA[JSON]]></category>

		<category domain="tag" nicename="json"><![CDATA[JSON]]></category>

		<category domain="tag"><![CDATA[mootools]]></category>

		<category domain="tag" nicename="mootools"><![CDATA[mootools]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=288</guid>
<description></description>
<content:encoded><![CDATA[В Mootools есть отличное решение для отправки форм при помощи AJAX, это Form.Request. Он позволяет очень просто отправить форму без перезагрузки страницы.

После того, как форма отправлена, вы можете получить ответ в виде html, чистого текста или XML, в зависимости от того, какой заголовок Content-type вы отдаете на стороне сервера. Но чаще всего, нужно получить запрос в виде JSON, а в Form.Request это не предусмотрено.

Давайте посмотрим, как все таки получить нужный нам ответ в JSON:

<pre><code class="javascript">new Form.Request($('login-form'), $('login-form-errors'), {
    resetForm: false, // Не сбрасывать форму после отправки

    // В случае успешного запроса
    onSuccess : function(target, text, xml) {
        // Если сервер что-то возвратил
        if (text.length) {
            // Перекодируем ответ в объект JSON
            var json = JSON.decode(text[0].data);
            ...
        }
    }
}).send();</code></pre>

Смотрите так же <a href="http://mootools.net/docs/more/Forms/Form.Request" rel="noindex,nofollow">документацию по Form.Request</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>288</wp:post_id>
<wp:post_date>2009-11-14 22:01:02</wp:post_date>
<wp:post_date_gmt>2009-11-14 17:01:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>get-response-as-json-in-mootools-form-request</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1258234838</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>733</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin2@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>92.248.209.44</wp:comment_author_IP>
<wp:comment_date>2009-11-18 11:44:31</wp:comment_date>
<wp:comment_date_gmt>2009-11-18 06:44:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Это все есть в мане =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>741</wp:comment_id>
<wp:comment_author><![CDATA[Venom]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>217.114.234.57</wp:comment_author_IP>
<wp:comment_date>2009-11-19 10:20:27</wp:comment_date>
<wp:comment_date_gmt>2009-11-19 05:20:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ню-ню, поглядел бы сначала в ман, прежде чем такую чушь нести. lol]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>733</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>step1</title>
<link>http://torqueo.net/developing-pretty-buttons-with-best-practices/step1/</link>
<pubDate>Sun, 15 Nov 2009 21:18:43 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/11/step1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>293</wp:post_id>
<wp:post_date>2009-11-16 02:18:43</wp:post_date>
<wp:post_date_gmt>2009-11-15 21:18:43</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>step1</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>292</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/11/step1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/step1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"551";s:6:"height";s:3:"338";s:14:"hwstring_small";s:23:"height='78' width='128'";s:4:"file";s:17:"2009/11/step1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"step1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"step1-300x184.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"184";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>step2</title>
<link>http://torqueo.net/developing-pretty-buttons-with-best-practices/step2/</link>
<pubDate>Sun, 15 Nov 2009 21:21:47 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/11/step2.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>294</wp:post_id>
<wp:post_date>2009-11-16 02:21:47</wp:post_date>
<wp:post_date_gmt>2009-11-15 21:21:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>step2</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>292</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/11/step2.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/step2.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"644";s:6:"height";s:3:"206";s:14:"hwstring_small";s:23:"height='40' width='127'";s:4:"file";s:17:"2009/11/step2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"step2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"step2-300x95.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"95";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>step3</title>
<link>http://torqueo.net/developing-pretty-buttons-with-best-practices/step3/</link>
<pubDate>Sun, 15 Nov 2009 21:22:23 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/11/step3.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>295</wp:post_id>
<wp:post_date>2009-11-16 02:22:23</wp:post_date>
<wp:post_date_gmt>2009-11-15 21:22:23</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>step3</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>292</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/11/step3.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/step3.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"499";s:6:"height";s:3:"114";s:14:"hwstring_small";s:23:"height='29' width='127'";s:4:"file";s:17:"2009/11/step3.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"step3-150x114.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"114";}s:6:"medium";a:3:{s:4:"file";s:16:"step3-300x68.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"68";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>result</title>
<link>http://torqueo.net/developing-pretty-buttons-with-best-practices/result/</link>
<pubDate>Sun, 15 Nov 2009 21:40:01 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/11/result.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>297</wp:post_id>
<wp:post_date>2009-11-16 02:40:01</wp:post_date>
<wp:post_date_gmt>2009-11-15 21:40:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>result</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>292</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/11/result.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/result.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"598";s:6:"height";s:3:"191";s:14:"hwstring_small";s:23:"height='40' width='128'";s:4:"file";s:18:"2009/11/result.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"result-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"result-300x95.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"95";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Делаем красивые кнопки с использованием лучших практик</title>
<link>http://torqueo.net/developing-pretty-buttons-with-best-practices/</link>
<pubDate>Sun, 15 Nov 2009 21:45:51 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[вёрстка]]></category>

		<category domain="category" nicename="%d0%b2%d1%91%d1%80%d1%81%d1%82%d0%ba%d0%b0"><![CDATA[вёрстка]]></category>

		<category domain="tag"><![CDATA[css buttons]]></category>

		<category domain="tag" nicename="css-buttons"><![CDATA[css buttons]]></category>

		<category domain="tag"><![CDATA[photoshop]]></category>

		<category domain="tag" nicename="photoshop"><![CDATA[photoshop]]></category>

		<category domain="tag"><![CDATA[png]]></category>

		<category domain="tag" nicename="png"><![CDATA[png]]></category>

		<category domain="tag"><![CDATA[pretty buttons]]></category>

		<category domain="tag" nicename="pretty-buttons"><![CDATA[pretty buttons]]></category>

		<category domain="tag"><![CDATA[web2.0 buttons]]></category>

		<category domain="tag" nicename="web20-buttons"><![CDATA[web2.0 buttons]]></category>

		<category domain="tag"><![CDATA[альфа-канал]]></category>

		<category domain="tag" nicename="%d0%b0%d0%bb%d1%8c%d1%84%d0%b0-%d0%ba%d0%b0%d0%bd%d0%b0%d0%bb"><![CDATA[альфа-канал]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=292</guid>
<description></description>
<content:encoded><![CDATA[В этом примере я расскажу, как сделать красивые кнопки для использования их на ваших веб-страницах использованием лучших практик. Эти кнопки будут:
<ul>
	<li>Использовать всего лишь одну картинку для всех состояний</li>
	<li>Поддерживать 3 состояния: состояние покоя, при наведении мыши, при нажатии.</li>
	<li>Иметь малое количество CSS-кода</li>
	<li>Легко встраиваться в любые места ваших веб-страниц</li>
	<li>Текст на кнопке это именно текст, а не картинка.</li>
	<li>Кнопки могут иметь произвольную ширину.</li>
</ul>
В итоге, мы получим такие кнопки:
<p style="text-align: center;"><a href="http://torqueo.net/developing-pretty-buttons-with-best-practices/#more-292"><img class="aligncenter size-full wp-image-299" src="http://torqueo.net/wp-content/uploads/2009/11/preview.jpg" alt="preview" width="598" height="95" /></a></p>

<!--more-->
<h3>Приступим</h3>
Для начала нам нужно нарисовать эти самые кнопки. Откроем Photoshop и создадим новый документ:
<p style="text-align: center;"><img class="size-full wp-image-293 aligncenter" title="step1" src="http://torqueo.net/wp-content/uploads/2009/11/step1.jpg" alt="step1" width="551" height="338" /></p>

Затем, при помощи инструмента Rectangular Marquee Tool выделим на странице фиксированную область, как показано на рисунке:

<img class="aligncenter size-full wp-image-294" title="step2" src="http://torqueo.net/wp-content/uploads/2009/11/step2.jpg" alt="step2" width="644" height="206" />

После выделения получим вот такой вид:

<img class="aligncenter size-full wp-image-295" title="step3" src="http://torqueo.net/wp-content/uploads/2009/11/step3.jpg" alt="step3" width="499" height="114" />

Затем, создадим новый слой и зальём его чёрным цветом. Дальше, нам остаётся только потюнить Blending Options слоя и настроить его правильным образом. Я специально дал пример только начала создания кнопок, потому что дальше всё донельзя банально. Вы можете <a href="/files/pretty-buttons/buttons.psd">скачать готовый psd-файл</a>, чтобы посмотреть, какие настройки я применил к кнопкам.
<h3>Осталось дело за малым</h3>
Теперь, когда кнопки нарисованы, нам остаётся только  создать png-файл с кнопками, а так же html-разметку и css-код. Опять же, я не буду пошагово все разъяснять, так как комментариев в файле с примером должно хватить в избытке. Давайте лучше насладимся результатом:

[caption id="attachment_297" align="aligncenter" width="598" caption="Нажмите, чтобы посмотреть онлайн-демо"]<a title="Посмотреть онлайн-демо" href="/files/pretty-buttons/buttons.html"><img class="size-full wp-image-297" title="Посмотреть онлайн-демо" src="http://torqueo.net/wp-content/uploads/2009/11/result.jpg" alt="result" width="598" height="191" /></a>[/caption]

<strong>Важно!</strong> В моём примере используются кнопки с полупрозрачной тенью и закругленными уголками. Естественно, в формате png. Как известно,  IE6 не поддерживает альфа-канал в png, поэтому, приходится использовать костыль. В моём примере такого костыля нет. Но если вам нужна поддержка альфа-канала в IE6, то я горячо рекомендую использовать <a rel="noindex,nofollow" href="http://www.dillerdesign.com/experiment/DD_belatedPNG/">DD BelatedPNG</a>, это наилучшее решение на сегодняшний день.

Итак, как видим, мы получили довольно неплохие кнопки :) Надеюсь, вам понравилась эта статья.

Дальше можно:
<ul>
	<li><a href="/files/pretty-buttons/buttons.html">Посмотреть онлайн-демо</a></li>
	<li><a href="/files/pretty-buttons/buttons.psd">Скачать исходник psd</a></li>
	<li><a href="/files/pretty-buttons/buttons.zip">Скачать демо в zip-файле</a></li>
	<li><a rel="noindex,nofollow" href="http://www.designvitality.com/blog/2007/10/photoshop-button-tutorials/">Почитать, как можно рисовать кнопки в photoshop</a></li>
	<li><a rel="noindex,nofollow" href="http://www.dillerdesign.com/experiment/DD_belatedPNG/">Поддержка альфа-канала в png в IE6</a></li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>292</wp:post_id>
<wp:post_date>2009-11-16 02:45:51</wp:post_date>
<wp:post_date_gmt>2009-11-15 21:45:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>developing-pretty-buttons-with-best-practices</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1258361559</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>7324</wp:comment_id>
<wp:comment_author><![CDATA[Артём]]></wp:comment_author>
<wp:comment_author_email>artemite63@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://gametor.ru/</wp:comment_author_url>
<wp:comment_author_IP>188.168.211.36</wp:comment_author_IP>
<wp:comment_date>2011-04-24 21:11:42</wp:comment_date>
<wp:comment_date_gmt>2011-04-24 16:11:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Очень полезно. Спасибо за статью]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>preview</title>
<link>http://torqueo.net/developing-pretty-buttons-with-best-practices/preview/</link>
<pubDate>Sun, 15 Nov 2009 21:46:51 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2009/11/preview.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>299</wp:post_id>
<wp:post_date>2009-11-16 02:46:51</wp:post_date>
<wp:post_date_gmt>2009-11-15 21:46:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>preview</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>292</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2009/11/preview.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2009/11/preview.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"598";s:6:"height";s:2:"95";s:14:"hwstring_small";s:23:"height='20' width='128'";s:4:"file";s:19:"2009/11/preview.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"preview-150x95.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"95";}s:6:"medium";a:3:{s:4:"file";s:18:"preview-300x47.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"47";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Developing pretty buttons with css best practices</title>
<link>http://torqueo.net/developing-pretty-buttons-with-css-best-practices/</link>
<pubDate>Mon, 16 Nov 2009 09:32:20 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[вёрстка]]></category>

		<category domain="category" nicename="%d0%b2%d1%91%d1%80%d1%81%d1%82%d0%ba%d0%b0"><![CDATA[вёрстка]]></category>

		<category domain="tag"><![CDATA[alpha-channel]]></category>

		<category domain="tag" nicename="alpha-channel"><![CDATA[alpha-channel]]></category>

		<category domain="tag"><![CDATA[css buttons]]></category>

		<category domain="tag" nicename="css-buttons"><![CDATA[css buttons]]></category>

		<category domain="tag"><![CDATA[photoshop]]></category>

		<category domain="tag" nicename="photoshop"><![CDATA[photoshop]]></category>

		<category domain="tag"><![CDATA[png]]></category>

		<category domain="tag" nicename="png"><![CDATA[png]]></category>

		<category domain="tag"><![CDATA[pretty buttons]]></category>

		<category domain="tag" nicename="pretty-buttons"><![CDATA[pretty buttons]]></category>

		<category domain="tag"><![CDATA[web2.0 buttons]]></category>

		<category domain="tag" nicename="web20-buttons"><![CDATA[web2.0 buttons]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=307</guid>
<description></description>
<content:encoded><![CDATA[In this article I'll show you how to make beautiful buttons to use these on your web pages using best practices. These buttons are:

<ul>
	<li>Use only one picture for all states</li>
	<li>Has a 3 states: the state of rest, when you hover the mouse and when clicked.</li>
	<li>Having less of css code.</li>
	<li>Can be easily embeded into any place of your web pages.</li>
	<li>The text on the button is just text, not image.</li>
	<li>Buttons can be of any width.</li>
</ul>
As a result, we have got these buttons:
<p style="text-align: center;"><a href="http://torqueo.net/developing-pretty-buttons-with-best-practices/#more-292"><img class="aligncenter size-full wp-image-299" src="http://torqueo.net/wp-content/uploads/2009/11/preview.jpg" alt="preview" width="598" height="95" /></a></p>

<!--more-->
<h3>Let's begin</h3>
First, we need to draw those buttons. Open Photoshop and create a new document:
<p style="text-align: center;"><img class="size-full wp-image-293 aligncenter" title="step1" src="http://torqueo.net/wp-content/uploads/2009/11/step1.jpg" alt="step1" width="551" height="338" /></p>

Then, using the <em>Rectangular Marquee Tool</em> select a fixed area, as shown in the picture:

<img class="aligncenter size-full wp-image-294" title="step2" src="http://torqueo.net/wp-content/uploads/2009/11/step2.jpg" alt="step2" width="644" height="206" />

Once you've selected so we get this:

<img class="aligncenter size-full wp-image-295" title="step3" src="http://torqueo.net/wp-content/uploads/2009/11/step3.jpg" alt="step3" width="499" height="114" />

Then, create a new layer and fill it with black. Further, we only adjust <em>Layer Blending Options</em> and set it up properly. I specifically gave you an example of just started creating buttons, because then everything utterly banal. 	
You can <a href="/files/pretty-buttons/buttons.psd">download complete psd source</a>, to see what settings I applied to the buttons.

<h3>Next</h3>
Now, when the buttons are drawn, we can only create a png-file with the buttons, as well as html-markup and css-code. Again, I will not explain everything step by step, as the comments in the file with an example should be sufficient in abundance. Let's enjoy the result of:

[caption id="attachment_297" align="aligncenter" width="598" caption="Click to view online demo"]<a title="View online demo" href="/files/pretty-buttons/buttons-en.html"><img class="size-full wp-image-297" title="View online demo" src="http://torqueo.net/wp-content/uploads/2009/11/result.jpg" alt="View online demo" width="598" height="191" /></a>[/caption]

<strong>Important!</strong> My example uses a button with a semitransparent shadow and rounded corners. Naturally, in the png format. As you know, IE6 does not support alpha channel in png, therefore, we are forced to use a "crutch". In my example, there is no such any "crutch". But if you want support for alpha channel in IE6, I strongly recommend you use <a rel="noindex,nofollow" href="http://www.dillerdesign.com/experiment/DD_belatedPNG/">DD BelatedPNG</a>, is the best solution to date.

So, as you can see, we got quite a good buttons:) I hope you enjoyed this article.

Now you can:
<ul>
	<li><a href="/files/pretty-buttons/buttons-en.html">View online demo</a></li>
	<li><a href="/files/pretty-buttons/buttons.psd">Download psd source</a></li>
	<li><a href="/files/pretty-buttons/buttons-en.zip">Download demo in zip</a></li>
	<li><a rel="noindex,nofollow" href="http://www.designvitality.com/blog/2007/10/photoshop-button-tutorials/">Read about how you can draw buttons in photoshop</a></li>
	<li><a rel="noindex,nofollow" href="http://www.dillerdesign.com/experiment/DD_belatedPNG/">Support for alpha channel in png in IE6 (best solution to date)</a></li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>307</wp:post_id>
<wp:post_date>2009-11-16 14:32:20</wp:post_date>
<wp:post_date_gmt>2009-11-16 09:32:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>developing-pretty-buttons-with-css-best-practices</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1258365076</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>964</wp:comment_id>
<wp:comment_author><![CDATA[tigerfoot]]></wp:comment_author>
<wp:comment_author_email>gzoller@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>74.220.113.178</wp:comment_author_IP>
<wp:comment_date>2009-12-10 20:53:44</wp:comment_date>
<wp:comment_date_gmt>2009-12-10 15:53:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I noticed that when you click on a button the color remains dark.  How can I modify your css so that when I click (and release the button) it goes back to the original color?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>966</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.21.91</wp:comment_author_IP>
<wp:comment_date>2009-12-10 23:05:55</wp:comment_date>
<wp:comment_date_gmt>2009-12-10 18:05:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[If you click on the button and then release the button is focused now. You need remove "a.btn:focus" selector from this style:

<code>        a.btn:hover,
        a.btn:focus {
            background-position: right -72px;
            color: #fff;
            text-shadow: 0 -1px 1px #555;
        }</code>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>964</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1056</wp:comment_id>
<wp:comment_author><![CDATA[SMiGL]]></wp:comment_author>
<wp:comment_author_email>sergey.melnichenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://night-fairy-tales.blogspot.com/</wp:comment_author_url>
<wp:comment_author_IP>91.197.11.251</wp:comment_author_IP>
<wp:comment_date>2009-12-23 23:54:56</wp:comment_date>
<wp:comment_date_gmt>2009-12-23 18:54:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Simple and helful. Thanks]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Event bubbling в Javascript - что это такое?</title>
<link>http://torqueo.net/event-bubbling-in-javascript-with-jquery/</link>
<pubDate>Fri, 27 Nov 2009 11:34:51 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[dom]]></category>

		<category domain="tag" nicename="dom"><![CDATA[dom]]></category>

		<category domain="tag"><![CDATA[event bubbling]]></category>

		<category domain="tag" nicename="event-bubbling"><![CDATA[event bubbling]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[jquery]]></category>

		<category domain="tag" nicename="jquery"><![CDATA[jquery]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=314</guid>
<description></description>
<content:encoded><![CDATA[Мало кто знает, как работают события в <em>Javascript</em>. Сейчас же модно юзать фреймворки, вот люди и не задумываются, как оно там работает и зачастую, тратят очень много времени на простые вещи.

Я расскажу про такую широко известную в узких кругах фишку, как <em><strong>event bubbling</strong></em>. Что это вообще такое?

Когда мы кликаем по-какому либо элементу на странице, то событие поднимается по всем родительским узлам кликнутого элемента, пока не дойдет до узла <em>document</em>. Это и есть event bubbling.
<a href="/files/event-bubbling/wrong.html">Посмотрим наглядно</a> как это работает, ведь лучше увидеть, чем сказать тысячу слов.

Есть HTML:
<pre><code class="html">&lt;div id="dialog"&gt;
    I'm a absolutely positioned dialog. So click me!
&lt;/div&gt;</code></pre>

Есть CSS:
<pre><code class="css">&lt;style type="text/css"&gt;
#dialog {
    padding: 200px;
    position: absolute;
    top: 100px;
    left: 100px;
    border: 1px solid #000;
    background: #ddd;
}
&lt;/style&gt;</code></pre>

И, самое главное, есть javascript (JQuery):
<pre><code class="javascript">&lt;script type="text/javascript"&gt;
$(document).ready(function() {
    $('#dialog').click(function(e) {
        alert('Clicked on dialog!');
    })

    $(document).click(function(e) {
        alert('Clicked on document!');
    })
});
&lt;/script&gt;</code></pre>

Как видно по коду, у нас навешаны колбэки на клик по диалогу, а так же на клик по документу. Давайте теперь откроем рабочий пример и кликнем по диалогу. Что получилось? А получилось 2 алерта, алерт диалога и алерт документа. Почему так вышло, мы же кликнули только по диалогу? Причина этого именно в event bubbling'е.

Давайте теперь сделаем так, чтобы при клике по диалогу появлялся только алерт этого диалога. Все, что нужно сделать, это отменить event bubbling, чтобы он не поднимался вверх по <em>DOM </em>узлам. Сделать это можно просто добавив <em><strong>e.stopPropagation()</strong></em> в колбэк диалога. Все. Давайте <a href="/files/event-bubbling/okay.html">посмотрим второй пример</a>.

Вот так, вроде простая вещь - но знают о ней немногие. Ее знание сильно облегчает разработку на javascript. Как, например, без особых извращений сделать так, чтобы какой-либо элемент на странице скрывался при клике вне этого элемента? Только через event bubbling!

До скорого.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>314</wp:post_id>
<wp:post_date>2009-11-27 16:34:51</wp:post_date>
<wp:post_date_gmt>2009-11-27 11:34:51</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>event-bubbling-in-javascript-with-jquery</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259349846</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>How does the event bubbling works in Javascript?</title>
<link>http://torqueo.net/how-does-the-event-bubbling-works-in-javascript/</link>
<pubDate>Fri, 27 Nov 2009 19:12:01 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[dom]]></category>

		<category domain="tag" nicename="dom"><![CDATA[dom]]></category>

		<category domain="tag"><![CDATA[event bubbling]]></category>

		<category domain="tag" nicename="event-bubbling"><![CDATA[event bubbling]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[jquery]]></category>

		<category domain="tag" nicename="jquery"><![CDATA[jquery]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=322</guid>
<description></description>
<content:encoded><![CDATA[Few people knows how events works in <em>javascript</em>.  Currently, many people use frameworks, and do not realize how event works, so they are spend much time on simple things.

I'll tell about a widely known in narrow circles thing such as <em><strong>event bubbling</strong></em>. What I'm talking about?

When we are click on any element on the web page, the event is raised on all the parent nodes of clicked element,  until it reaches the <em>document</em> node. This is event bubbling as is.
<a href="/files/event-bubbling/wrong.html">Let's see  clearly how it works</a>, it's better to see than tell a thousand words.
<!--more-->

We have a HTML markup:
<pre><code class="html">&lt;div id="dialog"&gt;
    I'm a absolutely positioned dialog. So click me!
&lt;/div&gt;</code></pre>

We have a CSS:
<pre><code class="css">&lt;style type="text/css"&gt;
#dialog {
    padding: 200px;
    position: absolute;
    top: 100px;
    left: 100px;
    border: 1px solid #000;
    background: #ddd;
}
&lt;/style&gt;</code></pre>

And, most importantly, there is javascript (JQuery):
<pre><code class="javascript">&lt;script type="text/javascript"&gt;
$(document).ready(function() {
    $('#dialog').click(function(e) {
        alert('Clicked on dialog!');
    })

    $(document).click(function(e) {
        alert('Clicked on document!');
    })
});
&lt;/script&gt;</code></pre>

As we can see, we have callbacks on dialog click and on document click. Now let's open a <a href="/files/event-bubbling/wrong.html">working example</a> and click on the dialog. What happened? As a result we've got 2 alerts: alert from dialog and from document. Why this happened, we're just clicked on the dialog? The reason is in the event bubbling!

So let's do that when we click on the dialog, then appeared only alert for this dialog. All we need to do is to cancel the event bubbling, so that the event did not rise up the <em>DOM</em> nodes. This can be done simply by adding <em><strong>e.stopPropagation()</strong></em> to dialog click callback. That's all. Let's <a href="/files/event-bubbling/okay.html">see final sample</a>.

So, this is a simple thing - but few know about it. It greatly simplifies the development on javascript. How, for example, without any distortions /you can hide any element by click out of this element/ to make any element on the page when they click into hiding outside this item? Only through event bubbling! Now you know :)

CU.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>322</wp:post_id>
<wp:post_date>2009-11-28 00:12:01</wp:post_date>
<wp:post_date_gmt>2009-11-27 19:12:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-does-the-event-bubbling-works-in-javascript</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259349358</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>882</wp:comment_id>
<wp:comment_author><![CDATA[Mr52]]></wp:comment_author>
<wp:comment_author_email>mr52@h7labs.com</wp:comment_author_email>
<wp:comment_author_url>http://h7labs.com</wp:comment_author_url>
<wp:comment_author_IP>117.195.164.158</wp:comment_author_IP>
<wp:comment_date>2009-12-01 18:26:46</wp:comment_date>
<wp:comment_date_gmt>2009-12-01 13:26:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[well the demo u gave has some error

even when i press on text it says clicked on Document and text

bith javascripts are coming up ( alert boxes )

please check it]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>886</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.176</wp:comment_author_IP>
<wp:comment_date>2009-12-02 01:48:13</wp:comment_date>
<wp:comment_date_gmt>2009-12-01 20:48:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ok, thanks. Which browser you are watchin this demo?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>882</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>888</wp:comment_id>
<wp:comment_author><![CDATA[Mr52]]></wp:comment_author>
<wp:comment_author_email>mr52@h7labs.com</wp:comment_author_email>
<wp:comment_author_url>http://h7labs.com</wp:comment_author_url>
<wp:comment_author_IP>117.195.162.248</wp:comment_author_IP>
<wp:comment_date>2009-12-02 04:40:06</wp:comment_date>
<wp:comment_date_gmt>2009-12-01 23:40:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[using Firefox 3.5.6 

well now it only shows Clicked on Dialog

where ever i press it only shows Clicked on Dialog ( it aint showing Document )]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>891</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>87.224.163.18</wp:comment_author_IP>
<wp:comment_date>2009-12-02 12:06:52</wp:comment_date>
<wp:comment_date_gmt>2009-12-02 07:06:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Here is http://torqueo.net/files/event-bubbling/okay.html correct behaviour. When you click on the Dialog in this demo, you will see only "Clicked on dialog" alert message, but the message "Clicked on document" should not appear, reason is that we abolish the onclick event propagation to document (e.stopPropagation() method).

I checked this demo (http://torqueo.net/files/event-bubbling/okay.html) in IE6, FF 3.5.5 and Google Chrome - in these browsers my sample is working correctly.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>888</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Как обновлять репозитарий для проектов на Tanraya Framework</title>
<link>http://torqueo.net/projects/tanraya-framework/how-to-update-tanraya-projects/</link>
<pubDate>Sun, 29 Nov 2009 15:32:57 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?page_id=333</guid>
<description></description>
<content:encoded><![CDATA[Это касается проектов Timecast и Lowjob, а так же любых других, основанных на Tanraya Framework.

Я обновил репозитарий для Timecast на отдельные репозитарии:
<ol>
	<li>Timecast Application (SVN: <a href="http://svn.xp-dev.com/svn/timecast/">http://svn.xp-dev.com/svn/timecast/</a>)</li>
	<li>Tanraya Framework (SVN: <a href="http://svn.xp-dev.com/svn/tanraya-framework/trunk/framework/">http://svn.xp-dev.com/svn/tanraya-framework/trunk/framework/</a>)</li>
	<li>Zend Framework (SVN: <a href="http://framework.zend.com/svn/framework/standard/trunk/library/Zend/">http://framework.zend.com/svn/framework/standard/trunk/library/Zend/</a>)</li>
</ol>
Теперь, чтобы собрать рабочий проект Timecast, тебе нужно выполнить следующие шаги:
<ol>
	<li>Создать новую папку www.</li>
	<li>Сделать в неё <em>svn checkout</em> из <a href="http://svn.xp-dev.com/svn/timecast/">http://svn.xp-dev.com/svn/timecast/</a>.</li>
	<li>Создать в папке www папку lib, и сделать на нее <em>svn ignore</em>, а затем <em>svn commit</em> на папку www.</li>
	<li>Создать в папке lib папку Tanraya и сделать в неё <em>svn checkout</em> из <a href="http://svn.xp-dev.com/svn/tanraya-framework/trunk/framework/">http://svn.xp-dev.com/svn/tanraya-framework/trunk/framework/</a>.</li>
	<li>Создать в папке lib папку Zend и сделать в неё <em>svn checkout</em> из <a href="http://framework.zend.com/svn/framework/standard/trunk/library/Zend/">http://framework.zend.com/svn/framework/standard/trunk/library/Zend/</a>.</li>
</ol>
Теперь приложение собрано. Когда ты сделаешь <em>svn commit</em> на папке www, закоммитится только приложение Timecast, а фреймворки не будут коммититься. Таким образом, мы теперь можем легко обновлять Tanraya и Zend в отдельности от нашего приложения Timecast.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>333</wp:post_id>
<wp:post_date>2009-11-29 20:32:57</wp:post_date>
<wp:post_date_gmt>2009-11-29 15:32:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-to-update-tanraya-projects</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>91</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password>fuckoff</wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259508819</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Обновление кода к статье "Блоки в Zend Framework"</title>
<link>http://torqueo.net/blocks-in-zend-framework-updated/</link>
<pubDate>Wed, 02 Dec 2009 07:18:57 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[Блоки в ZF]]></category>

		<category domain="tag" nicename="%d0%b1%d0%bb%d0%be%d0%ba%d0%b8-%d0%b2-zf"><![CDATA[Блоки в ZF]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=343</guid>
<description></description>
<content:encoded><![CDATA[Я обновил статью <a href="/blocks-in-zend-framework-final-version/"><strong>Блоки в Zend Framework. Финальная версия</strong></a> и добавил в код дополнение, позволяющие передавать параметры главного контроллера в блок.
Это означает, что когда вы находитесь на странице, к примеру, <em>http://example.com/pages/view/777</em> (где controller - pages, action - view и id - 777), то идентификатор (777) передастся так же в контроллер блока, который вы загружаете на данной странице, где его можно получить стандартным способом: <em>$this->_request->getParam('id')</em>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>343</wp:post_id>
<wp:post_date>2009-12-02 12:18:57</wp:post_date>
<wp:post_date_gmt>2009-12-02 07:18:57</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>blocks-in-zend-framework-updated</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1259738400</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d0%be%d0%b1%d0%bd%d0%be%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%ba%d0%be%d0%b4%d0%b0-%d0%ba-%d1%81%d1%82%d0%b0%d1%82%d1%8c%d0%b5-%d0%b1%d0%bb%d0%be%d0%ba%d0%b8-%d0%b2-zend-framework</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>How to work comfortably with layout blocks in Zend Framework</title>
<link>http://torqueo.net/how-to-work-comfortably-with-layout-blocks-in-zend-framework/</link>
<pubDate>Wed, 02 Dec 2009 08:05:20 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[Action Controller Helper]]></category>

		<category domain="tag" nicename="action-controller-helper"><![CDATA[Action Controller Helper]]></category>

		<category domain="tag"><![CDATA[Blocks]]></category>

		<category domain="tag" nicename="blocks"><![CDATA[Blocks]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[ZF]]></category>

		<category domain="tag" nicename="zf"><![CDATA[ZF]]></category>

		<category domain="tag"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag" nicename="zf-front-controller-plugin"><![CDATA[zf front controller plugin]]></category>

		<category domain="tag"><![CDATA[zf layout]]></category>

		<category domain="tag" nicename="zf-layout"><![CDATA[zf layout]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=346</guid>
<description></description>
<content:encoded><![CDATA[During my research, I found a convenient way to work with html blocks on the site. Almost every site has a number of blocks that should be present on some pages and absent on others. So, you need a flexible tool for managing the blocks.

I will present my vision of how to manage the blocks under Zend Framework.
<!--more-->

Here is the idea.
All available blocks are listed in blocks.ini config. This allows easily to see all the blocks in one place.

I'll show how looks blocks.ini config. For example, we have config with two defined blocks, the toolbar block and the banner block:
<pre><code class="ini">[toolbar]
  module=application
  controller=toolbar
  action=index

[banner]
  module=application
  controller=banner
  action=show</code></pre>

As we can see, each block have specified module, controller and action. We can see where the block will get its data.
All we need to work with blocks is a <em>action controller helper</em>, <em>front controller plugin</em> and <em>blocks.ini</em> config.

With the <em>action helper</em> we specify blocks that will be loaded into layout or unloaded from layout. <em>Front controller plugin</em> directly controls the blocks loading, which occurs immediately after the dispatch of the controller.

So, let's see to action helper code:
<pre><code class="php">/**
 * @author http://torqueo.net/
 */
class Project_Controller_Action_Helper_Block extends Zend_Controller_Action_Helper_Abstract
{
    /**
     * An instance of Project_Controller_Plugin_Block plugin
     * @var object
     */
    protected $_blocksPlugin = null;

    /**
     * Initialize Project_Controller_Plugin_Block plugin
     * and blocks config
     */
    public function init()
    {
        $front = Zend_Controller_Front::getInstance();
        if (!$front-&gt;hasPlugin('Project_Controller_Plugin_Block')) {
            $this-&gt;_blocksPlugin = new Project_Controller_Plugin_Block();
            $front-&gt;registerPlugin($this-&gt;_blocksPlugin, 93);
        } else {
            $this-&gt;_blocksPlugin = $front-&gt;getPlugin('Project_Controller_Plugin_Block');
        }

        $blocksConfig = new Zend_Config_Ini(APPLICATION_PATH . "/config/blocks.ini");
        $this-&gt;_blocksPlugin-&gt;setConfig( $blocksConfig );
    }

    /**
     * Add block on page by block name
     * @param string $blockName
     */
    public function add($blockName)
    {
        $this-&gt;_blocksPlugin-&gt;add($blockName);
    }

    /**
     * Remove block from page by block name
     * @param string $blockName
     */
    public function remove($blockName)
    {
        $this-&gt;_blocksPlugin-&gt;remove($blockName);
    }

    /**
     * Remove all blocks from page
     */
    public function removeAll()
    {
        $this-&gt;_blocksPlugin-&gt;removeAll();
    }
}</code></pre>
Then let's look at the front controller plugin, which controls the blocks loading into layout.
<pre><code class="php">/**
 * @author http://torqueo.net/
 */
class Project_Controller_Plugin_Block extends Zend_Controller_Plugin_Abstract
{
    /**
     * Here's a states for each block (enabled or disabled)
     * @var array
     */
    protected $_blocks  = array();

    /**
     * Blocks config with specified module, controller
     * and action for each block
     * @var array
     */
    protected $_config = array();

    /**
     * Enable block by block name  (set enabled flags)
     * @param string $blockName
     * @return void
     */
    public function add($blockName)
    {
        $this-&gt;_blocks[ $blockName ] = true;
    }

    /**
     * Disable block by block name (set disabled flags)
     * @param string $blockName
     * @return void
     */
    public function remove($blockName)
    {
        $this-&gt;_blocks[ $blockName ] = false;
    }

    /**
     * Disable all blocks (set disabled flags to all)
     * @param string $blockName
     * @return void
     */
    public function removeAll()
    {
        foreach ($this-&gt;_blocks as $blockName=&gt;$blockEnabled) {
            $this-&gt;_blocks[ $blockName ] = false;
        }
    }

    /**
     * Hook on postDispatch event. Disable or enable blocks.
     * @param Zend_Controller_Request_Abstract $request
     * @return void
     */
    public function postDispatch(Zend_Controller_Request_Abstract $request)
    {
        if (!$request-&gt;isXmlHttpRequest() &amp;&amp; !empty($this-&gt;_config)) {
            $this-&gt;_layout = Zend_Layout::getMvcInstance();
            $this-&gt;_view   = $this-&gt;_layout-&gt;getView();

            foreach ($this-&gt;_config as $blockName=&gt;$options) {
                if (isset($this-&gt;_blocks[ $blockName ]) &amp;&amp; $this-&gt;_blocks[ $blockName ] === true) {
                    $this-&gt;_layout-&gt;{$blockName} = $this-&gt;_view-&gt;action(
                        $options['action'],
                        $options['controller'],
                        $options['module'],
                        $request->getParams()
                    );
                }
            }

        }
    }

    /**
     * Set blocks config
     * @param Zend_Config $config
     * @return void
     */
    public function setConfig(Zend_Config $config)
    {
        $this-&gt;_config = $config-&gt;toArray();
    }
}</code></pre>
As a result, in any controller of our application, we can work with blocks like this:
<pre><code class="php">class NewsController extends Zend_Controller_Action
{
    public function preDispatch()
    {
        // Add toolbar block on page
        $this-&gt;_helper-&gt;block-&gt;add('toolbar');

        // Add banners block on page
        $this-&gt;_helper-&gt;block-&gt;add('banner');
    }

    public function viewNews()
    {
        // Disable banners block in this action
        $this-&gt;_helper-&gt;block-&gt;remove('banner');

        // ... or disable all blocks
        $this-&gt;_helper-&gt;block-&gt;removeAll();
    }
}

</code></pre>
We can output any block in layout by block name:
<pre><code class="php">&lt;?=$this-&gt;layout()-&gt;toolbar?&gt;

&lt;?=$this-&gt;layout()-&gt;banner?&gt;</code></pre>
By comments in the code should be clear how to work with blocks. You can even add to the action helper <em>addAll()</em> method to be able to load all the blocks at once, in a contrast to the <em>removeAll()</em> method - but it's on your taste.

    <p>
        <script type="text/javascript">
        digg_url = 'http://torqueo.net/how-to-work-comfortably-with-layout-blocks-in-zend-framework/';
        digg_title = 'How to work comfortably with layout blocks in Zend Framework';
        </script>
        <script src="http://digg.com/tools/diggthis.js" type="text/javascript"></script>
    </p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>346</wp:post_id>
<wp:post_date>2009-12-02 13:05:20</wp:post_date>
<wp:post_date_gmt>2009-12-02 08:05:20</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-to-work-comfortably-with-layout-blocks-in-zend-framework</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1310320558</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>9052</wp:comment_id>
<wp:comment_author><![CDATA[Augusto Leao]]></wp:comment_author>
<wp:comment_author_email>leaoaugusto@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>190.229.72.117</wp:comment_author_IP>
<wp:comment_date>2011-07-10 04:12:59</wp:comment_date>
<wp:comment_date_gmt>2011-07-09 23:12:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is a very good idea. In magento, it uses a very similar idea. thats when I found your code becouse I was trying to implement something similar. GOOD JOB!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11804</wp:comment_id>
<wp:comment_author><![CDATA[samir]]></wp:comment_author>
<wp:comment_author_email>samir_7389@yahoo.co.in</wp:comment_author_email>
<wp:comment_author_url>http://bakwas.tk</wp:comment_author_url>
<wp:comment_author_IP>118.95.238.84</wp:comment_author_IP>
<wp:comment_date>2011-10-19 17:18:26</wp:comment_date>
<wp:comment_date_gmt>2011-10-19 12:18:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[exactly what i was looking for, i havent done any project in zendframework till now but have worked in magento the block concept of magento is really great i wanted to implement it in ZF]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>12859</wp:comment_id>
<wp:comment_author><![CDATA[vytch]]></wp:comment_author>
<wp:comment_author_email>vhoang@deloitte.com.au</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>59.167.191.175</wp:comment_author_IP>
<wp:comment_date>2011-12-19 10:45:54</wp:comment_date>
<wp:comment_date_gmt>2011-12-19 05:45:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great idea,
I think that it's an elegant way to handle it.
Thanks for sharing.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Интересная штука этот Rhino, или мысли о серверной разработке на Javascript</title>
<link>http://torqueo.net/rhino-javascript-for-java/</link>
<pubDate>Fri, 18 Dec 2009 18:30:16 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[java]]></category>

		<category domain="tag" nicename="java"><![CDATA[java]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[jaxer]]></category>

		<category domain="tag" nicename="jaxer"><![CDATA[jaxer]]></category>

		<category domain="tag"><![CDATA[nodejs]]></category>

		<category domain="tag" nicename="nodejs"><![CDATA[nodejs]]></category>

		<category domain="tag"><![CDATA[rhino]]></category>

		<category domain="tag" nicename="rhino"><![CDATA[rhino]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=352</guid>
<description></description>
<content:encoded><![CDATA[Давеча посмотрел на <a href="http://code.google.com/p/etherpad" rel="noindex,nofollow">исходный код</a> проекта Etherpad, который гугл недавно свернул. Долго искал внутри проекта что-то похожее на скрипты питона или чего либо еще модного, пока до меня не дошло: проект написан на Javascript. Достаточно было открыть любой файл с расширением js.

Как оказалось, проект написан на <a href="https://developer.mozilla.org/en/Rhino_Overview"rel="noindex,nofollow">Rhino</a>. Это такая имплементация javascript'а на Java. Хоть я в жизни ничего и никогда не писал на Java, но носорог меня определенно заинтересовал. Вообще, классная же идея, писать и на стороне сервера и на стороне клиента на одном языке, на Javascript?

По-моему махровому мнению - это круто. Я слышал краем глаза про такой проект, Jaxer, который позволяет использовать Javascript на стороне сервера, но не щупал его.

Нужно будет потом посмотреть, как там обстоят дела на предмет существования фреймворков для разработки на джаваскрипте на сервере. И вообще, какие есть препятствия для серверной разработки на JS. А то что-то не слышно про серверных разработчиков на этом языке.

<strong>Update:</strong>

Нашел классный проект <a href="http://nodejs.org/" rel="nofollow,noindex">Nodejs</a>, это веб-сервер, использующий гугловский джаваскриптовый движок V8. Очень интересная разработка, попробую её собрать под nix и попробовать наваять какую-нибудь простую штуку. Наверное, получится пост.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>352</wp:post_id>
<wp:post_date>2009-12-18 23:30:16</wp:post_date>
<wp:post_date_gmt>2009-12-18 18:30:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rhino-javascript-for-java</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1263005804</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1076</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>89.223.120.1</wp:comment_author_IP>
<wp:comment_date>2010-01-09 22:31:56</wp:comment_date>
<wp:comment_date_gmt>2010-01-09 17:31:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Etherpad работает на Rhino? Ничего себе. Я когда тестировал Node.js против Rhino, второй _очень_ проигрывал в скорости. Но видимо и там можно кое что сделать.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1077</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.30.143</wp:comment_author_IP>
<wp:comment_date>2010-01-10 20:54:10</wp:comment_date>
<wp:comment_date_gmt>2010-01-10 15:54:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я тоже удивился.
А правда что nodejs работает ну почти как c++ в плане скорости? И вообще, есть ли где-нибудь сравнения скорости с другими языками? Я бы хотел взглянуть.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1076</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1079</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-01-11 18:24:09</wp:comment_date>
<wp:comment_date_gmt>2010-01-11 13:24:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Node.js компилирует JavaScript в ассемблер. Понятное дело, работает оно <i>очень быстро</i>. Сравнения скорости я где то находил, но сейчас не помню. Больше всего меня удивило что порт Ruby на JavaScript (HotRuby) часто работает в Node быстрее чем оригинальный Ruby.

UPD: Есть <a href="http://s3.amazonaws.com/four.livejournal/20090911/benchmark.html" rel="nofollow">вот этот</a> тест, тут Node делает питоновский Tornado (тоже неблокирующий, разработан в FriendFeed).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1077</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>HTML5 Tabs: Первая проба</title>
<link>http://torqueo.net/html5-tabs-a-first-view/</link>
<pubDate>Sun, 20 Dec 2009 22:58:45 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[html5]]></category>

		<category domain="tag" nicename="html5"><![CDATA[html5]]></category>

		<category domain="tag"><![CDATA[tabs]]></category>

		<category domain="tag" nicename="tabs"><![CDATA[tabs]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=355</guid>
<description></description>
<content:encoded><![CDATA[В HTML5 есть очень удобные семантичные элементы section, которые используются для разделения контента.
Я попробовал реализовать с их помощью табы, так как стандартное решение на списках UL не является семантичным. В итоге, за вечер был сделан первый вариант, что называется "быстро и грязно", но я старался.

Итак, смотрим демо: <a href="/files/html5-tabs/">HTML5 tabs demo</a>

Принимаю предложения по улучшению, так как табы имеют некоторые недостатки (профессионалы поймут о чем я, когда посмотрят код примера).]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>355</wp:post_id>
<wp:post_date>2009-12-21 03:58:45</wp:post_date>
<wp:post_date_gmt>2009-12-20 22:58:45</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>html5-tabs-a-first-view</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1261349928</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>HTML5 Tabs: a first touch</title>
<link>http://torqueo.net/html5-tabs-a-first-touch/</link>
<pubDate>Mon, 21 Dec 2009 06:57:24 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[вёрстка]]></category>

		<category domain="category" nicename="%d0%b2%d1%91%d1%80%d1%81%d1%82%d0%ba%d0%b0"><![CDATA[вёрстка]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[html5]]></category>

		<category domain="tag" nicename="html5"><![CDATA[html5]]></category>

		<category domain="tag"><![CDATA[tabs]]></category>

		<category domain="tag" nicename="tabs"><![CDATA[tabs]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=358</guid>
<description></description>
<content:encoded><![CDATA[HTML5 have a new, very convenient element <em>section</em> which is used to separate content. I tried to implement tabs using this element, because the standard solution on unordered lists (UL) or definition lists (DL) is not semantic, because the tab is not associated with his content area. Finally, one evening I did the first version, "quick and dirty", but I tried.

So, let's see the result: <a href="/files/html5-tabs/"><strong>HTML5 tabs demo</strong></a>

These tabs have some drawbacks (fixed content area height and some others), so I accept suggestions for improvement (professionals will understand what I mean, when they're look the sample code).

<strong>Updated at 24 dec 2009</strong>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>358</wp:post_id>
<wp:post_date>2009-12-21 11:57:24</wp:post_date>
<wp:post_date_gmt>2009-12-21 06:57:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>html5-tabs-a-first-touch</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1261651541</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1051</wp:comment_id>
<wp:comment_author><![CDATA[Tweets that mention HTML5 Tabs: a first touch / Neurons to bytes -- Topsy.com]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://topsy.com/tb/bit.ly/7tNc6P</wp:comment_author_url>
<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
<wp:comment_date>2009-12-22 13:54:40</wp:comment_date>
<wp:comment_date_gmt>2009-12-22 08:54:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Queiroga, Alain. Alain said: Une première approche des onglets en HTML5: http://bit.ly/7tNc6P [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1053</wp:comment_id>
<wp:comment_author><![CDATA[SMiGL]]></wp:comment_author>
<wp:comment_author_email>sergey.melnichenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://night-fairy-tales.blogspot.com/</wp:comment_author_url>
<wp:comment_author_IP>91.197.11.251</wp:comment_author_IP>
<wp:comment_date>2009-12-23 00:29:50</wp:comment_date>
<wp:comment_date_gmt>2009-12-22 19:29:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[excellent demo]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1058</wp:comment_id>
<wp:comment_author><![CDATA[5 articles web developers must read! | JortK.nl]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://www.jortk.nl/2009/12/5-articles-web-developers-must-read/</wp:comment_author_url>
<wp:comment_author_IP>94.124.88.196</wp:comment_author_IP>
<wp:comment_date>2009-12-24 15:04:19</wp:comment_date>
<wp:comment_date_gmt>2009-12-24 10:04:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] HTML5 Tabs: a first touch  A quick article on how to use HTML5 to create tabs in your layout! [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>6484</wp:comment_id>
<wp:comment_author><![CDATA[Kevin]]></wp:comment_author>
<wp:comment_author_email>kmaschke@brujula.es</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>84.124.26.122</wp:comment_author_IP>
<wp:comment_date>2011-04-06 13:50:06</wp:comment_date>
<wp:comment_date_gmt>2011-04-06 08:50:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey, I got a question. How can I put multiple tab sections on a single site?

I mean like this:

-section with tabs with content


-another section with tabs with different content



The problem is if I duplicate de html5 tab code, When I change between the tabs in one section, all the other tabs on the web disappear... why?

How can I solve this?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Про интернационализацию и локализацию</title>
<link>http://torqueo.net/i18n-and-l10n/</link>
<pubDate>Thu, 24 Dec 2009 15:29:30 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[i10n]]></category>

		<category domain="tag" nicename="i10n"><![CDATA[i10n]]></category>

		<category domain="tag"><![CDATA[i18]]></category>

		<category domain="tag" nicename="i18"><![CDATA[i18]]></category>

		<category domain="tag"><![CDATA[locale]]></category>

		<category domain="tag" nicename="locale"><![CDATA[locale]]></category>

		<category domain="tag"><![CDATA[Zend_Locale]]></category>

		<category domain="tag" nicename="zend_locale"><![CDATA[Zend_Locale]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=366</guid>
<description></description>
<content:encoded><![CDATA[Когда пользователь заходит на сайт, поддерживающий различные языки, то он должен выбрать тот язык, который подходит ему. В большинстве случаев язык, на котором отображается мультиязычный сайт определяется автоматически, на основе заголовка <em>HTTP_ACCEPT_LANGUAGE</em>, или на основе <em>IP-адреса</em> пользователя. Определять язык пользователя по его местоположению, при помощи IP-адреса неправильно, так как во-первых, правильно определить местоположение пользователя получится не всегда, а во-вторых, определять язык по местоположению это плохая идея.

Почему? Например, я могу находиться в Испании, и зайду на мультиязычный сайт из под локализованного на баскский язык браузера (я Баск), а страничка всё равно отобразится на Испанском языке, хотя я хотел именно баскский, который, к тому же, вообще не связан ни с одной известной языковой семьёй и по-испански я просто бы ничего не понял. Такое может случиться, если язык пользователя определяется по IP.

Итак, чтобы правильно определить язык пользователя, мы можем посмотреть только на HTTP_ACCEPT_LANGUAGE, кроме него мы можем узнать язык пользователя только если он сам его  укажет.<!--more-->
<h3>Язык не связан со страной</h3>
Нам кажется, что язык конечно же связан со страной - в Италии говорят на итальянском, в России на русском, в США на английском. Но это если смотреть только на государственный  язык. Внутри этих стран люди разных национальностей общаются на различных языках и хотят смотреть сайты в локализованных на свой родной язык браузерах.
<h3>Язык и локаль это разные вещи</h3>
Нужно их различать. Локаль определяет представление чисел, даты, времени, валют, принятую типографику в тексте, в то время как язык определяет сам текст, то есть то, на каком языке написан текст. Способность же сайта показать пользователю текст на его родном языке - это уже интернационализация (сокращенно - i18n). Чтобы мы могли показать сайт на родном языке пользователя, нам нужно узнать язык. Ранее мы уже разобрались, как это сделать. Но вот мы получили язык пользователя, теперь мы можем показать ему текст на сайте на этом языке, но как нам теперь определить локаль, чтобы мы могли правильно отформатировать в этом тексте даты, числа и все прочее?

На самом деле так же - из заголовка <em>HTTP_ACCEPT_LANGUAGE</em>. Например, значение этого заголовка в моем браузере выглядит так:
<pre><span style="color: #008000;">ru,en-us;q=0.7,en;q=0.3</span></pre>
Это значение может кодироваться в соответствии с несколькими стандартами, мы не будем их рассматривать. Для того, чтобы полученное значение использовать в <em>Zend_Locale</em>, нужно просто передать его в конструктор, Zend_Locale сам приведёт его к виду <em>en_US</em>:
<pre><span style="color: #008000;">$locale = new Zend_Locale('en-us');</span></pre>
Формат, которым определяется локаль такой:
<pre><span style="color: #008000;">&lt;язык&gt;_&lt;ТЕРРИТОРИЯ&gt;</span></pre>
Как видно из заголовка HTTP_ACCEPT_LANGUAGE, у языка, которому мы отдаём предпочтение (ru), не указан код территории. Это нормально, у локали не обязательно может быть указан  код территории. Поэтому, в нашем случае, ru и будет названием локали.

А вдруг нам понадобится код территории? Откуда его взять в нашем случае? Ниоткуда, если пользователь не укажет его сам (например, в личном кабинете). А у тех, кому код  территории действительно нужен - он почти всегда указан в заголовке HTTP_ACCEPT_LANGUAGE.

А если вы хотите сделать совсем приятно - сделайте инструмент выбора языка с территорией у себя на сайте (<a rel="noindex nofollow" href="http://www.roseindia.net/tutorials/I18N/locales-list.shtml">смотрите здесь</a>).
<h3>Как составляется название локали</h3>
Список языков определяется в соответствии с <a rel="noindex nofollow" href="http://www.iana.org/assignments/language-subtag-registry">IANA Language Subtag Registry</a>. Код территории определяется в соответствии со стандартом <a rel="noindex nofollow" href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO_3166-1</a>. Эти же коды территорий можно найти и в реестре <em>IANA Language Subtag Registry</em>.

Таким образом, чтобы составить локаль для французского языка, используемого на территории Канады, нам нужно заглянуть в реестр <em>IANA </em>и найти там запись:
<pre style="color: #008000;">Type: language
Subtag: fr
Description: French
Added: 2005-10-16
Suppress-Script: Latn</pre>
затем найти запись территории:
<pre style="color: #008000;">Type: region
Subtag: CA
Description: Canada
Added: 2005-10-16</pre>
и, далее, просто составляем язык и территорию: <em>fr_CA</em>.

Оказывается, далеко не все языки локализованы, то есть не ко всем языкам составлены файлы с правилами для локализации. Вы можете посмотреть <a rel="noindex nofollow" href="http://www.roseindia.net/tutorials/I18N/locales-list.shtml">список всех существующих локалей</a> на сегодняшний день. Но 99% разработчиков хватает и существующих локалей, не часто же вам приходится создавать сайты на языке <em>Utarmbung </em>(язык в Папуа-Новой Гвинее)?
<h3>Зачем нужна локаль</h3>
Как я уже говорил, локаль и язык это разные вещи. Локаль нужна нам прежде всего для интерфейса. Например, для каждой существующей локали мы можем сделать файл с переводом надписей интерфейса и, в зависимости от текущей локали, будем показывать пользователю надписи на его языке.

Но это только интерфейс сайта. Мы можем сделать интернационализацию, то есть вести сайт на нескольких языках, но мы, скорее всего, не имеем такой возможности, чтобы вести сайт на нескольких диалектах одного языка, например, английского. То есть, если у нас на сайте есть статья на американском английском (<em>en_US</em>), который сейчас использует большинство англоязычных людей, то вряд-ли мы будем делать локализацию этой статьи для пользователей из Австралии, которые тоже говорят на английском, но используют диалект этого языка ("<em>страйн</em>"), который имеет некоторые отличия и заимствованные слова у коренных жителей Австралии.

Поэтому, для всех англоязычных людей мы будем писать статьи на американском английском, не обращая внимания на диалекты. Это означает, что даже если к нам на сайт придет человек, для которого судя по заголовку HTTP_ACCEPT_LANGUAGE предпочтительным языком будет австралийский английский (<em>en_AU</em>), то мы все равно покажем ему статью на американском английском (теперь просто en, мы ведь не учитываем диалекты для контента сайта), а вот интерфейс сайта можем показать и локализованный на <em>en_AU</em>, так как такая локализация, скорее всего, отнимет немного сил.
<h3>В заключении</h3>
Я не стал обращать внимание на некоторые вещи, а постарался выделить главное, чтобы у вас сложилось понимание, как использовать локализацию и интернационализацию и как все это работает. Я мог упустить что-то, так что внимательных читателей прошу сообщать в комментах :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>366</wp:post_id>
<wp:post_date>2009-12-24 20:29:30</wp:post_date>
<wp:post_date_gmt>2009-12-24 15:29:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>i18n-and-l10n</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1267105265</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>i18n-and-i10n</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1164</wp:comment_id>
<wp:comment_author><![CDATA[Lex]]></wp:comment_author>
<wp:comment_author_email>alexey.katz@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.191.29.115</wp:comment_author_IP>
<wp:comment_date>2010-02-25 18:44:27</wp:comment_date>
<wp:comment_date_gmt>2010-02-25 13:44:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо, отличная статья! Наконец-то я понял все эти фишки по локализации. На русском ничего не нашел хорошего, только эту вашу статью.
Еще раз спасибо)))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1165</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.29.115</wp:comment_author_IP>
<wp:comment_date>2010-02-25 18:49:19</wp:comment_date>
<wp:comment_date_gmt>2010-02-25 13:49:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Дык, всегда пожалуйста)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1164</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11128</wp:comment_id>
<wp:comment_author><![CDATA[Alexey]]></wp:comment_author>
<wp:comment_author_email>amberlex78@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.215.36.118</wp:comment_author_IP>
<wp:comment_date>2011-09-17 11:15:52</wp:comment_date>
<wp:comment_date_gmt>2011-09-17 06:15:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я вот только не пойму:
В настройках браузера тоже Украина - uk (хотя вроде как UA должно быть, и в названиии валют тоже UAH)
Великобритания где? UK - United Kingdom
Кто-то расскажет в чем дело-то?))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Фреймворки для nodejs</title>
<link>http://torqueo.net/nodejs-frameworks/</link>
<pubDate>Sat, 09 Jan 2010 04:37:08 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[bomber]]></category>

		<category domain="tag" nicename="bomber"><![CDATA[bomber]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[JSAN]]></category>

		<category domain="tag" nicename="jsan"><![CDATA[JSAN]]></category>

		<category domain="tag"><![CDATA[nerve]]></category>

		<category domain="tag" nicename="nerve"><![CDATA[nerve]]></category>

		<category domain="tag"><![CDATA[nodejs]]></category>

		<category domain="tag" nicename="nodejs"><![CDATA[nodejs]]></category>

		<category domain="tag"><![CDATA[raccoon]]></category>

		<category domain="tag" nicename="raccoon"><![CDATA[raccoon]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=374</guid>
<description></description>
<content:encoded><![CDATA[<img class="size-full wp-image-388 alignleft" style="margin: 5px;" title="logo" src="http://torqueo.net/wp-content/uploads/2010/01/logo.png" alt="logo" width="200" height="53" />
Я просто оставлю это здесь. Список фреймворков для nodejs, которые я нашёл:
<ul>
	<li><a rel="noindex,nofollow" href="http://benjaminthomas.org/2009-11-20/designing-a-web-framework.html">Намётки и размышления одного дядюшки Бена</a>, который пытается создать свой фреймворк на nodejs. Смешно, он обозвал Дэвида Хэйнемайера Хэнсона тупицей, это повеселило :) <del datetime="2010-01-10T15:32:05+00:00">Готового кода я там так пока и не нашел.</del> А вот <a rel="noindex,nofollow" href="http://bomber.obtdev.com/">страничка проекта</a>.</li>
	<li><a rel="noindex,nofollow" href="http://github.com/mshakhan/simplex">Simplex</a> - здесь есть интересные куски кода, стоит посмотреть. Хотя это так - не фреймворк, а просто эксперимент, созданный за пару вечеров.</li>
	<li><a rel="noindex,nofollow" href="http://github.com/keeto/raccoon/">Raccoon</a> - эта штука уже посерьёзней остальных. Буду её исследовать.</li>
	<li>Вот еще один фреймворк, <a rel="noindex,nofollow" href="http://github.com/gjritter/nerve">nerve</a></li>
	<li>В комментариях Kuroki Kaze подсказывает, что есть еще <a rel="noindex,nofollow" href="http://openjsan.org/">JSAN</a>. опенсурсовая библиотека javascript, но честно говоря, не слишком много я полезного там увидел.</li>
	<li><a rel="noindex,nofollow" href="http://wiki.github.com/ry/node">Список проектов на github</a>, посвященных nodejs</li>
</ul>
Если кто знает еще фреймворки для nodejs, буду признателен за ссылки в комментах.

Вообще, мне кажется, серверное программирование на js штука весьма перспективная. Не хватает только мощного фреймворка, по типу Zend или пакетов CPAN, как в Perl, или Gems, как в Ruby. Но это вопрос времени и я думаю, на эту тему стоит написать отдельный пост.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>374</wp:post_id>
<wp:post_date>2010-01-09 09:37:08</wp:post_date>
<wp:post_date_gmt>2010-01-09 04:37:08</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>nodejs-frameworks</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1263655818</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1080</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-01-11 18:36:39</wp:comment_date>
<wp:comment_date_gmt>2010-01-11 13:36:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[<a href="http://openjsan.org/" rel="nofollow">JSAN</a> создан как раз по образцу перловского CPAN. Другое дело что раньше надобности в нём особой не было. Но теперь, с появлением хороших server-side решений, его наполнение действительно станет делом времени.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Микрофреймворк fab для nodejs</title>
<link>http://torqueo.net/fab-framework-for-nodejs/</link>
<pubDate>Tue, 12 Jan 2010 20:11:15 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[fab]]></category>

		<category domain="tag" nicename="fab"><![CDATA[fab]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[nodejs]]></category>

		<category domain="tag" nicename="nodejs"><![CDATA[nodejs]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[sinatra]]></category>

		<category domain="tag" nicename="sinatra"><![CDATA[sinatra]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=383</guid>
<description></description>
<content:encoded><![CDATA[Наткнулся на замечательный <a href="http://github.com/jed/fab">микрофреймворк fab</a>, который позволяет легко создавать простые серверные приложения на языке <em>javascript</em>, для веб-сервера nodejs.

Fab очень похож на ruby-фреймворк <a href="http://github.com/sinatra/sinatra">Sinatra</a>, который является довольно популярной штукой в среде ruby-девелоперов, так как позволяет сделать легкое приложение, без использования тяжеловесов, таких, как Rails.

Например, так выглядит простейшее приложение в Sinatra:
<pre><code class="ruby">require 'rubygems'
require 'sinatra'
get '/' do
  'Hello world!'
end</code></pre>
А вот так выглядит точно такое же приложение в fab:
<pre><code class="javascript">fab = require( "./fab" ).fab;

( fab )
  ( "/", function(){ return 'Hello world!' })
.deploy();
</code></pre>

Многословнее, но всё равно круто, да? Единственное там пока нету разделения запросов по <em>REQUEST_METHOD</em>, первой нужнейшей штуки для удобной реализации REST-сервиса.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>383</wp:post_id>
<wp:post_date>2010-01-13 01:11:15</wp:post_date>
<wp:post_date_gmt>2010-01-12 20:11:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>fab-framework-for-nodejs</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1263328014</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1082</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-01-14 14:54:30</wp:comment_date>
<wp:comment_date_gmt>2010-01-14 09:54:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Здорово. Правда синтаксис chaining functions в примере выглядит как то необычно и непривычно. Понятно что это валидный JS, но тем не менее...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1083</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>188.226.9.233</wp:comment_author_IP>
<wp:comment_date>2010-01-14 15:30:52</wp:comment_date>
<wp:comment_date_gmt>2010-01-14 10:30:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ага, очень необычный синтаксис, до сего момента я вообще не встречал подобного :) Даже захотелось залезть в исходники, посмотреть как сделано, а то так сразу не могу понять.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1082</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1084</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-01-14 15:33:58</wp:comment_date>
<wp:comment_date_gmt>2010-01-14 10:33:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Он возвращает функцию и сразу её вызывает. Поэтому chaining functions. 

Т.е. fab это основная функция, (fab)(...) - её вызов, (fab)(...)(...) - вызов результата `(fab)(...)`.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1083</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1085</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>188.226.9.233</wp:comment_author_IP>
<wp:comment_date>2010-01-14 15:44:05</wp:comment_date>
<wp:comment_date_gmt>2010-01-14 10:44:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А, теперь понятно, за одним исключением. Зачем fab пишут в скобках?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1084</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1086</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-01-14 15:45:14</wp:comment_date>
<wp:comment_date_gmt>2010-01-14 10:45:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А варп его знает. По идее и без них должно работать. Может для красоты?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1085</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>logo</title>
<link>http://torqueo.net/nodejs-frameworks/logo/</link>
<pubDate>Sat, 16 Jan 2010 15:28:37 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2010/01/logo.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>388</wp:post_id>
<wp:post_date>2010-01-16 20:28:37</wp:post_date>
<wp:post_date_gmt>2010-01-16 15:28:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>logo</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>374</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2010/01/logo.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/01/logo.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"200";s:6:"height";s:2:"53";s:14:"hwstring_small";s:23:"height='33' width='128'";s:4:"file";s:16:"2010/01/logo.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"logo-150x53.png";s:5:"width";s:3:"150";s:6:"height";s:2:"53";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Встроенные переводы сообщений валидаторов в Zend Framework</title>
<link>http://torqueo.net/translating-validation-messages/</link>
<pubDate>Tue, 19 Jan 2010 17:31:27 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[Tomas Weidner]]></category>

		<category domain="tag" nicename="tomas-weidner"><![CDATA[Tomas Weidner]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

		<category domain="tag"><![CDATA[Zend_Locale]]></category>

		<category domain="tag" nicename="zend_locale"><![CDATA[Zend_Locale]]></category>

		<category domain="tag"><![CDATA[Zend_Translate]]></category>

		<category domain="tag" nicename="zend_translate"><![CDATA[Zend_Translate]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=391</guid>
<description></description>
<content:encoded><![CDATA[В новом Zend Framework 1.10 появились переводы для встроенных валидаторов! Ура!
Теперь не нужно переводить самому, как, например, делал я когда-то. Теперь можно тупо:
<pre><code class="php">$language = 'ru';
$translator = new Zend_Translate(
    'array',
    '/resources/languages',
    $language,
    array('scan' =&gt; Zend_Translate::LOCALE_DIRECTORY)
);

Zend_Validate_Abstract::setDefaultTranslator($translator);</code></pre>

И всё - радуемся.

Информация из <a rel="noindex,nofollow" href="http://www.thomasweidner.com/flatpress/2010/01/17/translating-validation-messages/">оригинального поста</a> Томаса Вейднера, разработчика i18n в ZF.

<strong>UPD:</strong> мы с ребятами с zendframework.ru (спасибо им) <a href="http://zendframework.ru/forum/index.php?topic=2340">перевели сообщения валидаторов</a> на русский язык. Ожидается, что наш перевод появится в ZF 1.10.2 (выйдет 23 февраля 2010). Так же, ожидается перевод на украинский язык.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>391</wp:post_id>
<wp:post_date>2010-01-19 22:31:27</wp:post_date>
<wp:post_date_gmt>2010-01-19 17:31:27</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>translating-validation-messages</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1269120193</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1205</wp:comment_id>
<wp:comment_author><![CDATA[Denis]]></wp:comment_author>
<wp:comment_author_email>gashek88@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://programming.su/</wp:comment_author_url>
<wp:comment_author_IP>93.182.19.170</wp:comment_author_IP>
<wp:comment_date>2010-03-20 11:53:28</wp:comment_date>
<wp:comment_date_gmt>2010-03-20 06:53:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[У Вас ошибка вместо Zend_Locale::LOCALE_DIRECTORY нужно написать Zend_Translate::LOCALE_DIRECTORY]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1208</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.28.1</wp:comment_author_IP>
<wp:comment_date>2010-03-21 02:23:01</wp:comment_date>
<wp:comment_date_gmt>2010-03-20 21:23:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, спасибо. Исправил.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1205</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>В конце марта 2010 г. в Санкт-Петербурге пройдет первая в России конференция по Zend Framework (Регаемся, ребяты!)</title>
<link>http://torqueo.net/first-russian-zf-conf/</link>
<pubDate>Sun, 31 Jan 2010 22:55:55 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=394</guid>
<description></description>
<content:encoded><![CDATA[На днях закончился прием тезисов по планируемым докладам. Примечательно, что в состав докладчиков вошли ведущие участники русскоязычного сообщества ZF, опытнейшие специалисты и лично один из создателей фрэймворка!

<p>
На данный момент уже открыта <a rel="nofollow,noindex" href="http://www.zfconf.ru/pre-registration.php" target="_blank"><strong>предварительная регистрация</strong></a> на конференцию! Для решения ряда вопросов организаторам <strong>очень важно</strong> сейчас понять приблизительное количество человек, которые смогут посетить конференцию или каким-то иным образом принять участие в ней.

<p>

Каждый предстоящий доклад возможно обсудить на форуме ZF-сообщества. Ваше мнение очень важно для авторов!

<p>
<strong>Планируемые доклады</strong>

<p>
<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2269.0" target="_blank">Жизненный цикл предложений (proposals) в проекте Zend Framework</a></strong> 

Александр Веремьев (<a rel="nofollow,noindex" target="_blank" href="http://www.zend.com">Zend Technologies</a>, Zend Framework Core команда) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2270.0" target="_blank">Zend_Search_Lucene в деталях</a></strong> 

Александр Веремьев (<a rel="nofollow,noindex" target="_blank" href="http://www.zend.com">Zend Technologies</a>, Zend Framework Core команда) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2271.0" target="_blank">Zend Framework и производительность</a></strong> 

Александр Махомет (создатель сообщества <a rel="nofollow,noindex" target="_blank" href="http://zendframework.ru">ZendFramework.ru</a>) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2272.0" target="_blank">Zend Framework и MVC, &laquo;толстая&raquo; модель</a></strong> 


Александр Стешенко (<a rel="nofollow,noindex" target="_blank" href="http://norada.com">Norada Corporation</a>, PHP-разработчик) 

<strong> 
<a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2273.0" target="_blank">ФотоСтрана.ru: Прототипирование с использованием ZF (история боевого применения Zend Framework в highload-проекте)</a></strong> 

Леонид Жаворонков (<a rel="nofollow,noindex" target="_blank" href="http://fotostrana.ru">ФотоСтрана.ru</a>, тимлид) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2274.0" target="_blank">Использование очередей сообщений в повседневных проектах</a></strong> 

Денис Баклыков (<a rel="nofollow,noindex" href="http://obnovlenie.ru" target="_blank">Обновление</a>, веб-разработчик) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2275.0" target="_blank">Zend Framework и Doctrine</a></strong> 

Степан Танасийчук (руководитель веб-студии <a rel="nofollow,noindex" target="_blank" href="http://stfalcon.com">stfalcon.com</a>) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2276.0" target="_blank">Zend Framework и мультиязычность</a></strong> 

Степан Танасийчук (руководитель веб-студии <a rel="nofollow,noindex" target="_blank" href="http://stfalcon.com">stfalcon.com</a>) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2277.0" target="_blank">История проекта e-Штаб</a></strong> 

Анатолий Ларин (<a rel="nofollow,noindex" target="_blank" href="http://www.e-legion.com">e-Легион</a>, веб-программист) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2278.0" target="_blank">Что нового несет нам Zend Framework 2.0?</a></strong> 

Надежда Блинова (<a rel="nofollow,noindex" target="_blank" href="http://www.wizartech.ru">Wizartech</a>, веб-программист), Георгий Туревич (<a href="http://www.wizartech.ru" target="_blank">Wizartech</a>, ведущий веб-программист) 

<strong><a rel="nofollow,noindex" href="http://zendframework.ru/forum/index.php?topic=2279.0" target="_blank">Интеграция Zend Framework c Javascript-фрэймворками jQuery и Dojo Toolkit</a></strong> 

Георгий Туревич (<a rel="nofollow,noindex" rel="nofollow,noindex" href="http://www.wizartech.ru" target="_blank">Wizartech</a>, ведущий веб-программист)

<p>
Смело обсуждайте доклады и <a rel="nofollow,noindex" href="http://www.zfconf.ru/pre-registration.php" target="_blank"><strong>регистрируйтесь</strong></a>!

<p>
За последними новостями можно следить здесь:<br />
<strong>RSS-канал:</strong> <a rel="nofollow,noindex" href="http://feeds.feedburner.com/zfconf" target="_blank">feeds.feedburner.com/zfconf</a><br />
<strong>Twitter:</strong> <a rel="nofollow,noindex" href="http://twitter.com/zfconf" target="_blank">@zfconf</a><br />
<strong>Группа Вконтакте:</strong> <a rel="nofollow,noindex" href="http://vkontakte.ru/club14951507" target="_blank">vkontakte.ru/club14951507</a>

<p>
К участию также приглашаются информационные и финансовые спонсоры.
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>394</wp:post_id>
<wp:post_date>2010-02-01 03:55:55</wp:post_date>
<wp:post_date_gmt>2010-01-31 22:55:55</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>first-russian-zf-conf</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1264978744</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d0%b2-%d0%ba%d0%be%d0%bd%d1%86%d0%b5-%d0%bc%d0%b0%d1%80%d1%82%d0%b0-2010-%d0%b3-%d0%b2-%d1%81%d0%b0%d0%bd%d0%ba%d1%82-%d0%bf%d0%b5%d1%82%d0%b5%d1%80%d0%b1%d1%83%d1%80%d0%b3%d0%b5-%d0%bf%d1%80%d0%be</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Чорне молне</title>
<link>http://torqueo.net/chorne-molne/</link>
<pubDate>Tue, 09 Feb 2010 20:56:15 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[свежий навоз]]></category>

		<category domain="category" nicename="%d1%81%d0%b2%d0%b5%d0%b6%d0%b8%d0%b9-%d0%bd%d0%b0%d0%b2%d0%be%d0%b7"><![CDATA[свежий навоз]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=400</guid>
<description></description>
<content:encoded><![CDATA[Посмотрел тут дома. Как говорится, "не доставило", хорошо хоть в кин не гонял. Есть слезоточивые сюжеты, но в каком супергероическом фильме их нет?
Понравилась фраза с киноговноком:
<blockquote>Сегодня вот спасает дам от сосулек, а завтра подлетит к кремлевским окнам и покажет президенту голую жопу. Будет очень стыдно.</blockquote>
Это единственное, связанное с чорне молне, что мне понравилось. Нет, конечно, не единственное, еще всякие намёки на лепру понравились.
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>400</wp:post_id>
<wp:post_date>2010-02-10 01:56:15</wp:post_date>
<wp:post_date_gmt>2010-02-09 20:56:15</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>chorne-molne</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1265749071</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1123</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2010-02-15 11:13:06</wp:comment_date>
<wp:comment_date_gmt>2010-02-15 06:13:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Дык ... Действительно для нас таких старых не впечатляет - но вот детишкам можно показывать -- хорошие образы остануться в мозгах =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Javascript в nginx</title>
<link>http://torqueo.net/javascript-in-nginx/</link>
<pubDate>Tue, 16 Feb 2010 08:01:01 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[nginx]]></category>

		<category domain="tag" nicename="nginx"><![CDATA[nginx]]></category>

		<category domain="tag"><![CDATA[nodejs]]></category>

		<category domain="tag" nicename="nodejs"><![CDATA[nodejs]]></category>

		<category domain="tag"><![CDATA[v8]]></category>

		<category domain="tag" nicename="v8"><![CDATA[v8]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=404</guid>
<description></description>
<content:encoded><![CDATA[Игорь Сысоев, создатель веб-сервера nginx, написал <a rel="noindex,nofollow" href="http://sysoev.ru/prog/v8.html">заметку</a> об идее встраивания javascript в nginx, наподобие того, как встроен perl.

Но, как рассказывает Игорь, пока нет возможности правильно встроить V8 в nginx из-за особенностей реализации.
Я вот что-то не могу понять, как тогда появилась такая вещь, как nodejs, которая, при всем при этом, держит огромную кучу запросов (я где-то видел тесты, не помню у кого)?

Или он просто плохо смотрел (в чем я не уверен)?

Короче, буду рад, если мне кто-нибудь разъяснит, чем так кардинально отличается nginx от nodejs, что в nginx пока нельзя корректно встроить v8?]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>404</wp:post_id>
<wp:post_date>2010-02-16 13:01:01</wp:post_date>
<wp:post_date_gmt>2010-02-16 08:01:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>javascript-in-nginx</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1266307264</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1134</wp:comment_id>
<wp:comment_author><![CDATA[vsefayno]]></wp:comment_author>
<wp:comment_author_email>vsefayno@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>91.103.121.26</wp:comment_author_IP>
<wp:comment_date>2010-02-16 15:12:23</wp:comment_date>
<wp:comment_date_gmt>2010-02-16 10:12:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[на Хабре в каментах все разжевали http://habrahabr.ru/blogs/javascript/84266/
вкратце: Игорю хочется на каждый запрос создавать контекст через который и передавать в js параметры(собственно это единственный путь), но это дорого - 2мс. А крутить js отдельно в одном контексте и забрасывать туда запросы (как делает node.js) ему кажется плохой практикой, они засоряются и невозможно обработать исключения в них(это так).
Хотя конечно возможно было бы извратится и написать скрипт генерирующий по 500 контекстов в секунду + забрасывая в них запросы, а потом перегружал их. Но думаю это муторное занятие сравнимое с написанием небольшого сервера.

Ну не знаю... node.js живет и здравствует.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1417</wp:comment_id>
<wp:comment_author><![CDATA[Oleg]]></wp:comment_author>
<wp:comment_author_email>oleg@emby.ru</wp:comment_author_email>
<wp:comment_author_url>http://nodejs.ru</wp:comment_author_url>
<wp:comment_author_IP>77.241.39.241</wp:comment_author_IP>
<wp:comment_date>2010-04-23 17:22:21</wp:comment_date>
<wp:comment_date_gmt>2010-04-23 12:22:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[тем не менее где-то видел модуль для nginx с V8, вроде это: http://code.google.com/p/ngxv8/]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Кэширование и сжатие файлов в apache2</title>
<link>http://torqueo.net/caching-and-compression-files-in-apache2/</link>
<pubDate>Thu, 25 Feb 2010 13:00:01 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[apache2]]></category>

		<category domain="tag" nicename="apache2"><![CDATA[apache2]]></category>

		<category domain="tag"><![CDATA[caching]]></category>

		<category domain="tag" nicename="caching"><![CDATA[caching]]></category>

		<category domain="tag"><![CDATA[compression]]></category>

		<category domain="tag" nicename="compression"><![CDATA[compression]]></category>

		<category domain="tag"><![CDATA[htaccess]]></category>

		<category domain="tag" nicename="htaccess"><![CDATA[htaccess]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=414</guid>
<description></description>
<content:encoded><![CDATA[Прочёл статью <a rel="noindex,nofollow" href="http://www.xpro.su/archives/123">Настройка кеширования в Apache</a>. Хотелось бы дополнить её, но только для <strong>Apache2</strong>. Первый апач рассматривать не буду, он устарел, а всегда нужно стремиться к новому :)

Итак, как правильно заметил автор, по-умолчанию в Apache кэширование и сжатие отключено. Чтобы их включить, нужно подключить в Apache нужные модули. Это модули <strong>mod_deflate</strong>, <strong>mod_expires</strong> и <strong>mod_headers</strong>.

Я сделал свой конфиг, он отличается от конфига из статьи тем, что ваш сайт будет работать, даже если нужных модулей не будет установлено или включено. Плюс, я добавил установку mime-типов и кодировки по расширению, полезная штука. Итак, вот конфиг:
<pre><code class="apache"># Добавляем mime-тип и кодировку
AddType 'text/css; charset=utf-8'  .css
AddType 'text/javascript; charset=utf-8'   .js
AddType 'image/x-icon; charset=utf-8' .ico
AddType 'text/html; charset=utf-8' .html .shtml
AddType 'text/xml; charset=utf-8'  .xml

# добавление сжатия файлов
&lt;IfModule mod_deflate.c&gt;
    AddOutputFilterByType DEFLATE text/html text/xml image/x-icon text/css text/javascript

    # обработка "кривых" броузеров
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch Konqueror no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
&lt;/IfModule&gt;

&lt;IfModule mod_headers.c&gt;
    Header append Vary User-Agent

    # разрешение кеширования файлов на стороне клиента
    &lt;FilesMatch .*\.(css|js|php|phtml|shtml|html|xml)$&gt;
        Header append Cache-Control private
    &lt;/FilesMatch&gt;
&lt;/IfModule&gt;

# включение заголовка Expires для всех файлов сроком на месяц
&lt;IfModule mod_expires.c&gt;
    ExpiresActive On
    ExpiresDefault "access plus 1 month"

    # выключение Expires для HTML-файлов и PHP-скриптов
    &lt;FilesMatch .*\.(shtml|html|phtml|php)$&gt;
        ExpiresActive Off
    &lt;/FilesMatch&gt;
&lt;/IfModule&gt;

# Выдача заголовка ETag (core feature)
FileETag MTime Size</code></pre>
Положите эти настройки в корневой .htaccess на вашем сайте и подключите модули, указанные в начале статьи. Всё должно работать.

Вот <a href="/files/apache2-modules-win32.zip">готовый архив с модулями</a> для windows-инсталляции Apache2. Линуксойды же справятся сами, использовав утилиту <em>a2enmod</em> :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>414</wp:post_id>
<wp:post_date>2010-02-25 18:00:01</wp:post_date>
<wp:post_date_gmt>2010-02-25 13:00:01</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>caching-and-compression-files-in-apache2</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1276797604</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1166</wp:comment_id>
<wp:comment_author><![CDATA[Homoz]]></wp:comment_author>
<wp:comment_author_email>safrio@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://safrio.ru</wp:comment_author_url>
<wp:comment_author_IP>92.248.159.67</wp:comment_author_IP>
<wp:comment_date>2010-02-25 18:50:10</wp:comment_date>
<wp:comment_date_gmt>2010-02-25 13:50:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо, познавательно!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1185</wp:comment_id>
<wp:comment_author><![CDATA[sergey]]></wp:comment_author>
<wp:comment_author_email>info@namez.spb.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.28.104.57</wp:comment_author_IP>
<wp:comment_date>2010-03-07 04:55:01</wp:comment_date>
<wp:comment_date_gmt>2010-03-06 23:55:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[можно подробнее как эти три модуля поставить в линуксе(ubuntu 9) на апач?
не могу найти информации]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4927</wp:comment_id>
<wp:comment_author><![CDATA[s7at1c]]></wp:comment_author>
<wp:comment_author_email>d4rkr00t@mail.ru</wp:comment_author_email>
<wp:comment_author_url>http://s7at1c.ru</wp:comment_author_url>
<wp:comment_author_IP>77.39.28.101</wp:comment_author_IP>
<wp:comment_date>2011-02-10 13:32:37</wp:comment_date>
<wp:comment_date_gmt>2011-02-10 08:32:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо отличная статья, долго не мог разобраться с этими настройками apache]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Перспективы клиентских технологий в веб</title>
<link>http://torqueo.net/client-technologies-perspectives-in-web/</link>
<pubDate>Wed, 17 Mar 2010 09:09:56 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[canvas]]></category>

		<category domain="tag" nicename="canvas"><![CDATA[canvas]]></category>

		<category domain="tag"><![CDATA[flash]]></category>

		<category domain="tag" nicename="flash"><![CDATA[flash]]></category>

		<category domain="tag"><![CDATA[html5]]></category>

		<category domain="tag" nicename="html5"><![CDATA[html5]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[silverlight]]></category>

		<category domain="tag" nicename="silverlight"><![CDATA[silverlight]]></category>

		<category domain="tag"><![CDATA[SVG]]></category>

		<category domain="tag" nicename="svg"><![CDATA[SVG]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=426</guid>
<description></description>
<content:encoded><![CDATA[Откушав чаю, я тут подумал, что в связи со всеми этими новыми технологиями и фишками, такими как HTML5, canvas, SVG и скоростью выполнения JS в современных браузерах, а так же постепенным выпиливанием IE6-7 (а скоро и 8-го), будет, как мне кажется, отход от технологий flash и silverlight.

Спрашивается, почему?

А что - сейчас флэш обычно используют для анимации, видео и аудио. Всё то же самое уже сейчас можно делать на html5, но пока это будет работать не во всех браузерах, а в тех, в которых будет работать, например видео еще работает не так как надо. Но все равно чего-то будет не хватать в HTML5 по сравнению с флэшем. Как думаю я, не будет хватать именно какого-то фреймворка для построения интерфейсов, лайотов и создания векторной анимации.

Такой фреймворк скорее всего появится, и будет основан на технологиях Javascript, SVG и canvas. Возможно, он уже разрабатывается кем-то, но вот я пока об этом не знаю.

Я думаю, будущее именно за такой открытой технологией, в отличие от flash и silverlight - нужно ждать только появления фреймворка и развития технологий в браузерах.

<strong>UPD: Действительно, такой фреймворк уже разрабатывается. Подробнее здесь: <a href="/libcanvas-framework/">LibCanvas - фреймворк для работы с canvas</a></strong>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>426</wp:post_id>
<wp:post_date>2010-03-17 14:09:56</wp:post_date>
<wp:post_date_gmt>2010-03-17 09:09:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>client-technologies-perspectives-in-web</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1270715069</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>client-technologies-perspective-in-web</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1192</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2010-03-17 17:49:47</wp:comment_date>
<wp:comment_date_gmt>2010-03-17 12:49:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я думаю не стоит рассматривать flash и сервелат как только векторную графику =) 
Тот же самый флеш - это как минимум rtmp и stratus =) - тут алтернативы на чисто браузерных штуках даже не предвидеться. Не говоря о том что пока только флеш умеет работать с вебкамерой и микрофоном.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1193</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>188.226.0.150</wp:comment_author_IP>
<wp:comment_date>2010-03-17 18:34:48</wp:comment_date>
<wp:comment_date_gmt>2010-03-17 13:34:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Не, понятно что не заменить флэш в некоторых вещах, с этим я согласен. Но какие-то штуки можно будет спокойно делать и без него. В будущем браузеры будут активно обновляться, будут добавлены многие технологии, которых нет сейчас. И кто знает, может быть будет поддержка и микрофона и веб-камеры, и всего прочего :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1203</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-03-18 22:55:48</wp:comment_date>
<wp:comment_date_gmt>2010-03-18 17:55:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Флеш тоже на месте не стоит. Alchemy, "железное" ускорение. Silverlight вполне может обзавестить полноценными DirectX-биндингами (если уже не обзавёлся), сделав возможным полноценные современные 3D-игры в браузере.

В общем, посмотрим как оно будет. Живыми эти технологии точно не сдадутся :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1204</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>188.226.0.150</wp:comment_author_IP>
<wp:comment_date>2010-03-19 14:35:19</wp:comment_date>
<wp:comment_date_gmt>2010-03-19 09:35:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Возможно, уделом флэша и сервелата будут именно игры :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1203</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1306</wp:comment_id>
<wp:comment_author><![CDATA[yokotoka]]></wp:comment_author>
<wp:comment_author_email>yokotoka@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.162.172.122</wp:comment_author_IP>
<wp:comment_date>2010-04-09 06:05:54</wp:comment_date>
<wp:comment_date_gmt>2010-04-09 01:05:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Raphael JS и Processing JS - чем не фреймворки?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1331</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.31.122</wp:comment_author_IP>
<wp:comment_date>2010-04-11 20:29:16</wp:comment_date>
<wp:comment_date_gmt>2010-04-11 15:29:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ухты! Спасибо за processing.js - не слышал про него. Действительно интересный фреймворк!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1306</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1947</wp:comment_id>
<wp:comment_author><![CDATA[Пульс]]></wp:comment_author>
<wp:comment_author_email>ashumankov@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>193.200.21.9</wp:comment_author_IP>
<wp:comment_date>2010-09-06 09:37:00</wp:comment_date>
<wp:comment_date_gmt>2010-09-06 04:37:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[В отличии от флеша, в html5 нет визуального редактора, а, значит, нужно хорошо сечь в математике, особенно когда нужно перенести из дизайна какую нибудь сложную кривую.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Шпаргалка по REST в Rails</title>
<link>http://torqueo.net/rails-rest-cheatsheet/</link>
<pubDate>Wed, 17 Mar 2010 20:53:25 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[REST]]></category>

		<category domain="tag" nicename="rest"><![CDATA[REST]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=431</guid>
<description></description>
<content:encoded><![CDATA[Вот, выкладываю чисто для себя :)

<a href="/files/rest-cheatsheet/rest-cheatsheet.pdf">Шпаргалка по REST в Rails (pdf)</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>431</wp:post_id>
<wp:post_date>2010-03-18 01:53:25</wp:post_date>
<wp:post_date_gmt>2010-03-17 20:53:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rails-rest-cheatsheet</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1268859207</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>BSOD при установке Windows XP на ноутбук</title>
<link>http://torqueo.net/bsod-when-installing-windows-xp-on-notebook/</link>
<pubDate>Fri, 19 Mar 2010 12:09:59 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[AHCI]]></category>

		<category domain="tag" nicename="ahci"><![CDATA[AHCI]]></category>

		<category domain="tag"><![CDATA[notedook]]></category>

		<category domain="tag" nicename="notedook"><![CDATA[notedook]]></category>

		<category domain="tag"><![CDATA[SATA]]></category>

		<category domain="tag" nicename="sata"><![CDATA[SATA]]></category>

		<category domain="tag"><![CDATA[windows XP]]></category>

		<category domain="tag" nicename="windows-xp"><![CDATA[windows XP]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=435</guid>
<description></description>
<content:encoded><![CDATA[Не устанавливается windows xp на ноутбук? При установке вылетает в синий экран (BSOD) с ошибкой 0x7B?
Скорее всего, в биосе включен SATA в режиме <a rel="nofollox,noindex" href="http://ru.wikipedia.org/wiki/AHCI">AHCI</a>.

В windows XP отсутствует драйвер AHCI, поэтому, она вылетает с ошибкой при установке. В windows 7 такой драйвер есть, поэтому, все установится и будет работать нормально.

Так как же решить эту проблему?

<ul>
	<li>Просто отключить режим AHCI в биосе. Вряд-ли он вам понадобится на ноутбуке.</li>
	<li>Вшить драйвер AHCI в дистрибутив windows XP</li>
</ul>

Я выбрал первый способ - просто выключил AHCI в биосе и забыл о проблеме.

]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>435</wp:post_id>
<wp:post_date>2010-03-19 17:09:59</wp:post_date>
<wp:post_date_gmt>2010-03-19 12:09:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bsod-when-installing-windows-xp-on-notebook</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1269000601</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>4876</wp:comment_id>
<wp:comment_author><![CDATA[Евгений]]></wp:comment_author>
<wp:comment_author_email>fominok@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.162.101.11</wp:comment_author_IP>
<wp:comment_date>2011-02-07 17:34:13</wp:comment_date>
<wp:comment_date_gmt>2011-02-07 12:34:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибаааа работает))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>6153</wp:comment_id>
<wp:comment_author><![CDATA[rouble]]></wp:comment_author>
<wp:comment_author_email>rouble_292@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>79.172.35.37</wp:comment_author_IP>
<wp:comment_date>2011-03-25 15:32:51</wp:comment_date>
<wp:comment_date_gmt>2011-03-25 10:32:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Премного благодарен]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>9885</wp:comment_id>
<wp:comment_author><![CDATA[Sergio]]></wp:comment_author>
<wp:comment_author_email>greyzet2011@yandex.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.123.248.149</wp:comment_author_IP>
<wp:comment_date>2011-08-20 19:04:23</wp:comment_date>
<wp:comment_date_gmt>2011-08-20 14:04:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо большое!!!!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11698</wp:comment_id>
<wp:comment_author><![CDATA[Ivan]]></wp:comment_author>
<wp:comment_author_email>foxeg2008@mail.ru</wp:comment_author_email>
<wp:comment_author_url>http://wind7.ru</wp:comment_author_url>
<wp:comment_author_IP>79.134.29.162</wp:comment_author_IP>
<wp:comment_date>2011-10-14 20:32:59</wp:comment_date>
<wp:comment_date_gmt>2011-10-14 15:32:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо. Помогло]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Как я верстаю</title>
<link>http://torqueo.net/how-i-makes-html-templates/</link>
<pubDate>Fri, 19 Mar 2010 12:34:59 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[mod_rewrite]]></category>

		<category domain="tag" nicename="mod_rewrite"><![CDATA[mod_rewrite]]></category>

		<category domain="tag"><![CDATA[SSI]]></category>

		<category domain="tag" nicename="ssi"><![CDATA[SSI]]></category>

		<category domain="tag"><![CDATA[вёрстка]]></category>

		<category domain="tag" nicename="%d0%b2%d1%91%d1%80%d1%81%d1%82%d0%ba%d0%b0"><![CDATA[вёрстка]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=437</guid>
<description></description>
<content:encoded><![CDATA[Во время верстки очень удобно иметь возможность видеть сайт в целом - то есть ходить по ссылкам, отправлять формы. Очень удобно видеть структуру сайта так, как если бы он уже был разработан и находился в интернете

Но как это сделать? Как сделать так, чтобы это работало, не приносило неудобств и быстро интегрировалось программистами в разрабатываемое приложение?

<!--more-->

<h3>Вспомним Server Side Includes!</h3>
Да, здесь нам поможет SSI! Конечно, нам потребуется веб-сервер Apache, чтобы наша верстка работала, и еще кое что. В windows xp лучше всего воспользоваться <a rel="nofollow,noindex" href="http://denwer.ru">denwer'ом</a>, чтобы не было лишних головняков.

Так как же сделал я? Очень просто - я создал в каталоге www файл <em>index.html</em> и перенаправил в него все виртуальные запросы при помощи mod_rewrite. У меня получился вот такой .htaccess файл:
<pre><code class="apache">
&lt;IfModule mod_rewrite.c&gt;
    RewriteEngine On
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-l
    RewriteRule ^(.*)$ index.html/$1 [QSA,L]
&lt;/IfModule&gt;
AddType text/html .shtml
AddHandler server-parsed .shtml

Options +Includes</code></pre>
Как видно из листинга, я включил SSI и перенаправил все виртуальные запросы на index.html так, как если бы это была точка входа в приложение.

Дальше я создал папку /www/pages, в этой папке мы будем хранить все остальные страницы нашего сайта, которые будут встраиваться в контент-зону сайта, то есть текстовое наполнения нашего сайта.

Например, при запросе адреса http://example.com/how-to-rob-caravans, будет запрошена страница /www/pages/how-to-rob-caravans.shtml.
<h3>Как выглядит index.html?</h3>
Выглядит он достаточно просто:
<pre><code class="html">&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
        &lt;title&gt;Example&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;

        &lt;header&gt;header&lt;/header&gt;
        &lt;article&gt;
           &lt;!--#if expr="$REQUEST_URI = '/'" --&gt;
                &lt;!--#include virtual="/pages/mainpage.shtml" --&gt;
            &lt;!--#elif expr="$REQUEST_URI = '/how-to-rob-caravans'" --&gt;
                &lt;!--#include virtual="/pages/how-to-rob-caravans.shtml" --&gt;
            &lt;!--#else --&gt;
                &lt;h1&gt;404 Page Not Found!&lt;/h1&gt;
            &lt;!--#endif --&gt;
        &lt;/article&gt;
        &lt;footer&gt;footer&lt;/footer&gt;

    &lt;/body&gt;
&lt;/html&gt;</html></pre>

Видно, что логика маршрутизации запроса заложена в конструкции if-elif-else SSI - там мы просто выбираем, какой файл подключить при соответствующем запросе, почти так же, как в любом фреймворке работают правила маршрутизации.

Благодаря таким штукам, можно показывать клиенту сайт, так как он бы работал на продакшене. И самому так верстать гораздо удобнее :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>437</wp:post_id>
<wp:post_date>2010-03-19 17:34:59</wp:post_date>
<wp:post_date_gmt>2010-03-19 12:34:59</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-i-makes-html-templates</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1269002136</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>LibCanvas - фреймворк для работы с canvas</title>
<link>http://torqueo.net/libcanvas-framework/</link>
<pubDate>Thu, 08 Apr 2010 08:13:42 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category><![CDATA[mootools]]></category>

		<category domain="category" nicename="mootools"><![CDATA[mootools]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[canvas]]></category>

		<category domain="tag" nicename="canvas"><![CDATA[canvas]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=442</guid>
<description></description>
<content:encoded><![CDATA[Месяц назад я написал заметку "<a href="/client-technologies-perspectives-in-web/">Перспективы клиентских технологий в веб</a>", о том, как на мой взгляд будут развиваться клиентские технологии. Вот выдержка из заметки:

<blockquote>Как думаю я, не будет хватать именно какого-то фреймворка для построения интерфейсов, лайотов и создания векторной анимации.

Такой фреймворк скорее всего появится, и будет основан на технологиях Javascript, SVG и canvas. Возможно, он уже разрабатывается кем-то, но вот я пока об этом не знаю.</blockquote>

Сегодня на хабре один человек разместил статью <a rel="noindex,nofollow" href="http://habrahabr.ru/blogs/javascript/90339/">http://habrahabr.ru/blogs/javascript/90339/</a>, в которой он описал разрабатываемый их фреймворк как раз для тех целей, которые описывались мною в заметке про перспективы клиентских технологий. Так что я был прав в том, куда стремится веб.
Продолжаю следить за сабжем.

Скачать библиотеку LibCanvas можно здесь: <a rel="noindex,nofollow" href="http://code.google.com/p/libcanvas/">http://code.google.com/p/libcanvas/</a>

]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>442</wp:post_id>
<wp:post_date>2010-04-08 13:13:42</wp:post_date>
<wp:post_date_gmt>2010-04-08 08:13:42</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>libcanvas-framework</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1270714498</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1337</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2010-04-12 12:29:33</wp:comment_date>
<wp:comment_date_gmt>2010-04-12 07:29:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну если на пошло IECanvas уже как 3 года есть - вопрос в том что он работает исключительно медленно. Как мне кажется проблема в том что мы обладаем относительной фанатичностью относительно технологий : ты за чисто браузерные технологии , а я за флеш . Мне думается истина лежит где-то в середине =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1347</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-04-13 14:15:39</wp:comment_date>
<wp:comment_date_gmt>2010-04-13 09:15:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну все равно, вот смотри, разработчики <a href="http://www.inatux.com/article?r=html5-vs-flash-open-letter-to-adobe" rel="nofollow">HTML5 против Adobe</a>. Начинают жать на флэш. Так что я прав в том, куда всё движется. Вот, если интересно, русская статья с комментариями: <a href="http://habrahabr.ru/blogs/adobe/90754/" rel="nofollow">http://habrahabr.ru/blogs/adobe/90754/</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1337</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1529</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-05-07 21:45:22</wp:comment_date>
<wp:comment_date_gmt>2010-05-07 16:45:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Веб движется сразу во всех направлениях, вот в чём фишка ) Библиотеки пишутся всяческие (на том же Гитхабе посмотреть - завалы). Вопрос в том чем действительно будут пользоваться, не забудут ли эту библиотеку через пару месяцев.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1622</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2010-05-21 10:32:32</wp:comment_date>
<wp:comment_date_gmt>2010-05-21 05:32:32</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Хм ... Насколько мне помнится кто-то из адоба заявлял что флеш не будет против HTML5. Кстати в том же HTML5 про веб камеры и микрофоны ничего нет =)))) Да и того же P2P между юзерами нет ( хотя вроде как были слухи что в HTTP/2 будет что-то типа П2п для доставки контента ) . Вообще что будет покажет времяе =))))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1347</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Путешествие по Губке Менгера. Javascript + Canvas.</title>
<link>http://torqueo.net/menger-sponge-traveling/</link>
<pubDate>Sat, 10 Apr 2010 11:29:33 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[canvas]]></category>

		<category domain="tag" nicename="canvas"><![CDATA[canvas]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=446</guid>
<description></description>
<content:encoded><![CDATA[Наткнулся на пост у блоггера <a rel="noindex,nofollow" href="http://avva.livejournal.com/2209897.html">avva</a>:
<blockquote><a rel="noindex,nofollow" href="http://www.p01.org/releases/512b_jspongy/jspongy.htm">Совершенно замечательное демо</a> трехмерного путешествия <a rel="noindex,nofollow" href="http://ru.wikipedia.org/wiki/%D0%93%D1%83%D0%B1%D0%BA%D0%B0_%D0%9C%D0%B5%D0%BD%D0%B3%D0%B5%D1%80%D0%B0">по губке Менгера</a>. Смотреть в любом браузере, кроме Эксплорера. Весь код укладывается в 512 байт!

Там используется интересный алгоритм, который называется ray-marching. Должно быть не очень сложным и поучительным упражнением сделать unobfuscation всему этому коду и подробно объяснить, как он работает.</blockquote>

Я рекомендую смотреть демо в Google Chrome или Opera. Особенно рекомендую почитать <a rel="noindex,nofollow" href="http://avva.livejournal.com/2209897.html">комментарии к записи</a> - там рассказывают, как работает код.

Кода всего ничего (512 байт):
<pre id="line1"><code class="html">&lt;<span class="start-tag">body</span><span class="attribute-name"> bgcolor</span>=<span class="attribute-value">0 </span><span class="attribute-name">text</span>=<span class="attribute-value">snow </span><span class="attribute-name">onload</span>=<span class="attribute-value">N=[K=R.getContext('2d')];for(t=B=127,I=K.getImageData(0,0,q=64,q);t--;$=Math.cos)N[t]=t/43&amp;1;setInterval("t++;for(i=y=-1;y&lt;1;y+=A)for(x=-1;x&lt;1;x+=A=1/32,I.data[i+=4]=h+h)for(m=C=$(a=t/86),S=$(a+8),c=$(b=t/B),s=$(b+8),u=x*C+S,v=y*c-u*s,u=u*c+y*s,w=C-x*S,X=q+9*$(a+b),Y=q+9*$(b-a),Z=t,h=B;--h&amp;&amp;m&lt;q;X+=u,Y+=v,Z+=w)for(m=1;N[X*m&amp;B]+N[Y*m&amp;B]+N[Z*m&amp;B]&lt;2&amp;&amp;m&lt;q;m*=3);K.putImageData(I,0,0)",9)</span>&gt;JSpongy by p01&lt;<span class="start-tag">br</span>&gt;&lt;<span class="start-tag">canvas</span><span class="attribute-name"> id</span>=<span class="attribute-value">R </span><span class="attribute-name">width</span>=<span class="attribute-value">64 </span><span class="attribute-name">height</span>=<span class="attribute-value">64 </span><span class="attribute-name">style</span>=<span class="attribute-value">width:3in;height:3in;background:#fff</span>&gt;</code></pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>446</wp:post_id>
<wp:post_date>2010-04-10 16:29:33</wp:post_date>
<wp:post_date_gmt>2010-04-10 11:29:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>menger-sponge-traveling</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1270899392</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Когда таги не работают</title>
<link>http://torqueo.net/when-tags-not-working-as-expected/</link>
<pubDate>Wed, 21 Apr 2010 15:52:12 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[категоризация]]></category>

		<category domain="tag" nicename="%d0%ba%d0%b0%d1%82%d0%b5%d0%b3%d0%be%d1%80%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f"><![CDATA[категоризация]]></category>

		<category domain="tag"><![CDATA[ортогональность]]></category>

		<category domain="tag" nicename="%d0%be%d1%80%d1%82%d0%be%d0%b3%d0%be%d0%bd%d0%b0%d0%bb%d1%8c%d0%bd%d0%be%d1%81%d1%82%d1%8c"><![CDATA[ортогональность]]></category>

		<category domain="tag"><![CDATA[таги]]></category>

		<category domain="tag" nicename="%d1%82%d0%b0%d0%b3%d0%b8"><![CDATA[таги]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=453</guid>
<description></description>
<content:encoded><![CDATA[<img src="http://torqueo.net/wp-content/uploads/2010/04/tags.jpg" alt="tags" width="250" height="244" style="float: left; margin: 0 15px 0 0" />Поговорим о тагах (метках), как о способе категоризации контента. Как известно, тагами помечают какие-либо сущности, то есть привязывают к некой категории, как например я помечаю тагами посты в этом блоге. Если вы нажмете на какой-либо таг, то увидите список постов по теме. Всё работает и, достаточно удобно.

Однако, категоризация может не работать. Часто, разработчики включают систему категоризации, основанную на тагах, как некую модную фишку, ставшую по-сути стандартом де-факто для современных приложений, не подозревая, что это может не работать на благо.

Почему так происходит? Всё потому, что разработчики отдают "власть народу", и пользователи на сайте получают в свои руки инструмент для категоризации. Но вот беда, обычные люди не задумываются, как работают таги - люди просто не соблюдают принцип ортогональности, поэтому, как результат, мы можем получить примерно следующее:
<ul>
	<li>Javascript</li>
	<li>JS</li>
	<li>Java Script</li>
</ul>
<!--more-->

Все эти 3 варианта будут означать одно и то же - то, что помеченный, к примеру, пост касается языка Javascript. Теперь, если вы нажмёте, например на таг "JS", то вы можете и не увидеть остальные посты, касающиеся языка Javascript, которые помечены остальными двумя тагами, но не были помечены тагом "JS".

Еще хуже дело обстоит тогда, когда пользователи могут иметь различные мнения, к какому тагу относится некоторый контент. Приведу пример. Предствим, что у нас имеется сайт, на котором мы продаем музыкальные альбомы и пользователи могут отнести альбом к тому или иному стилю, отметив его тагами. Один человек будет относить стиль альбома к тагу "Rap", второй к "R'n'B", третий, может вообще отнести его, например, к фанку :) В общем - ничего хорошего не выйдет, и никакие выпадающие подсказки с уже существующими в системе тагами тут не помогут.

Так как же исправить ситуацию? Сразу могу сказать, что только одним способом - убрав для пользователей возможность категоризовать контент сайта при помощи тагов. Я уверен - этим должна заниматься команда сайта, но никак не пользователи. Иначе, всё, что мы получим - это бесполезное облако тагов и некачественно категоризованный контент. Чтобы сделать навигацию, которая заменит нам таги в таких случаях, нужно воспользоваться системой поиска, это будет куда более гибкий и удобный инструмент.

Итак, подведем итоги:
<ol>
	<li>Категоризация контента тагами, задача не пользователя. Если, всё же вы на свой риск хотите отдать этот инструмент пользователям, то позаботьтесь о постмодерации тагов, а то получится примерно как ситуация с выбором школы на Одноклассниках, когда могут существовать несколько школ с одинаковым номером, но написанным по-разному.</li>
	<li>Таги должны быть ортогональными - не должно быть одновременно тагов, как например, "JS" и "Javascript".</li>
	<li>Если у команды проекта нет ресурсов на самостоятельную разметку контента тагами, то лучше сделать удобный поиск с поддержкой морфологии и релевантностью - это более удобный и понятный пользователю инструмент. Можно воспользоваться отличным движком Sphinx.</li>
</ol>
Вот вроде и всё. Спешу откланяться.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>453</wp:post_id>
<wp:post_date>2010-04-21 20:52:12</wp:post_date>
<wp:post_date_gmt>2010-04-21 15:52:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>when-tags-not-working-as-expected</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1271930298</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1530</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-05-07 21:50:39</wp:comment_date>
<wp:comment_date_gmt>2010-05-07 16:50:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вот мои пять копеек. Категоризация тегами и категориями, вообще говоря, разные типы категоризации, но оба соответствуют человеческому когнитивному аппарату: категории соответствуют ИП-категориям, теги соответствуют категориям типа "фамильное сходство". На больших сайтах типа Хабра, когда надо получить выборку статей по определённой теме, теги очень хорошо работают, т.к. на каждую мелочь блог не создашь. Да, есть несовпадения, есть банальные опечатки. No one is perfect. Но эта схема работает.

Поиск тоже дело хорошее, но это другой инструмент, и одно другому не мешает.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>tags</title>
<link>http://torqueo.net/when-tags-not-working-as-expected/tags/</link>
<pubDate>Thu, 22 Apr 2010 09:27:53 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2010/04/tags.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>456</wp:post_id>
<wp:post_date>2010-04-22 14:27:53</wp:post_date>
<wp:post_date_gmt>2010-04-22 09:27:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tags</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>453</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2010/04/tags.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"250";s:6:"height";s:3:"244";s:14:"hwstring_small";s:22:"height='96' width='98'";s:4:"file";s:16:"2010/04/tags.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"tags-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/04/tags.jpg</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Ёбаный врот - страна обломов</title>
<link>http://torqueo.net/%d1%91%d0%b1%d0%b0%d0%bd%d1%8b%d0%b9-%d0%b2%d1%80%d0%be%d1%82-%d1%81%d1%82%d1%80%d0%b0%d0%bd%d0%b0-%d0%be%d0%b1%d0%bb%d0%be%d0%bc%d0%be%d0%b2/</link>
<pubDate>Sun, 30 May 2010 18:50:46 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=460</guid>
<description></description>
<content:encoded><![CDATA[<ul>
	<li>Собрались на сплав - всё отменилось из-за погоды, хотя погода была заебись, но за день до того мы не смогли это предусмотреть</li>
	<li>Друзья позвали на тусу на озере - но она отменилась из-за того, что была договоренность ехать на сплав</li>
	<li>Хотя сплав и туса на озере обломались, друзья всеже позвали на страйкбол - но он обломался, потому что всплыла работа</li>
	<li>Сайнт заебал ебаной рекламой в твиттере</li>
	<li>Денег нихуя нет, но зато есть пиво</li>
	<li>Завтра работа, ёбаный врот.</li>
</ul>
Надеюсь, мой другой сплав через неделю на все выходные сбудется.

x]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>460</wp:post_id>
<wp:post_date>2010-05-30 23:50:46</wp:post_date>
<wp:post_date_gmt>2010-05-30 18:50:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>%d1%91%d0%b1%d0%b0%d0%bd%d1%8b%d0%b9-%d0%b2%d1%80%d0%be%d1%82-%d1%81%d1%82%d1%80%d0%b0%d0%bd%d0%b0-%d0%be%d0%b1%d0%bb%d0%be%d0%bc%d0%be%d0%b2</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1275245608</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1659</wp:comment_id>
<wp:comment_author><![CDATA[Homoz]]></wp:comment_author>
<wp:comment_author_email>safrio@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://safrio.ru</wp:comment_author_url>
<wp:comment_author_IP>95.30.195.24</wp:comment_author_IP>
<wp:comment_date>2010-05-31 05:22:41</wp:comment_date>
<wp:comment_date_gmt>2010-05-31 00:22:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Потопи уже ебаную работу, все равно даже нервы не окупает)
У меня пиво появлялось ровно в переломных моментах. Создавалось ощущения что оно разумно))
Ну и китайские охотники не гоняются за несколькими зайцами, следуя феншую]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1663</wp:comment_id>
<wp:comment_author><![CDATA[lcf]]></wp:comment_author>
<wp:comment_author_email>lcfsoft@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://lcf.name</wp:comment_author_url>
<wp:comment_author_IP>94.233.203.156</wp:comment_author_IP>
<wp:comment_date>2010-05-31 15:57:58</wp:comment_date>
<wp:comment_date_gmt>2010-05-31 10:57:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А английская версия будет?.. мыхых.

(надеюсь этот пост скорее позорное исключение из правил и вообще написал его кто-то другой пока ты отвернулся...)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1678</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2010-06-22 17:58:22</wp:comment_date>
<wp:comment_date_gmt>2010-06-22 12:58:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да лана тебе реклама =)) Я пытаюсь в тему рекламу собирать =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Дедлайн</title>
<link>http://torqueo.net/deadline-062010/</link>
<pubDate>Thu, 17 Jun 2010 18:01:03 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Разработка проектов]]></category>

		<category domain="category" nicename="%d1%80%d0%b0%d0%b7%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b0-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%be%d0%b2"><![CDATA[Разработка проектов]]></category>

		<category domain="tag"><![CDATA[Жизненное]]></category>

		<category domain="tag" nicename="%d0%b6%d0%b8%d0%b7%d0%bd%d0%b5%d0%bd%d0%bd%d0%be%d0%b5"><![CDATA[Жизненное]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=465</guid>
<description></description>
<content:encoded><![CDATA[У меня дедлайн до 30-го июня 2010. Грустно и весело одновременно.

ЗЫ: Кстати, активно красноглажу. Перевел всю разработку под linux. Чертовски удобно. Почему я не сделал это 5 лет назад? (ах да, потому что инет был по медленному модему, слабенький комп и маловато энтузиазма).]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>465</wp:post_id>
<wp:post_date>2010-06-17 23:01:03</wp:post_date>
<wp:post_date_gmt>2010-06-17 18:01:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>deadline-062010</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1276798403</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d0%b4%d0%b5%d0%b4%d0%bb%d0%b0%d0%b9%d0%bd</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1673</wp:comment_id>
<wp:comment_author><![CDATA[Georgy]]></wp:comment_author>
<wp:comment_author_email>georgy.turevich@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.134.34.68</wp:comment_author_IP>
<wp:comment_date>2010-06-20 21:45:45</wp:comment_date>
<wp:comment_date_gmt>2010-06-20 16:45:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Мне тоже интересен переход.

У вас и IDE и скрипты на linux-машине?

Какие удобства вы заметили?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1677</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2010-06-22 17:51:01</wp:comment_date>
<wp:comment_date_gmt>2010-06-22 12:51:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вот вот я же говорил !!! =)))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1695</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-06-29 12:34:26</wp:comment_date>
<wp:comment_date_gmt>2010-06-29 07:34:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну во-первых, самое главное для меня - можно без проблем установить любое ПО - захотел поиграться Nodejs - пожалуйста, захотел Tokyo Tyrant - пожалуйста. Плюс, я всегда настраиваю среду так, как бы она выглядела на продакшен-сервере, это очень удобно.
Для разработчика ничего удобнее нет. Я бы вообще слез с винды, но мешает фотошоп - он мне нужен, я часто верстаю и работаю с изображениями. Был бы у меня mac - было бы другое дело - там с фотошопом все в порядке).

И да, и IDE и скрипты на linux машине.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1673</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1744</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-07-20 12:59:11</wp:comment_date>
<wp:comment_date_gmt>2010-07-20 07:59:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Здорово. В качестве IDE Эклипс, видимо (или его потомки)?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1769</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.30.158.51</wp:comment_author_IP>
<wp:comment_date>2010-07-25 09:34:28</wp:comment_date>
<wp:comment_date_gmt>2010-07-25 04:34:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Неа, у меня netbeans  и на win и на linux.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1744</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2752</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-11-12 15:34:36</wp:comment_date>
<wp:comment_date_gmt>2010-11-12 10:34:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Просто непривычен он для меня.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2749</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2749</wp:comment_id>
<wp:comment_author><![CDATA[Maxim]]></wp:comment_author>
<wp:comment_author_email>msvirid@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>109.195.66.2</wp:comment_author_IP>
<wp:comment_date>2010-11-12 12:28:30</wp:comment_date>
<wp:comment_date_gmt>2010-11-12 07:28:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А чем GIMP не устраивает?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1695</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Книга Олега Тинькова "Я такой как все"</title>
<link>http://torqueo.net/oleg-tinkoff-book/</link>
<pubDate>Tue, 29 Jun 2010 07:47:47 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=471</guid>
<description></description>
<content:encoded><![CDATA[У известного предпринимателя <a href="http://tinkov.com/">Олега Тинькова</a> вышла классная автобиографическая книга о его становлении :) Я прочитал одну главу, выложенную на сайте - очень захватывает. Тиньков вообще молодец мужик. Вот хочу купить книгу в электронном виде, жалко только что нет оплаты вебманями или ЯДом - заплатить можно только кредиткой или SMS. Надо чето придумать, ибо кредитной карты пока тоже нет (да, вот такой вот я лох).

Зазырить инфо о книге можно тут: <a href="http://tinkov.com/">http://tinkov.com/</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>471</wp:post_id>
<wp:post_date>2010-06-29 12:47:47</wp:post_date>
<wp:post_date_gmt>2010-06-29 07:47:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>oleg-tinkoff-book</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1277797740</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1705</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2010-07-07 18:50:40</wp:comment_date>
<wp:comment_date_gmt>2010-07-07 13:50:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Есть такая штука виртуальная виза , в КИВИ есть и ещё в каких-то терминалах есть. Я вот так разжился визой инстант - ихмо несколько геморная фигня.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1743</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-07-20 12:55:03</wp:comment_date>
<wp:comment_date_gmt>2010-07-20 07:55:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я вот тоже подумываю купить. Правда наверное всё таки в бумаге.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Вернулся с отдыха</title>
<link>http://torqueo.net/returned-from-sea/</link>
<pubDate>Tue, 27 Jul 2010 16:07:56 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/%d0%b2%d0%b5%d1%80%d0%bd%d1%83%d0%bb%d1%81%d1%8f-%d1%81-%d0%be%d1%82%d0%b4%d1%8b%d1%85%d0%b0/</guid>
<description></description>
<content:encoded><![CDATA[<div style="overflow: hidden">
<img style="float:left;margin: 0 15px 0 0;clear:both;" title="rest" src="http://torqueo.net/wp-content/uploads/2010/07/rest.jpg" alt="rest" width="300" height="225" />Пару дней назад приехал с моря. Щас заново учусь работать и, так сказать, жить. Отдохнул отлично, пару раз сплавлялся по горной реке, разок "повезло" перевернуться на байдарке, хапнул экстрима - мама не горюй. Но понравилось.
Познакомился с кучей народу из разных стран, некоторые приглашают в гости :)
</div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>474</wp:post_id>
<wp:post_date>2010-07-27 21:07:56</wp:post_date>
<wp:post_date_gmt>2010-07-27 16:07:56</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>returned-from-sea</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1280251891</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d0%b2%d0%b5%d1%80%d0%bd%d1%83%d0%bb%d1%81%d1%8f-%d1%81-%d0%be%d1%82%d0%b4%d1%8b%d1%85%d0%b0</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>rest</title>
<link>http://torqueo.net/returned-from-sea/rest/</link>
<pubDate>Tue, 27 Jul 2010 16:12:06 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2010/07/rest.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>475</wp:post_id>
<wp:post_date>2010-07-27 21:12:06</wp:post_date>
<wp:post_date_gmt>2010-07-27 16:12:06</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rest</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>474</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2010/07/rest.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"225";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:16:"2010/07/rest.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"rest-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/07/rest.jpg</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>А как вы проверяете mime-type файлов в php?</title>
<link>http://torqueo.net/mime-type-php/</link>
<pubDate>Tue, 03 Aug 2010 14:13:21 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[apache2]]></category>

		<category domain="tag" nicename="apache2"><![CDATA[apache2]]></category>

		<category domain="tag"><![CDATA[http]]></category>

		<category domain="tag" nicename="http"><![CDATA[http]]></category>

		<category domain="tag"><![CDATA[mime magic]]></category>

		<category domain="tag" nicename="mime-magic"><![CDATA[mime magic]]></category>

		<category domain="tag"><![CDATA[mime-type]]></category>

		<category domain="tag" nicename="mime-type"><![CDATA[mime-type]]></category>

		<category domain="tag"><![CDATA[php]]></category>

		<category domain="tag" nicename="php"><![CDATA[php]]></category>

		<category domain="tag"><![CDATA[zend framework]]></category>

		<category domain="tag" nicename="zend-framework"><![CDATA[zend framework]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=481</guid>
<description></description>
<content:encoded><![CDATA[Как известно, все загружаемые на сервер файлы нужно проверять на соответствие разрешенным <em>mime-type</em>. Большинство программистов проверяют это соответствие, сверяясь с mime-типом из <em>$_FILES</em>, но этот mime-тип берется из заголовков <em>HTTP </em>запроса и может быть определен неправильно, т.к. определяет его браузер. У меня например, некоторые jpeg-файлы определяются как application/octet-stream и естественно, скрипт их не принимает. К тому же решение построенное на проверке mime-типа из HTTP заголовка потенциально опасно, т.к. заголовки можно подделать и указать любой mime-тип.

Как же сделать правильно?

Нужно установить расширение PECL, которое называется Fileinfo. Это расширение является заменой более старого расширения mime_magic. Валидатор MimeType в Zend Framework использует именно Fileinfo, как наиболее приоритетный способ определения mime-типа. Fileinfo определяет mime-тип по специальным сигнатурам, которые есть внутри файла.

Другой способ состоит в том, чтобы переложить определение mime-типа на веб-сервер. У веб-сервера Apache есть специальный файл magic с сигнатурами, с помощью которого он определяет, какого mime-типа является загружаемый файл, и устанавливает это значение в заголовок. Таким образом, в php скрипт придет верный mime-тип.

Для того, чтобы, Apache определял mime-тип файла, нужно включить модуль <em>mod_mime_magic</em>.

<em>Небольшой офф: не забывайте так же проверять тип файлов еще и по расширению.</em>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>481</wp:post_id>
<wp:post_date>2010-08-03 19:13:21</wp:post_date>
<wp:post_date_gmt>2010-08-03 14:13:21</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>mime-type-php</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1282279355</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1788</wp:comment_id>
<wp:comment_author><![CDATA[demoriz]]></wp:comment_author>
<wp:comment_author_email>demoriz@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.demoriz.ru</wp:comment_author_url>
<wp:comment_author_IP>217.195.77.236</wp:comment_author_IP>
<wp:comment_date>2010-08-03 23:22:54</wp:comment_date>
<wp:comment_date_gmt>2010-08-03 18:22:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[ 
Результат выполнения данного примера:

image/gif
text/plain]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1789</wp:comment_id>
<wp:comment_author><![CDATA[demoriz]]></wp:comment_author>
<wp:comment_author_email>demoriz@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.demoriz.ru</wp:comment_author_url>
<wp:comment_author_IP>217.195.77.236</wp:comment_author_IP>
<wp:comment_date>2010-08-03 23:24:10</wp:comment_date>
<wp:comment_date_gmt>2010-08-03 18:24:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[предыдущий пост корявым вышел...

echo mime_content_type('php.gif') . "\n";
echo mime_content_type('test.php');
 
Результат выполнения данного примера:

image/gif
text/plain]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1791</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.30.185.164</wp:comment_author_IP>
<wp:comment_date>2010-08-04 01:05:59</wp:comment_date>
<wp:comment_date_gmt>2010-08-03 20:05:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Возможно, всё правильно. PHP файл вполне может так определиться - это уж смотря как в файле с сигнатурами указано. Стоит проверить файл сигнатур.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1789</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1794</wp:comment_id>
<wp:comment_author><![CDATA[psyhomo]]></wp:comment_author>
<wp:comment_author_email>psyhomo@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>90.157.9.35</wp:comment_author_IP>
<wp:comment_date>2010-08-05 14:11:12</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 09:11:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А почему просто не использовать юниксовую утилиту file?
типа: "" получается вполне кошерно и результативно, без всяких дополнительно подключаемых классов в php..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1791</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1795</wp:comment_id>
<wp:comment_author><![CDATA[psyhomo]]></wp:comment_author>
<wp:comment_author_email>psyhomo@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>90.157.9.35</wp:comment_author_IP>
<wp:comment_date>2010-08-05 14:12:46</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 09:12:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[парсер - лох.. вот код: http://pastie.org/1076976]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1794</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1796</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-08-05 16:25:09</wp:comment_date>
<wp:comment_date_gmt>2010-08-05 11:25:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Как альтернативу - почему бы нет, если не нужна кроссплатформенность.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1794</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Взять интервью у Вадика как владельца имагаза</title>
<link>http://torqueo.net/%d0%b2%d0%b7%d1%8f%d1%82%d1%8c-%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%b2%d1%8c%d1%8e-%d1%83-%d0%b2%d0%b0%d0%b4%d0%b8%d0%ba%d0%b0-%d0%ba%d0%b0%d0%ba-%d0%b2%d0%bb%d0%b0%d0%b4%d0%b5%d0%bb%d1%8c%d1%86%d0%b0/</link>
<pubDate>Fri, 13 Aug 2010 16:23:24 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=486</guid>
<description></description>
<content:encoded><![CDATA[<ol>
	<li>Расскажи о своем бизнесе, которым ты владеешь?</li>
	<li>Как вообще появилась идея открыть свой интернет-магазин?</li>
	<li>А сколько денег вложил в запуск?</li>
	<li>Не было страшно, а вдруг затея не получится?</li>
	<li>Если бы не получилось - чем бы ты занимался сейчас?</li>
	<li>Расскажи про первый заказ.</li>
	<li>Когда ты запустил магазин, ты работал где-либо еще?</li>
	<li>Сколько времени прошло с тех пор, когда ты стал работать только на свой бизнес?</li>
	<li>Сейчас твой бизнес растет? Как сказался кризис?</li>
	<li>Учитывая, что у тебя интернет-магазин по продаже цветов, то в какие дни обеспечиваются наибольшие продажи? (Хотя я, кажется, догадываюсь)</li>
	<li>Расскажи про курьёзы в работе, если таковые были (про голубых которые слали друг-другу цветы)</li>
	<li>Используете покупной движок для интернет-магазина, или самописный? Есть штатные программисты?</li>
</ol>
Это, возможно, не все вопросы. Напиши мне достаточно развернутые ответы на них, если хочешь - можешь добавить свои вопросы и ответить на них. Потом то, что получится я обработаю, добавлю еще вопросов (меня интересует про реселлеров/дилеров) и с тобой согласуем, потом выложим.

спросить как реализоано - плат. системы, язык и т.п.

leader@perfect-flowers.ru]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>486</wp:post_id>
<wp:post_date>2010-08-13 21:23:24</wp:post_date>
<wp:post_date_gmt>2010-08-13 16:23:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>%d0%b2%d0%b7%d1%8f%d1%82%d1%8c-%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%b2%d1%8c%d1%8e-%d1%83-%d0%b2%d0%b0%d0%b4%d0%b8%d0%ba%d0%b0-%d0%ba%d0%b0%d0%ba-%d0%b2%d0%bb%d0%b0%d0%b4%d0%b5%d0%bb%d1%8c%d1%86%d0%b0</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1282051014</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Установка MongoDB для Ubuntu 10.04 из пакета</title>
<link>http://torqueo.net/installing-mongodb-for-ubuntu-1004-from-deb-package/</link>
<pubDate>Tue, 17 Aug 2010 08:10:11 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[MongoDB]]></category>

		<category domain="tag" nicename="mongodb"><![CDATA[MongoDB]]></category>

		<category domain="tag"><![CDATA[Ubuntu 10.04]]></category>

		<category domain="tag" nicename="ubuntu-1004"><![CDATA[Ubuntu 10.04]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=493</guid>
<description></description>
<content:encoded><![CDATA[MongoDB можно собрать вручную, а можно и установить из пакета. Я предпочитаю последнее, так как это гораздо проще и занимает меньше времени. К тому же, нам не нужно добавлять init.d скрипты - все добавится само.

Сначала добавим репозиторий в sources.list. Откроем файл:
<pre><code class="no-highlight">sudo gedit /etc/apt/sources.list</code></pre>
и добавим в конец файла строку:
<pre><code class="no-highlight">deb http://downloads.mongodb.org/distros/ubuntu 10.4 10gen</code></pre>
Затем, добавим ключ при помощи следующей команды:

<pre><code class="no-highlight">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10</code></pre>

И обновим кэш:
<pre><code class="no-highlight">sudo aptitude update</code></pre>
Всё. Теперь тупо ставим mongoDB из пакета:
<pre><code class="no-highlight">sudo aptitude install mongodb-stable</code></pre>
После установки, проверим, все ли установилось. Для этого в консоли можно запустить mongo-shell:
<pre><code class="no-highlight">mongo</code></pre>
Дальше можно поменять <em>dbpath</em> в конфиге и указать место, где у вас хранится база данных. Не забудьте сделать эту папку доступной для записи юзеру mongodb.
<pre><code class="no-highlight">sudo gedit /etc/mongodb.conf</code></pre>
После редактирования конфига перезапустим mongod:
<pre><code class="no-highlight">sudo service mongodb restart</pre></pre>
Вот вроде бы и все. Дополнительную информацию смотрите здесь: <a href="http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages">http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>493</wp:post_id>
<wp:post_date>2010-08-17 13:10:11</wp:post_date>
<wp:post_date_gmt>2010-08-17 08:10:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>installing-mongodb-for-ubuntu-1004-from-deb-package</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1282132257</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Установка Ruby и RoR на Ubuntu 10.04</title>
<link>http://torqueo.net/install-ruby-and-ror-on-ubuntu-1004/</link>
<pubDate>Wed, 18 Aug 2010 11:42:09 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag"><![CDATA[Ubuntu 10.04]]></category>

		<category domain="tag" nicename="ubuntu-1004"><![CDATA[Ubuntu 10.04]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=501</guid>
<description></description>
<content:encoded><![CDATA[Если вы используете Ubuntu 10.04 или 9.10, то следующие шаги по установке будут одинаковы для той и другой версии ОС. Чтобы установить Ruby on Rails, сначала вам нужно установить некоторые примочки, а так же сам Ruby.

Можно установить Ruby из репозитория, либо из исходного кода. Чтобы установить Ruby из репозитория, наберите в терминале следующую строку:
  
<pre><code class="no-highlight">$ sudo apt-get install ruby-full build-essential</code></pre>

Если же вы хотите установить из исходников, то сначала нужно установить следующие пакеты:

<pre><code class="no-highlight">$ sudo apt-get install build-essential libssl-dev libreadline5-dev zlib1g-dev</code></pre>

Теперь вам нужно скачать архив с исходными кодами Ruby:

<pre><code class="no-highlight">$ wget ftp://ftp.ruby-lang.org/pub/ruby/stable-snapshot.tar.gz</code></pre>

Разархивируем файлы:

<pre><code class="no-highlight">tar xzf stable-snapshot.tar.gz</code></pre>

Компилируем и устанавливаем Ruby:

<pre><code class="no-highlight">$ cd ruby/
$ ./configure
$ make
$ sudo make install</code></pre>

Теперь запустите в консоли команду irb, и если вы не увидите никаких ошибок - поздравляю, Ruby установился успешно.

Перед тем, как установить Rails, вам нужно установить некоторые пакеты gem. Gem-пакеты - это упакованные приложения или библиотеки Ruby. Вы можете использовать команду gem чтобы установить различные бесплатные библиотеки, включая и Rails. Подробнее о rubygems <a href="http://docs.rubygems.org/read/book/1">можно почитать в мануале</a>.

Устанавливаем rubygems следующей командой:

<pre><code class="no-highlight">$ wget http://rubyforge.org/frs/download.php/45905/rubygems-1.3.2.tgz
$ tar xzvf rubygems-1.3.2.tgz
$ cd rubygems-1.3.2
$ sudo ruby setup.rb
$ sudo ln -s /usr/bin/gem1.8 /usr/bin/gem</code></pre>

Теперь при помощи команды gem устанавливаем Rails:

<pre><code class="no-highlight">$ sudo gem install rails</code></pre>

Эта команда установит последнюю версию Rails, но если вы хотите установить одну из предыдущих версий, например 2.2.2, то воспользуйтесь следующей командой:

<pre><code class="no-highlight">$ sudo gem install –version = 2.2.2 rails</code></pre>
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>501</wp:post_id>
<wp:post_date>2010-08-18 16:42:09</wp:post_date>
<wp:post_date_gmt>2010-08-18 11:42:09</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>install-ruby-and-ror-on-ubuntu-1004</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1309179421</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>New Mysql connector for Nodejs</title>
<link>http://torqueo.net/new-mysql-connector-for-nodejs/</link>
<pubDate>Thu, 19 Aug 2010 19:28:25 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=508</guid>
<description></description>
<content:encoded><![CDATA[Briefly: here's a new connector to Mysql for Nodejs. In my opinion, it gives great hope)
So, you can get more info at github page: <a href="http://github.com/Sannis/node-mysql-libmysqlclient">node-mysql-libmysqlclient</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>508</wp:post_id>
<wp:post_date>2010-08-20 00:28:25</wp:post_date>
<wp:post_date_gmt>2010-08-19 19:28:25</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>new-mysql-connector-for-nodejs</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1282246106</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1831</wp:comment_id>
<wp:comment_author><![CDATA[Sannis]]></wp:comment_author>
<wp:comment_author_email>efimovov@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://sannis.ru</wp:comment_author_url>
<wp:comment_author_IP>78.107.237.247</wp:comment_author_IP>
<wp:comment_date>2010-08-20 04:19:43</wp:comment_date>
<wp:comment_date_gmt>2010-08-19 23:19:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks! I'll be glad to any feedback, if you use this module.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>К вопросу об эффективности</title>
<link>http://torqueo.net/question-of-the-effectiveness-of/</link>
<pubDate>Fri, 27 Aug 2010 08:33:04 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category><![CDATA[рутина]]></category>

		<category domain="category" nicename="%d1%80%d1%83%d1%82%d0%b8%d0%bd%d0%b0"><![CDATA[рутина]]></category>

		<category domain="tag"><![CDATA[эффективность]]></category>

		<category domain="tag" nicename="%d1%8d%d1%84%d1%84%d0%b5%d0%ba%d1%82%d0%b8%d0%b2%d0%bd%d0%be%d1%81%d1%82%d1%8c"><![CDATA[эффективность]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=516</guid>
<description></description>
<content:encoded><![CDATA[Привет.
Сегодня моему коллеге понадобилось внести количество населения в городах России в его табличку cities в БД. Он, конечно, начал писать парсер Википедии, дабы добыть нужную информацию из страниц городов на сайте. То есть, он хотел обращаться к Википедии примерно так:
<pre>http://ru.wikipedia.org/wiki/&lt;название города&gt;</pre>
Он просто обращался по этому адресу при помощи php-функции file_get_contents(), но ему возвращалась 403 ошибка. Я обратился телнетом к странице и узнал, что Википедия требует присутствие заголовка User-Agent в HTTP-запросе.
Показал коллеге как юзать telnet и формировать HTTP-запрос =) Этим убедил его в том, что ему нужно юзать cURL. И он принялся писать свой мега-парсер.

Но лично я получил требуемый список городов за 5 минут. Как я это сделал? Я просто использовал более подходящие инструменты и шел легким путем.

Для начала я нашел HTML-табличку со списком городов и населением в них. Потом я скопировал эту табличку при помощи firebug в отдельный HTML-файл, подключил туда JQuery с Google CDN, и написал абсолютно тупой джаваскрипт, который обходил табличку и забирал оттуда нужные данные, а потом писал их в лог при помощи console.log(). Знаю, что можно было выполнить свой JS прямо на странице Википедии, но не знаю почему так не сделал :). Дальше осталось только передать эти данные коллеге.
Я потратил на это всего минут 5, мой коллега потратил бы на это половину рабочего дня, т.к. парсинг HTML-страниц в PHP это дело непростое, там нет <a href="http://mechanize.rubyforge.org/mechanize/">Mechanize</a>, к тому же Википедия может забанить по IP при парсинге кучи страниц :).

Вот как-то так, стоит всегда использовать подходящие инструменты и немного задействовать программерскую смекалку.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>516</wp:post_id>
<wp:post_date>2010-08-27 13:33:04</wp:post_date>
<wp:post_date_gmt>2010-08-27 08:33:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>question-of-the-effectiveness-of</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1282898255</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>%d0%ba-%d0%b2%d0%be%d0%bf%d1%80%d0%be%d1%81%d1%83-%d0%be%d0%b1-%d1%8d%d1%84%d1%84%d0%b5%d0%ba%d1%82%d0%b8%d0%b2%d0%bd%d0%be%d1%81%d1%82%d0%b8</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1853</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>83.167.29.99</wp:comment_author_IP>
<wp:comment_date>2010-08-27 17:15:02</wp:comment_date>
<wp:comment_date_gmt>2010-08-27 12:15:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Поделись , а =)а я тебе географическую привязку к городам и селам =)))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1854</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-08-27 17:40:56</wp:comment_date>
<wp:comment_date_gmt>2010-08-27 12:40:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Поделиться чем? Базой с городами?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1855</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>83.167.29.99</wp:comment_author_IP>
<wp:comment_date>2010-08-27 18:04:07</wp:comment_date>
<wp:comment_date_gmt>2010-08-27 13:04:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Города - численность.  ну и сурц конечно поглядеть =)) А вообще парсить хтмл страницы - это адская фигня . Но у меня тут типа "фреймворк" уже есть =))) Я их тут парсю часто =) Пожизни надо какую-нить фигню стырить где-нить =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1854</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1856</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-08-27 19:49:47</wp:comment_date>
<wp:comment_date_gmt>2010-08-27 14:49:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну базу могу дать. Сурц - че в нем смотреть, алгоритм действий я написал, делается это за 5 минут. Для парсинга могу посоветовать Perl или Ruby, для них есть Mechanize - ничего удобнее для парсинга я в жизни не видел. Посмотри сам.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1855</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1858</wp:comment_id>
<wp:comment_author><![CDATA[Georgy]]></wp:comment_author>
<wp:comment_author_email>georgy.turevich@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.134.34.64</wp:comment_author_IP>
<wp:comment_date>2010-08-28 02:03:46</wp:comment_date>
<wp:comment_date_gmt>2010-08-27 21:03:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[&gt; Для начала я нашел HTML-табличку со списком городов и населением в них

Так а зачем все эти махинации с jQuery. Данные уже получается готовые в таблице. Тупо в эксель вставить нельзя?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1874</wp:comment_id>
<wp:comment_author><![CDATA[Пульс]]></wp:comment_author>
<wp:comment_author_email>ashumankov@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>193.200.21.9</wp:comment_author_IP>
<wp:comment_date>2010-09-01 10:52:55</wp:comment_date>
<wp:comment_date_gmt>2010-09-01 05:52:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Можно в эксель как правильно заметили выше, но при условии, что копирование хтмл-таблицы происходило из IE :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1875</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-09-01 14:07:42</wp:comment_date>
<wp:comment_date_gmt>2010-09-01 09:07:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я пробовал из файрфокса - получилась бяка =) Про Ие не подумал.
Ну мой смособ все равно хорош - я там пробелы отрезал при помощи JS, и числа переводил из String сначала во Float, потом в Number. Т.е. вычисления какие-никакие были.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1874</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Интервью с владельцем интернет-магазина</title>
<link>http://torqueo.net/interviews-with-the-internet-shop-owner/</link>
<pubDate>Mon, 30 Aug 2010 07:34:46 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Разработка проектов]]></category>

		<category domain="category" nicename="%d1%80%d0%b0%d0%b7%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b0-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%be%d0%b2"><![CDATA[Разработка проектов]]></category>

		<category domain="tag"><![CDATA[бизнес]]></category>

		<category domain="tag" nicename="%d0%b1%d0%b8%d0%b7%d0%bd%d0%b5%d1%81"><![CDATA[бизнес]]></category>

		<category domain="tag"><![CDATA[интернет-магазин]]></category>

		<category domain="tag" nicename="%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%bd%d0%b5%d1%82-%d0%bc%d0%b0%d0%b3%d0%b0%d0%b7%d0%b8%d0%bd"><![CDATA[интернет-магазин]]></category>

		<category domain="tag"><![CDATA[интернет-торговля]]></category>

		<category domain="tag" nicename="%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%bd%d0%b5%d1%82-%d1%82%d0%be%d1%80%d0%b3%d0%be%d0%b2%d0%bb%d1%8f"><![CDATA[интернет-торговля]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=521</guid>
<description></description>
<content:encoded><![CDATA[<em>Недавно у меня появилась идея открыть интернет-магазин, поэтому сейчас я крайне интересуюсь всем, что связано с онлайн-торговлей, организацией продаж, логистикой и прочим. Но пока мне нечем похвастаться, поэтому представляю интервью с Вадимом, моим товарищем и бывшим коллегой, который сейчас является владельцем собственного интернет-магазина. Я не стал вдаваться в подробности - у всех есть свои секреты и лезть в них было бы глупо, я обошелся достаточно общими, но интересными для меня вопросами, надеюсь, интервью будет интересно и для вас, читателей сего блога.</em> И да, это не реклама - у меня нет рекламных постов в блоге.<!--more-->
<h3><strong>torqueo.net: </strong>Привет, Вадим, расскажи о бизнесе, которым ты владеешь?</h3>
Мы занимаемся своим любимым делом - дарим прекрасное прекрасным. Компания "Edelweiss" это международная служба доставки цветочных композиций на территории России, стран СНГ и Балтики. Главный офис компании находится в Екатеринбурге.
<h3><strong><strong>torqueo.net</strong>: </strong>Как вообще появилась идея открыть свой интернет-магазин?</h3>
Если бы кто-то, лет 5 назад, сказал мне, что я буду заниматься доставкой цветов, я бы, мягко говоря, удивился. Тогда я был web-программистом с десятилетним стажем, подавал надежды и  имел перспективы карьерного роста. Довелось как следует поработать и менеджером проектов и заместителем директора. В общем, свое направление  знал со всех сторон. Хотелось и дальше развиваться в этом направлении, но мне не давали покоя две вещи. Профессиональный век программиста (как и  многих it-спецов) весьма не долог, хотя бы в силу того, что у нашего  брата процесс проф.обучения непрерывен. В отличие от других отраслей технологии  сменяют друг друга со скоростью света и в силу возрастных особенностей (не говоря уже о психологических аспектах) годам к 40 +- пара лет,  человеку уже трудно угнаться за молодыми, постоянно быть впереди планеты  всей.
Мне тогда было 24 года, до айтишной пенсии еще далеко, но тем не менее  хотелось выстроить свою профессиональную деятельность так, что бы годам к 40-45 выйти не в тираж, а на заслуженную и обеспеченную пенсию.
Вторая вещь, которая сподвигла меня пересмотреть свои взгляды на  будущее, это упадок, который переживала отрасль. Горизонтальная карьера,  уготованная большинству специалистов, экономический кризис, бушеваший в то время, не  способствовали радужным перспективам. Всё это и заставило меня пересмотреть свои планы на будущее. Выход напрашивался сам собой -  открыть свое дело, стартап, в его первоначальном смысле. Мысль эта зрела  долго, но во что-то конкретное вырастать не спешила, т.к. не было самого  главного - идеи. Чем заняться? Ничего кроме как программировать и  организовывать команды под айтишные проекты я не умел. Не было и кадров, денег. Да по  сути не было ничего кроме желания что-то изменить в своей жизни.
Как всегда и бывает, все произошло случайно. Идею подарил друг за  кружкой пива. Откуда он ее взял, а главное почему я согласился, ни я, ни  он не знаем до сих пор. Однако, идея прижилась и не смотря на то, что в цветочном бизнесе я не  понимал вообще ничего, решил попытать счастья. Собрал команду, которая  состояла в основном из бывших программистов (хотя бывших не бывает), скопили немного денег  для старта и начали работать. Проанализировав высококонкурентный рынок, решили что наш богатый опыт сайтостроителей будет нашим главным оружием. В итоге общими усилиями был создан сайт <a href="http://perfect-flowers.ru/" target="_blank">http://perfect-flowers.ru</a>, которым мы заслуженно гордимся и считаем, что это лучший интернет-магазин среди ближайших конкурентов.
<h3><strong>torqueo.net: </strong>А сколько денег вложил в запуск?</h3>
Один из самых больных вопросов всех начинающих свое дело. Стартовый  капитал. Нам в этом плане повезло. Я сумел собрать команду, где каждый  участник владеет долей от бизнеса. Поэтому наши вложения это много-много труда и  накладные расходы, как-то открытие юр.лица и прочее. Сейчас уже не  вспомню, но деньгами мы вложили около 40 тысяч рублей.
<h3><strong>torqueo.net: </strong>Не было страшно, а вдруг затея не получится?</h3>
Нет, бояться было некогда. Да и в случае провала мир бы не рухнул.  Придумали бы другой проект =) Я вообще считаю, что если есть такой страх  в самом начале, браться за дело не стоит. Думать головой, хорошая команда, уверенность в своих силах и все получится.
<h3><strong>torqueo.net: </strong>Если бы не получилось - чем бы ты занимался сейчас?</h3>
Пути было бы два. Или открыл бы еще один проект или вернулся к своим корням программиста и ушел бы в enterprise.
<h3><strong>torqueo.net: </strong>Расскажи про первый заказ.</h3>
Как ни странно, это был заказ от друзей из Питера в Дзержинск. Вся  команда волновалась, следили за ходом выполенения заказа. Сделали все в  лучшем виде. Пользуясь случаем, передаю привет нашему первому клиенту Марине Автушко :)
<h3><strong>torqueo.net: </strong>Когда ты запустил магазин, ты работал где-либо еще?</h3>
Да, у всех членов команды была основная работа. Таким образом, у нас  были средства к существованию и некоторый запас для вложения в наше  дело. Такой подход самый безопасный в финансовом плане для участников проекта,  но в то же время самый долгий. Из-за того, что все работы велись в свободное время, этот процесс растянулся почти на 9 месяцев, если считать с момента возниконовения идеи.
<h3><strong>torqueo.net: </strong>Сколько времени прошло с тех пор, когда ты стал работать только на свой бизнес?</h3>
Как только открылся Edelweiss, я уволился с предыдущего места работы. Но  тем не менее, какое-то время я подрабатывал различными программерскими  заказами. Примерно еще около года.
<h3><strong>torqueo.net: </strong>Сейчас твой бизнес растет? Как сказался кризис?</h3>
Кризис затрнул всех участников рынка без исключения. Самые мелкие  закрылись, все остальные затянули пояса и пустили в ход резервы. Т.к.  самый тяжелый перирод кризиса пришелся на мертвый сезон в нашем деле - лето, а  нам тогда был только год и планировать такие вещи мы не умели, то пришлось очень тяжело. Но мы выдержали и, спустя некоторое время, даже  расширили географию доставки, что требует определенных вложений.
<h3><strong>torqueo.net: </strong>Учитывая, что у тебя интернет-магазин по продаже цветов, то в  какие дни обеспечиваются наибольшие продажи? (Хотя я, кажется,  догадываюсь)</h3>
Наш любимый праздник это 8 марта, чего уж тут скрывать =) Хотя для людей  из цветочного бизнеса это самые напряженные трудовые будни в году.
<h3><strong>torqueo.net: </strong>Расскажи про курьёзы в работе, если таковые были?</h3>
Курьезов как таковых не случалось, но бывают такие моменты, когда ты  понимаешь, что занимешься очень нужным делом. Иногда от того, насколько  качественно будет сделана наша работа зависит помирятся любящие люди или наоборот  поссорятся. Выйдет она за него или нет. Часто люди поручая нам доставить цветы, доверяют нам кусочек своей жизни.
<h3><strong>torqueo.net: </strong>Используете покупной движок для интернет-магазина, или самописный? Есть штатные программисты?</h3>
Весь проект написан с нуля для себя. В качестве движка использовалась  наработка нашего штатного программиста, которой он занимается уже  несколько лет. Как говорится, проверена в боях, испытана на себе. Кроме того,  использованы последние сторонние и собственные наработки в области  юзабилити, что делает магазин самым удобным среди конкурентов. За что я хочу сказать спасибо всей команде и отдельно нашему программисту Евгению Рябинину.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>521</wp:post_id>
<wp:post_date>2010-08-30 12:34:46</wp:post_date>
<wp:post_date_gmt>2010-08-30 07:34:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>interviews-with-the-internet-shop-owner</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1283153954</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1867</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-08-30 15:35:56</wp:comment_date>
<wp:comment_date_gmt>2010-08-30 10:35:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Отлично, очень интересно :) Цифр товарищ не хочет раскрывать, насколько я понимаю. А жаль, было бы интересно.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1868</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-08-30 15:40:03</wp:comment_date>
<wp:comment_date_gmt>2010-08-30 10:40:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я не стал у него про цифры спрашивать, ибо и так понятно, что вряд-ли кто-то захочет раскрыть свои финансовые данные. Рад, что тебе понравилось)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1867</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Установка Ruby 1.9.2 и Rails 3 stable на Ubuntu</title>
<link>http://torqueo.net/installing-ruby-192-and-rails-2-stable-on-ubuntu-ru/</link>
<pubDate>Tue, 31 Aug 2010 13:25:46 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag"><![CDATA[Ubuntu 10.04]]></category>

		<category domain="tag" nicename="ubuntu-1004"><![CDATA[Ubuntu 10.04]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=525</guid>
<description></description>
<content:encoded><![CDATA[Давайте установим Ruby 1.9.2 и Rails 3 stable на Ubuntu. Я использовал Ubuntu 10.04, 32-х битную версию. Здесь рассматривается установка Ruby без RVM, так что если будете следовать этому мануалу, то сначала удалите старую версию Ruby и её зависимости.

Если у вас еще не установлены следующие пакеты - установите их:
<pre><code class="shell">$ sudo apt-get install gcc g++ build-essential libssl-dev libreadline5-dev zlib1g-dev linux-headers-generic</code></pre>
Теперь скачаем исходники Ruby 1.9.2, распакуем их и установим:
<pre><code class="shell">$ wget ftp://ftp.ruby-lang.org//pub/ruby/1.9/ruby-1.9.2-p0.tar.gz
$ tar -xvzf ruby-1.9.2-p0.tar.gz
$ cd ruby-1.9.2-p0/
$ ./configure --prefix=/usr/local/ruby
$ make && sudo make install</code></pre>
Добавим путь к бинарным файлам Ruby. 
<pre><code class="shell">$ sudo gedit /etc/environment</code></pre>
Вам нужно добавить в переменную PATH этот путь - /usr/local/ruby/bin, должно получиться примерно так:
<pre>PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/ruby/bin"</pre>
Затем выполним команду source для файла, чтобы применить изменения.
<pre><code class="shell">$ source /etc/environment</code></pre>
Теперь проверим, установился ли Ruby:
<pre><code class="shell">$ ruby -v</code></pre>
Вы должны увидеть примерно следующее: ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]
Теперь создадим символическую ссылку, чтобы программа gem работала
<pre><code class="shell">$ sudo ln -s /usr/local/ruby/bin/ruby /usr/local/bin/ruby
$ sudo ln -s /usr/local/ruby/bin/gem /usr/bin/gem</code></pre>
Ruby 1.9.2 уже содержит Rubygems, поэтому вам не придется его устанавливать.
Теперь установим нужные пакеты gem, включая rails 3.:
<pre><code class="shell">$ sudo gem install tzinfo builder memcache-client rack rack-test erubis mail text-format bundler thor i18n sqlite3-ruby
$ sudo gem install rack-mount --version=0.4.0
$ sudo gem install rails --version 3.0.0</code></pre>
Проверим версию rails:
<pre><code class="shell">$ rails -v</code></pre>
Вы должны увидеть номер версии 3.0.0. Если этого не произошло, по попробуйте выполнить команду <em>source /etc/environment</em>, затем запустите <em>rails -v</em> еще раз.
Теперь всё готово к созданию нового приложения rails:
<pre><code class="shell">$ rails new myproject
cd myproject
rails server</code></pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>525</wp:post_id>
<wp:post_date>2010-08-31 18:25:46</wp:post_date>
<wp:post_date_gmt>2010-08-31 13:25:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>installing-ruby-192-and-rails-2-stable-on-ubuntu-ru</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1326038163</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>installing-ruby-192-and-rails-2-stable-on-ubuntu</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1898</wp:comment_id>
<wp:comment_author><![CDATA[A.I.]]></wp:comment_author>
<wp:comment_author_email>andrey@sitnik.ru</wp:comment_author_email>
<wp:comment_author_url>http://sitnik.ru</wp:comment_author_url>
<wp:comment_author_IP>188.134.12.153</wp:comment_author_IP>
<wp:comment_date>2010-09-02 15:29:42</wp:comment_date>
<wp:comment_date_gmt>2010-09-02 10:29:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Зачем компилировать Ruby 1.9.2 вручную? Специально же придумали пакетные менеджеры. Свежий Rubygems и Ruby есть, например, в Ubuntu on Rails PPA — https://launchpad.net/~ubuntu-on-rails/+archive/ppa .]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1899</wp:comment_id>
<wp:comment_author><![CDATA[Anton]]></wp:comment_author>
<wp:comment_author_email>anton@kopylov.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.83.127.207</wp:comment_author_IP>
<wp:comment_date>2010-09-02 15:34:46</wp:comment_date>
<wp:comment_date_gmt>2010-09-02 10:34:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А почему если не секрет без RVM? C RVM количество действий для установки уменьшится в несколько раз. Про удобство обновлений вобще молчу.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1900</wp:comment_id>
<wp:comment_author><![CDATA[Rain]]></wp:comment_author>
<wp:comment_author_email>aliveinrain@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>86.110.169.158</wp:comment_author_IP>
<wp:comment_date>2010-09-02 16:12:48</wp:comment_date>
<wp:comment_date_gmt>2010-09-02 11:12:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Почему бы не использовать rvm?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1901</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-09-02 16:29:03</wp:comment_date>
<wp:comment_date_gmt>2010-09-02 11:29:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Когда писалась статья, я не нашел Ruby 1.9.2 в пакете, поэтому, пришлось скомпилить. Не спорю, из пакета ставить удобнее и быстрее.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1898</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1902</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-09-02 16:31:18</wp:comment_date>
<wp:comment_date_gmt>2010-09-02 11:31:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Надо будет попробовать с RVM, но так как я ставил на чистую систему, то у меня была только одна версия. Попробую использовать RVM, когда выйдет новая версия интерпретатора.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1899</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1903</wp:comment_id>
<wp:comment_author><![CDATA[sab]]></wp:comment_author>
<wp:comment_author_email>sabotatore@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.222.86.81</wp:comment_author_IP>
<wp:comment_date>2010-09-02 16:40:18</wp:comment_date>
<wp:comment_date_gmt>2010-09-02 11:40:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[В ppa UOR сейчас лежит dev версия ruby 1.9.2

$ ruby -v
ruby 1.9.2dev (2010-07-02)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1898</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1930</wp:comment_id>
<wp:comment_author><![CDATA[Особое программирование &raquo; Post Topic &raquo; Установка Ruby 1.9.2 и Rails 3 stable на Ubuntu]]></wp:comment_author>
<wp:comment_author_email></wp:comment_author_email>
<wp:comment_author_url>http://programming.irip-ivf.com/blog/2010/09/04/%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-ruby-1-9-2-%d0%b8-rails-3-stable-%d0%bd%d0%b0-ubuntu/</wp:comment_author_url>
<wp:comment_author_IP>62.141.54.119</wp:comment_author_IP>
<wp:comment_date>2010-09-04 09:04:04</wp:comment_date>
<wp:comment_date_gmt>2010-09-04 04:04:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Пройдите по ссылке: Установка Ruby 1.9.2 и Rails 3 stable на Ubuntu [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13083</wp:comment_id>
<wp:comment_author><![CDATA[education]]></wp:comment_author>
<wp:comment_author_email>toorr2p@bigmir.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.112.39.184</wp:comment_author_IP>
<wp:comment_date>2012-01-06 22:37:39</wp:comment_date>
<wp:comment_date_gmt>2012-01-06 17:37:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо за статью!
Но, на этом этапе "Теперь установим нужные пакеты gem, включая rails 3.:" после ввода первой комманды : "sudo gem install tzinfo builder memcache-client rack rack-test erubis mail text-format bundler thor i18n sqlite3-ruby"

выводится сообщение об ошибке: "ERROR:  Loading command: install (LoadError)
    no such file to load -- zlib
ERROR:  While executing gem ... (NameError)
    uninitialized constant Gem::Commands::InstallCommand
"

Что с этим делать, или как иначе установить?
Спасибо еще раз!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13084</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.84</wp:comment_author_IP>
<wp:comment_date>2012-01-07 01:03:40</wp:comment_date>
<wp:comment_date_gmt>2012-01-06 20:03:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Видимо, пакет устарел. Попробуйте заменить zlib на zlib1g-dev и повторите запуск команды.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>13083</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13093</wp:comment_id>
<wp:comment_author><![CDATA[education]]></wp:comment_author>
<wp:comment_author_email>toorr2p@bigmir.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.112.25.79</wp:comment_author_IP>
<wp:comment_date>2012-01-07 20:04:32</wp:comment_date>
<wp:comment_date_gmt>2012-01-07 15:04:32</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Где заменить? я все сделал по вашей интрукции до этого шага :

$ sudo gem install tzinfo builder memcache-client rack rack-test erubis mail text-format bundler thor i18n sqlite3-ruby
$ sudo gem install rack-mount --version=0.4.0
$ sudo gem install rails --version 3.0.0]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13095</wp:comment_id>
<wp:comment_author><![CDATA[education]]></wp:comment_author>
<wp:comment_author_email>toorr2p@bigmir.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.112.25.79</wp:comment_author_IP>
<wp:comment_date>2012-01-07 21:25:38</wp:comment_date>
<wp:comment_date_gmt>2012-01-07 16:25:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[в системе уже установлен zlib1g-dev, не пойму в чем проблема]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13096</wp:comment_id>
<wp:comment_author><![CDATA[education]]></wp:comment_author>
<wp:comment_author_email>toorr2p@bigmir.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.112.25.79</wp:comment_author_IP>
<wp:comment_date>2012-01-07 21:28:12</wp:comment_date>
<wp:comment_date_gmt>2012-01-07 16:28:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Всеравно ошибка:
"sudo gem install tzinfo builder memcache-client rack rack-test erubis mail text-format bundler thor i18n sqlite3-ruby"

После ввода этой комманды:
"sudo gem install tzinfo builder memcache-client rack rack-test erubis mail text-format bundler thor i18n sqlite3-ruby"]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13097</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.84</wp:comment_author_IP>
<wp:comment_date>2012-01-08 00:43:41</wp:comment_date>
<wp:comment_date_gmt>2012-01-07 19:43:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Странно. Пробовали систему обновить? sudo apt-get update]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>13096</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13102</wp:comment_id>
<wp:comment_author><![CDATA[education]]></wp:comment_author>
<wp:comment_author_email>toorr2p@bigmir.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.112.28.248</wp:comment_author_IP>
<wp:comment_date>2012-01-08 15:57:28</wp:comment_date>
<wp:comment_date_gmt>2012-01-08 10:57:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Систему обновлял]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13107</wp:comment_id>
<wp:comment_author><![CDATA[educatio]]></wp:comment_author>
<wp:comment_author_email>toorr2p@bigmir.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.112.28.248</wp:comment_author_IP>
<wp:comment_date>2012-01-08 20:55:26</wp:comment_date>
<wp:comment_date_gmt>2012-01-08 15:55:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Может быть мне все это удалить лучше и начать заново? Подскажите как удалить плз, и как rails удалить я его поставил но версия 2.1.7 вроде, вобщем старая а хотелось бы rails 3
(коммент пишу из под винды)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13108</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.84</wp:comment_author_IP>
<wp:comment_date>2012-01-08 20:55:55</wp:comment_date>
<wp:comment_date_gmt>2012-01-08 15:55:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Попробуйте установить следующий набор зависимостей для Ruby:

<code>sudo apt-get install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev autoconf</code>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>13102</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13109</wp:comment_id>
<wp:comment_author><![CDATA[education]]></wp:comment_author>
<wp:comment_author_email>toorr2p@bigmir.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.112.28.248</wp:comment_author_IP>
<wp:comment_date>2012-01-08 21:02:07</wp:comment_date>
<wp:comment_date_gmt>2012-01-08 16:02:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Зашел под ubuntu, версия : Rails 2.3.14 (может както обновить до 3, подскажите плз?)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13110</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.84</wp:comment_author_IP>
<wp:comment_date>2012-01-08 21:09:01</wp:comment_date>
<wp:comment_date_gmt>2012-01-08 16:09:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[<code># Удаляем старую версию
gem uninstall rails --version=2.3.14

# Ставим последнюю версию
gem install rails</code>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>13109</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13111</wp:comment_id>
<wp:comment_author><![CDATA[education]]></wp:comment_author>
<wp:comment_author_email>toorr2p@bigmir.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.112.28.248</wp:comment_author_IP>
<wp:comment_date>2012-01-08 21:29:14</wp:comment_date>
<wp:comment_date_gmt>2012-01-08 16:29:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо большое!!! Теперь все установилось и Rails обновился до третьей версии.

Правдо вылезло сообщение в конце установки:

"ERROR:  While generating documentation for builder-2.1.2
... MESSAGE:   Unhandled special: Special: type=17, text="<!-- HI -->"
... RDOC args: --ri --op /var/lib/gems/1.8/doc/builder-2.1.2/ri --title Builder -- Easy XML Building --main README --line-numbers lib"


что это?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13114</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.233.84</wp:comment_author_IP>
<wp:comment_date>2012-01-08 22:42:52</wp:comment_date>
<wp:comment_date_gmt>2012-01-08 17:42:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Это похоже документация для гема builder не смогла сгенериться. Ничего страшного.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>13111</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Installing Ruby 1.9.2 and Rails 3 stable on Ubuntu</title>
<link>http://torqueo.net/installing-ruby-192-and-rails-3-stable-on-ubuntu/</link>
<pubDate>Tue, 31 Aug 2010 13:40:12 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag"><![CDATA[Ubuntu 10.04]]></category>

		<category domain="tag" nicename="ubuntu-1004"><![CDATA[Ubuntu 10.04]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=532</guid>
<description></description>
<content:encoded><![CDATA[Let's install Ruby 1.9.2 and Rails 3 stable on Ubuntu. I'm going to use just one Ruby version so, <strong>this installation without RVM</strong> (<a href="http://rvm.beginrescueend.com/">Ruby Version Manager</a>). I'm using Ubuntu 10.04, 32 bit version.

If you have not yet installed the following packages - install them:
<pre><code class="shell">$ sudo apt-get install gcc g++ build-essential libssl-dev libreadline5-dev zlib1g-dev linux-headers-generic libsqlite3-dev</code></pre>
Now download Ruby 1.9.2 sources, unpack them and install:
<pre><code class="shell">$ wget ftp://ftp.ruby-lang.org//pub/ruby/1.9/ruby-1.9.2-p0.tar.gz
$ tar -xvzf ruby-1.9.2-p0.tar.gz
$ cd ruby-1.9.2-p0/
$ ./configure --prefix=/usr/local/ruby
$ make &amp;&amp; sudo make install</code></pre>
Add path to binary Ruby files.
<pre><code class="shell">$ sudo gedit /etc/environment</code></pre>
You need to add in the PATH variable that path - /usr/local/ruby/bin, should look something like this:
<pre>PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/ruby/bin"</pre>
Then run the <em>source</em> command for the file /etc/environment to apply changes.
<pre><code class="shell">$ source /etc/environment</code></pre>
Now check is Ruby installed properly:
<pre><code class="shell">$ ruby -v</code></pre>
You should see something like this: ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-linux]
Now create a symbolic link for ruby and gem program
<pre><code class="shell">$ sudo ln -s /usr/local/ruby/bin/ruby /usr/local/bin/ruby
$ sudo ln -s /usr/local/ruby/bin/gem /usr/bin/gem</code></pre>
Ruby 1.9.2 is already includes Rubygems, so you do not have to install it.
Now install the required gem packages, including Rails 3.:
<pre><code class="shell">$ sudo gem install tzinfo builder memcache-client rack rack-test erubis mail text-format bundler thor i18n sqlite3-ruby
$ sudo gem install rack-mount --version=0.4.0
$ sudo gem install rails --version 3.0.0</code></pre>
Check Rails version:
<pre><code class="shell">$ rails -v</code></pre>
You should see the version number 3.0.0. Otherwise, try to execute command <em>source /etc/environment</em> and enter <em>rails -v</em> command once again.
Now you are ready to create a new Rails 3 application:
<pre><code class="shell">$ rails new myproject
cd myproject
rails server
</code></pre>

<strong>UP:</strong> To update rails to latest version (3.0.3 for now), run:
<code class="shell"><pre>sudo gem update rails</pre></code>

And change rails gem in your Gemfile to <strong>gem 'rails', '3.0.3'</strong>
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>532</wp:post_id>
<wp:post_date>2010-08-31 18:40:12</wp:post_date>
<wp:post_date_gmt>2010-08-31 13:40:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>installing-ruby-192-and-rails-3-stable-on-ubuntu</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1325974432</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3251</wp:comment_id>
<wp:comment_author><![CDATA[Bijan]]></wp:comment_author>
<wp:comment_author_email>bijan.pourriahi@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>24.9.17.140</wp:comment_author_IP>
<wp:comment_date>2010-12-07 04:22:00</wp:comment_date>
<wp:comment_date_gmt>2010-12-06 23:22:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Any way to avoid having to retype source env/environment without putting it in the bashrc?

This wasn't a problem on ubuntu, but is on Arch.

Thanks for any help.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3196</wp:comment_id>
<wp:comment_author><![CDATA[Said]]></wp:comment_author>
<wp:comment_author_email>sudoman@namba.kg</wp:comment_author_email>
<wp:comment_author_url>http://notes.kloop.kg/</wp:comment_author_url>
<wp:comment_author_IP>212.112.108.162</wp:comment_author_IP>
<wp:comment_date>2010-12-03 20:20:15</wp:comment_date>
<wp:comment_date_gmt>2010-12-03 15:20:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[hello everybody, i followed every your step, rails installed successfully, but when I try to check the rails version I've got this error:

/usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:238:in `activate': can't activate i18n (~&gt; 0.5.0, runtime) for ["mail-2.2.11", "actionmailer-3.0.0", "rails-3.0.0"], already activated i18n-0.4.2 for ["activemodel-3.0.0", "actionpack-3.0.0", "rails-3.0.0"] (Gem::LoadError)
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:254:in `block in activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `each'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:254:in `block in activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `each'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:254:in `block in activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `each'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:1065:in `gem'
	from /usr/local/ruby/bin/rails:18:in `'

any suggestion ????]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3157</wp:comment_id>
<wp:comment_author><![CDATA[ruvan]]></wp:comment_author>
<wp:comment_author_email>ruvan@msn.com</wp:comment_author_email>
<wp:comment_author_url>http://12tb.com</wp:comment_author_url>
<wp:comment_author_IP>76.28.240.103</wp:comment_author_IP>
<wp:comment_date>2010-12-01 15:43:21</wp:comment_date>
<wp:comment_date_gmt>2010-12-01 10:43:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[also i would do a:
  sudo gem update rails to get the latest]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>3155</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3155</wp:comment_id>
<wp:comment_author><![CDATA[ruvan]]></wp:comment_author>
<wp:comment_author_email>ruvan@msn.com</wp:comment_author_email>
<wp:comment_author_url>http://12tb.com</wp:comment_author_url>
<wp:comment_author_IP>76.28.240.103</wp:comment_author_IP>
<wp:comment_date>2010-12-01 15:30:15</wp:comment_date>
<wp:comment_date_gmt>2010-12-01 10:30:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[finally i was able to install ruby/ rails on ubuntu thanks to this, was struggling to get ruby1.9 working on 10.10]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3158</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-12-01 16:42:54</wp:comment_date>
<wp:comment_date_gmt>2010-12-01 11:42:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for reply, I add it to post.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>3157</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1878</wp:comment_id>
<wp:comment_author><![CDATA[John]]></wp:comment_author>
<wp:comment_author_email>john.brosan@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>173.12.32.85</wp:comment_author_IP>
<wp:comment_date>2010-09-01 17:20:42</wp:comment_date>
<wp:comment_date_gmt>2010-09-01 12:20:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great write up! I'm going to give this a shot on Ubuntu 10.04 64-bit.

Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1880</wp:comment_id>
<wp:comment_author><![CDATA[Artem]]></wp:comment_author>
<wp:comment_author_email>artem.medeu@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.56.4.113</wp:comment_author_IP>
<wp:comment_date>2010-09-01 17:46:09</wp:comment_date>
<wp:comment_date_gmt>2010-09-01 12:46:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[why not checkinstall instead of "make install"? http://goo.gl/pB8W]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1889</wp:comment_id>
<wp:comment_author><![CDATA[John]]></wp:comment_author>
<wp:comment_author_email>john.brosan@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>173.12.32.85</wp:comment_author_IP>
<wp:comment_date>2010-09-02 04:34:38</wp:comment_date>
<wp:comment_date_gmt>2010-09-01 23:34:38</wp:comment_date_gmt>
<wp:comment_content><![CDATA[The directions worked great! I was able to get it up and running on 10.04 64-bit with only one hiccup. I previously had Ruby 1.8 installed with Rails 2.3.8. I removed them, but the file /usr/bin/rails pointed explicitly to /usr/bin/ruby1.8. I just pointed that to the symlink made in this write up and it worked like a champ!

I use PostgreSQL so I added support for that. 

Here is what I did if it helps anyone.

For Ubuntu 10.04 LTS

$ sudo apt-get install postgresql postgresql-client postgresql-contrib libpq-dev 
$ sudo gem install pg

Thanks again for the great write up.
John]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1893</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.29.224</wp:comment_author_IP>
<wp:comment_date>2010-09-02 09:57:11</wp:comment_date>
<wp:comment_date_gmt>2010-09-02 04:57:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I also installed Ruby 1.9.2, previously deleted the old version 1.8.7. But if someone wants to use both version of Ruby (you can switch between them), use RVM (Ruby Version Manager).

John, thx for your comment.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1919</wp:comment_id>
<wp:comment_author><![CDATA[ravi]]></wp:comment_author>
<wp:comment_author_email>worldisamess@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>113.199.219.59</wp:comment_author_IP>
<wp:comment_date>2010-09-03 21:53:11</wp:comment_date>
<wp:comment_date_gmt>2010-09-03 16:53:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks for this wonderful post.
yes, i too preferred to use RVM which allows you to switch between different version of rubies and gemsets.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1975</wp:comment_id>
<wp:comment_author><![CDATA[BJ]]></wp:comment_author>
<wp:comment_author_email>dropbox247@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>98.89.141.31</wp:comment_author_IP>
<wp:comment_date>2010-09-09 21:11:51</wp:comment_date>
<wp:comment_date_gmt>2010-09-09 16:11:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing this. I had a fresh copy of Ubuntu installed and everything else I tried resulted in an error.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>1982</wp:comment_id>
<wp:comment_author><![CDATA[Athir]]></wp:comment_author>
<wp:comment_author_email>athir@nuaimi.com</wp:comment_author_email>
<wp:comment_author_url>http://rndguy.ca</wp:comment_author_url>
<wp:comment_author_IP>69.165.173.251</wp:comment_author_IP>
<wp:comment_date>2010-09-10 19:04:13</wp:comment_date>
<wp:comment_date_gmt>2010-09-10 14:04:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[if you install build-essentials, I don't believe you need to also include g++ or gcc as build-essentials includes these.  see http://packages.ubuntu.com/lucid/devel/build-essential]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2780</wp:comment_id>
<wp:comment_author><![CDATA[xorgnak]]></wp:comment_author>
<wp:comment_author_email>xorgnak@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>69.180.236.14</wp:comment_author_IP>
<wp:comment_date>2010-11-13 20:22:18</wp:comment_date>
<wp:comment_date_gmt>2010-11-13 15:22:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I don't know about anyone else, but unless I typed "source /etc/environment" in every time I wanted to used irb/ruby/gem/anything in my /usr/local/ruby install.  I just put "source /etc/environment" in my .bashrc file, and problem solved.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2002</wp:comment_id>
<wp:comment_author><![CDATA[Necromant2005]]></wp:comment_author>
<wp:comment_author_email>necromant2005@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>193.33.212.148</wp:comment_author_IP>
<wp:comment_date>2010-09-14 10:09:58</wp:comment_date>
<wp:comment_date_gmt>2010-09-14 05:09:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks,
But for installing on the clear system and before you be able to run rails server , you have to install sqlite
# sudo apt-get install libsqlite3-dev
# bundle install

ubuntu 10.10 beta]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2003</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-09-14 10:41:59</wp:comment_date>
<wp:comment_date_gmt>2010-09-14 05:41:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for notice, I added this package to requirements]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2002</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2040</wp:comment_id>
<wp:comment_author><![CDATA[cmud666]]></wp:comment_author>
<wp:comment_author_email>cmud666@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>149.171.224.155</wp:comment_author_IP>
<wp:comment_date>2010-09-22 15:35:56</wp:comment_date>
<wp:comment_date_gmt>2010-09-22 10:35:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Super!! Great step by step howto ;)  Thanx]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2043</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.30.196.117</wp:comment_author_IP>
<wp:comment_date>2010-09-22 22:56:21</wp:comment_date>
<wp:comment_date_gmt>2010-09-22 17:56:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanx for reading this)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>1919</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2669</wp:comment_id>
<wp:comment_author><![CDATA[Ce BEE]]></wp:comment_author>
<wp:comment_author_email>sha-lin@live.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>74.101.247.216</wp:comment_author_IP>
<wp:comment_date>2010-11-07 04:49:35</wp:comment_date>
<wp:comment_date_gmt>2010-11-06 23:49:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks a lot, great write up on Rails. A+++]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2457</wp:comment_id>
<wp:comment_author><![CDATA[r4ito]]></wp:comment_author>
<wp:comment_author_email>r4ito@yahoo.com</wp:comment_author_email>
<wp:comment_author_url>http://r4ito.com</wp:comment_author_url>
<wp:comment_author_IP>190.209.59.180</wp:comment_author_IP>
<wp:comment_date>2010-10-26 22:16:16</wp:comment_date>
<wp:comment_date_gmt>2010-10-26 17:16:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great! It couldn't have been easier, thanks a lot.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2402</wp:comment_id>
<wp:comment_author><![CDATA[marko]]></wp:comment_author>
<wp:comment_author_email>atraktor@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>217.23.206.240</wp:comment_author_IP>
<wp:comment_date>2010-10-24 14:02:20</wp:comment_date>
<wp:comment_date_gmt>2010-10-24 09:02:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[bravo!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4430</wp:comment_id>
<wp:comment_author><![CDATA[Bob A. Booeiy]]></wp:comment_author>
<wp:comment_author_email>rbooeiy@howardstern.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>68.202.56.186</wp:comment_author_IP>
<wp:comment_date>2011-01-22 06:02:55</wp:comment_date>
<wp:comment_date_gmt>2011-01-22 01:02:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thank you SO much! I wanted to avoid RVM because it is a nightmare. It constantly deletes stuff so there is no way I would use it on a production machine. Anyone else that does is asking for misery. Their latest bug was they deleted the entire Ruby directory. I've had it completely destroy whole installations doing nothing more than installing a gem.

Thanks again for the RVM'less install. Anyone that says you should use RVM clearly hasn't used it for long or has drunken the flavor-aid. RVM is HORRIBLE!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4599</wp:comment_id>
<wp:comment_author><![CDATA[Mark]]></wp:comment_author>
<wp:comment_author_email>markcondeph@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://markcondeph.com</wp:comment_author_url>
<wp:comment_author_IP>112.202.143.19</wp:comment_author_IP>
<wp:comment_date>2011-01-28 19:57:51</wp:comment_date>
<wp:comment_date_gmt>2011-01-28 14:57:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great guide. I configured ruby following this. Thanks. :D]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5344</wp:comment_id>
<wp:comment_author><![CDATA[Enrique Tron]]></wp:comment_author>
<wp:comment_author_email>etronm@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>70.45.59.97</wp:comment_author_IP>
<wp:comment_date>2011-02-25 06:11:15</wp:comment_date>
<wp:comment_date_gmt>2011-02-25 01:11:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Excelent!! thanks a lot, congrats]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>6503</wp:comment_id>
<wp:comment_author><![CDATA[Esteban]]></wp:comment_author>
<wp:comment_author_email>emunicio@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://unaestageneration.blogspot.com</wp:comment_author_url>
<wp:comment_author_IP>87.220.45.73</wp:comment_author_IP>
<wp:comment_date>2011-04-07 03:45:03</wp:comment_date>
<wp:comment_date_gmt>2011-04-06 22:45:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[very useful!!
thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>7417</wp:comment_id>
<wp:comment_author><![CDATA[mon]]></wp:comment_author>
<wp:comment_author_email>mt_noone@hotmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>202.183.155.226</wp:comment_author_IP>
<wp:comment_date>2011-04-28 07:36:13</wp:comment_date>
<wp:comment_date_gmt>2011-04-28 02:36:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It very useful for me.

Thank you!!!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8432</wp:comment_id>
<wp:comment_author><![CDATA[Jeff Douglas]]></wp:comment_author>
<wp:comment_author_email>jeff@jeffdouglas.com</wp:comment_author_email>
<wp:comment_author_url>http://blog.jeffdouglas.com</wp:comment_author_url>
<wp:comment_author_IP>173.78.175.28</wp:comment_author_IP>
<wp:comment_date>2011-06-01 15:15:26</wp:comment_date>
<wp:comment_date_gmt>2011-06-01 10:15:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Awesome!! Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8438</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.1.30</wp:comment_author_IP>
<wp:comment_date>2011-06-01 23:55:17</wp:comment_date>
<wp:comment_date_gmt>2011-06-01 18:55:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thank you, Jeff!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8432</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8602</wp:comment_id>
<wp:comment_author><![CDATA[Adam Gonnerman]]></wp:comment_author>
<wp:comment_author_email>igneousquill@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://igneousquill.net</wp:comment_author_url>
<wp:comment_author_IP>68.39.10.145</wp:comment_author_IP>
<wp:comment_date>2011-06-10 14:52:58</wp:comment_date>
<wp:comment_date_gmt>2011-06-10 09:52:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is really strange. I've gone through all the steps, everything LOOKS successful but then when I do ruby -v is says it isn't installed. I tried RVM before this and couldn't get it going either.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8603</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-06-10 18:41:59</wp:comment_date>
<wp:comment_date_gmt>2011-06-10 13:41:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hmm. Try "source /etc/environment" again and also try to close console session then open again and type "ruby -v"]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8602</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11218</wp:comment_id>
<wp:comment_author><![CDATA[Marcell]]></wp:comment_author>
<wp:comment_author_email>marcellpurham@live.com</wp:comment_author_email>
<wp:comment_author_url>http://www.cell-designs.com</wp:comment_author_url>
<wp:comment_author_IP>71.228.13.76</wp:comment_author_IP>
<wp:comment_date>2011-09-22 09:13:10</wp:comment_date>
<wp:comment_date_gmt>2011-09-22 04:13:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thank you! Worked like a charm]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11437</wp:comment_id>
<wp:comment_author><![CDATA[MANIKYALARAO]]></wp:comment_author>
<wp:comment_author_email>manikyalaraopadala@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>202.153.35.106</wp:comment_author_IP>
<wp:comment_date>2011-10-03 10:53:05</wp:comment_date>
<wp:comment_date_gmt>2011-10-03 05:53:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[THANK U|GREAT POST THESE STEPS ARE WORKED FOR ME TO INSTALL ROR IN MY LINUX BOX.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11448</wp:comment_id>
<wp:comment_author><![CDATA[balopat]]></wp:comment_author>
<wp:comment_author_email>patobalint@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://balopat.com</wp:comment_author_url>
<wp:comment_author_IP>86.176.77.12</wp:comment_author_IP>
<wp:comment_date>2011-10-04 02:06:56</wp:comment_date>
<wp:comment_date_gmt>2011-10-03 21:06:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[cheers, it worked for me too, on ubuntu x64 11.04]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13071</wp:comment_id>
<wp:comment_author><![CDATA[Pedro]]></wp:comment_author>
<wp:comment_author_email>sena.pedro@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>189.71.211.60</wp:comment_author_IP>
<wp:comment_date>2012-01-05 21:28:55</wp:comment_date>
<wp:comment_date_gmt>2012-01-05 16:28:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I'm having the same problem as the guy from post #15.

After rails updates the following error started:

/usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:238:in `activate': can't activate rack (~&gt; 1.3.5, runtime) for ["actionpack-3.1.3", "rails-3.1.3"], already activated rack-1.4.0 for ["rack-cache-1.1", "actionpack-3.1.3", "rails-3.1.3"] (Gem::LoadError)
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:254:in `block in activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `each'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:254:in `block in activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `each'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:253:in `activate'
	from /usr/local/ruby/lib/ruby/1.9.1/rubygems.rb:1065:in `gem'
	from /usr/local/ruby/bin/rails:18:in `']]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Отличная презентация об улучшениях в коде проекта на Rails 3</title>
<link>http://torqueo.net/rails-3-improvements-presentation/</link>
<pubDate>Tue, 31 Aug 2010 15:07:47 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=537</guid>
<description></description>
<content:encoded><![CDATA[Смотрим, как нужно писать код теперь. Мне презентаха очень понравилась!

<div style="width:425px" id="__ss_3219240"><strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/GreggPollack/rails-3-beautiful-code-3219240" title="Rails 3 Beautiful Code">Rails 3 Beautiful Code</a></strong><object id="__sse3219240" width="425" height="355"><param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=beautifulcodeinrails3-greggpollack-100218130149-phpapp02&stripped_title=rails-3-beautiful-code-3219240" /><param name="allowFullScreen" value="true"/><param name="allowScriptAccess" value="always"/><embed name="__sse3219240" src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=beautifulcodeinrails3-greggpollack-100218130149-phpapp02&stripped_title=rails-3-beautiful-code-3219240" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></embed></object><div style="padding:5px 0 12px">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/GreggPollack">GreggPollack</a>.</div></div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>537</wp:post_id>
<wp:post_date>2010-08-31 20:07:47</wp:post_date>
<wp:post_date_gmt>2010-08-31 15:07:47</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rails-3-improvements-presentation</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1309179371</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Прекрасные контроллеры в Rails 3</title>
<link>http://torqueo.net/beautiful-controllers-in-rails-3/</link>
<pubDate>Fri, 03 Sep 2010 09:29:07 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=552</guid>
<description></description>
<content:encoded><![CDATA[Зацените, кто еще не видел, насколько меньше кода стало в контроллерах Rails 3! Теперь можно сказать, что контроллеры стали по-настоящему соответствующими принципу DRY. И всё это благодаря респондерам. В общем, мне нравится:

<pre><code class="ruby">class ProductsController < ApplicationController  
  respond_to :html, :xml  
 
  def index  
    respond_with(@products = Product.all)
  end  
    
  def show  
    respond_with(@product = Product.find(params[:id]))
  end  

  def new  
    respond_with(@product = Product.new)
  end  
    
  def create  
    @product = Product.new(params[:product])  
    flash[:notice] = "Successfully created product." if @product.save
    respond_with(@product)  
  end  
  
  def edit
    respond_with(@product = Product.find(params[:id]))  
  end  
   
  def update  
    @product = Product.find(params[:id])  
    flash[:notice] = "Successfully updated product."
      if @product.update_attributes(params[:product])

    respond_with(@product)  
  end  
     
  def destroy  
    @product = Product.find(params[:id])  
    @product.destroy  
    flash[:notice] = "Successfully destroyed product."  
    respond_with(@product)  
  end  
end  </code></pre>

В респондерах теперь содержится вся та <em>магия</em> по отдаче ответа клиенту, которая раньше находилась в контроллере, в блоке, передаваемому методу respond_to. Сейчас стало удобно контролировать отдачу типов контента - ну нужно править каждый метод контроллера, если вы захотите добавить или убрать тип контента. Кстати, метод respond_to поддерживает ключи :only и :except, чтобы контролировать типы контента для методов.
Самое главное - это все работает, и работает замечательно! Я сейчас пишу проект на Rails 3 и использую всю эту красоту. В общем - радости нет предела)

Рекомендую почитать вот эту статейку на английском: <a href="http://asciicasts.com/episodes/224-controllers-in-rails-3">Controllers in Rails 3</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>552</wp:post_id>
<wp:post_date>2010-09-03 14:29:07</wp:post_date>
<wp:post_date_gmt>2010-09-03 09:29:07</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>beautiful-controllers-in-rails-3</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1309179353</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>1925</wp:comment_id>
<wp:comment_author><![CDATA[Konstantin Tumalevich]]></wp:comment_author>
<wp:comment_author_email>userad@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://tumalevich.pp.ru</wp:comment_author_url>
<wp:comment_author_IP>91.77.50.50</wp:comment_author_IP>
<wp:comment_date>2010-09-04 02:30:33</wp:comment_date>
<wp:comment_date_gmt>2010-09-03 21:30:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Респондеры были еще в rails2]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Антибот оказался успешен</title>
<link>http://torqueo.net/antibot-is-successfu/</link>
<pubDate>Fri, 01 Oct 2010 12:09:50 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[рутина]]></category>

		<category domain="category" nicename="%d1%80%d1%83%d1%82%d0%b8%d0%bd%d0%b0"><![CDATA[рутина]]></category>

		<category><![CDATA[свежий навоз]]></category>

		<category domain="category" nicename="%d1%81%d0%b2%d0%b5%d0%b6%d0%b8%d0%b9-%d0%bd%d0%b0%d0%b2%d0%be%d0%b7"><![CDATA[свежий навоз]]></category>

		<category domain="tag"><![CDATA[antibot]]></category>

		<category domain="tag" nicename="antibot"><![CDATA[antibot]]></category>

		<category domain="tag"><![CDATA[wordpress]]></category>

		<category domain="tag" nicename="wordpress"><![CDATA[wordpress]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=559</guid>
<description></description>
<content:encoded><![CDATA[Меня тут достали совсем эти блогоспамеры, хоть и ни один их коммент в этом блоге не прошел - я модерирую все комментарии. Но просто достало удалять по 20 спамных комментов в день, когда удаляешь, то краем глаза все равно читаешь их, а я этого терпеть не могу, поэтому поставил антибот плагин для WP, который абсолютно незаметен для человека, пишущего комментарий. Но вот робот отправить коммент уже не может - слишком тупой.
Как ни странно - это решение избавило меня от спам-комментов на 100%. И я доволен.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>559</wp:post_id>
<wp:post_date>2010-10-01 17:09:50</wp:post_date>
<wp:post_date_gmt>2010-10-01 12:09:50</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>antibot-is-successfu</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1285934992</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2131</wp:comment_id>
<wp:comment_author><![CDATA[Георгий]]></wp:comment_author>
<wp:comment_author_email>varfolomey@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.114.134.240</wp:comment_author_IP>
<wp:comment_date>2010-10-01 18:32:02</wp:comment_date>
<wp:comment_date_gmt>2010-10-01 13:32:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Добрый день!
Меня заинтересовал плагин.
А что за плагин и по какому принципу работает?
Можно по подробнее?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Озвучивание интерфейсов в HTML5, мысли</title>
<link>http://torqueo.net/thoughts-about-html5-audio-data-api/</link>
<pubDate>Mon, 04 Oct 2010 10:11:33 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[javascript]]></category>

		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>

		<category><![CDATA[Разработка проектов]]></category>

		<category domain="category" nicename="%d1%80%d0%b0%d0%b7%d1%80%d0%b0%d0%b1%d0%be%d1%82%d0%ba%d0%b0-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d0%be%d0%b2"><![CDATA[Разработка проектов]]></category>

		<category domain="tag"><![CDATA[audio]]></category>

		<category domain="tag" nicename="audio"><![CDATA[audio]]></category>

		<category domain="tag"><![CDATA[html5]]></category>

		<category domain="tag" nicename="html5"><![CDATA[html5]]></category>

		<category domain="tag"><![CDATA[UI]]></category>

		<category domain="tag" nicename="ui"><![CDATA[UI]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=561</guid>
<description></description>
<content:encoded><![CDATA[Я тут подумал давеча, что связи с появлением <a href="https://wiki.mozilla.org/Audio_Data_API">Audio Data API</a> в HTML5, можно будет делать очень клевые штуки. Только представьте: различные меню, всплывающие окна, accordion'ы, notices - все это можно сопровождать различными звуками! Блин, как же классно будет :)

Я сейчас работаю над одним проектом и в будущем хочу внедрить в него озвучку интерфейса. Сходу в гугле не нашел подобных сайтов с озвучкой на HTML5 API, но если вы видели подобное, пишите в комменты, с удовольствием гляну.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>561</wp:post_id>
<wp:post_date>2010-10-04 15:11:33</wp:post_date>
<wp:post_date_gmt>2010-10-04 10:11:33</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>thoughts-about-html5-audio-data-api</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1286187095</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2187</wp:comment_id>
<wp:comment_author><![CDATA[Sb]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>83.167.29.99</wp:comment_author_IP>
<wp:comment_date>2010-10-06 12:49:58</wp:comment_date>
<wp:comment_date_gmt>2010-10-06 07:49:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Чего за проект колись =)
Озвучивание это конечно хорошо - но тут вопрос как и где грузить звуки =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2516</wp:comment_id>
<wp:comment_author><![CDATA[Pulse]]></wp:comment_author>
<wp:comment_author_email>ashumankov@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>193.200.21.9</wp:comment_author_IP>
<wp:comment_date>2010-10-28 09:15:29</wp:comment_date>
<wp:comment_date_gmt>2010-10-28 04:15:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я думаю, что распространением и развитием технологий хтмл5 понятие веба значительно расширится. Появятся новые сервисы, и так далее. Ну и про игрушки не забывай :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2515</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2514</wp:comment_id>
<wp:comment_author><![CDATA[Pulse]]></wp:comment_author>
<wp:comment_author_email>ashumankov@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>193.200.21.9</wp:comment_author_IP>
<wp:comment_date>2010-10-28 09:02:21</wp:comment_date>
<wp:comment_date_gmt>2010-10-28 04:02:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Яш тебе говорю, аудио редакторы.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2512</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2515</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-10-28 09:04:17</wp:comment_date>
<wp:comment_date_gmt>2010-10-28 04:04:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Думаешь, это сильно актуально под веб? Если только какие-ить рингтоны удобно обрабатывать - но такое уже есть и на флэше.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2514</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2512</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-10-28 08:59:03</wp:comment_date>
<wp:comment_date_gmt>2010-10-28 03:59:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, видел это. Не придумаю, где это может пригодиться.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2510</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2513</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-10-28 09:00:58</wp:comment_date>
<wp:comment_date_gmt>2010-10-28 04:00:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Как и где? Думаю - не проблема заказать озвучку у людей, которые, собственно, ею занимаются. Я по крайней мере знаю двух своих знакомых, кто может это сделать достаточно профессионально.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2187</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2510</wp:comment_id>
<wp:comment_author><![CDATA[Pulse]]></wp:comment_author>
<wp:comment_author_email>ashumankov@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>193.200.21.9</wp:comment_author_IP>
<wp:comment_date>2010-10-28 07:46:43</wp:comment_date>
<wp:comment_date_gmt>2010-10-28 02:46:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Мне кажется озвучка интерфейса лишь вершина айсберга. Представь себе онлайн аудио редактор - вот это да!

Возможно ты уже видел, но на всякий случай вот пример:
http://habrahabr.ru/blogs/firefox/103010/]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Про диджеев</title>
<link>http://torqueo.net/about-deejays/</link>
<pubDate>Mon, 11 Oct 2010 07:59:41 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=563</guid>
<description></description>
<content:encoded><![CDATA[Я вообще не уважаю диджеев, которые сводят чужие треки и играют их в клубах. Офигеваю за тех, кто может сказать: "Пошли в клуб N, там будет играть такой-то Вася.". Это особенно заметно в среде т.н. клабберов. При том все достижения этого Васи заключаются в том, что он научился сводить треки и стоять за пультом с таким видом, как будто управляет АЭС, иногдя отходя покурить или перетереть с местными свистками. Для меня это чмыри.

А уважаю тех, кто пишет и играет свою музыку, особенно trance :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>563</wp:post_id>
<wp:post_date>2010-10-11 12:59:41</wp:post_date>
<wp:post_date_gmt>2010-10-11 07:59:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>about-deejays</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1286783982</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Я написал веб-сервер, который ничего не умеет</title>
<link>http://torqueo.net/useless-webserver-on-ruby-illustrates-get-request-processing/</link>
<pubDate>Thu, 21 Oct 2010 18:59:17 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[web server]]></category>

		<category domain="tag" nicename="web-server"><![CDATA[web server]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=569</guid>
<description></description>
<content:encoded><![CDATA[И, спрашивается, зачем?

А затем, чтобы рассказать на примере, как обрабатываются GET-запросы. Пока что мой сервер ничего не умеет, кроме обработки GET-запросов и вывода информации о клиенте, он даже не читает никакие файлы с диска. Его задача другая, показать, как происходит обработка запросов. Я это сделал потому, что как оказалось, далеко не все веб-разработчики понимают, как это происходит. Мне вот повезло, давным давно приходилось разбирать аж multipart-запросы и обрабатывать заголовки, приходящие на сервер - в бытность, когда писал свою библиотеку на Perl.

Но сейчас я сделал пример на Ruby и не поймет его только баран (или обезьяна). Я постарался максимально документировать его, чтобы было все понятно.

<pre><code class="ruby">require 'socket' # Из стандартной библиотеки Ruby

# Открываем TCP сокет (Это можно было сделать и по-другому, но я решил
# не создавать сокет вручную, а воспользоваться более высоким уровнем).
# Как видно, сокет будет ожидать соединения (т.к. он является сервером) на
# localhost на 8000-м порту.
server = TCPServer.open('localhost', 8000)

# Бесконечный цикл.
# После того, как соединение от клиента будет принято - клиенту
# будет возвращен ответ и соединение закроется - программа перейдет
# в начало цикла, чтобы ожидать новый запрос
loop do
  # Принимаем входящее соединение клиента. Пока соединение не будет принято,
  # сокет будет ожидать его, и код ниже этой строки
  # не будет выполняться.
  client = server.accept
  client_headers = []

  # Получаем данные клиента построчно
  while line = client.gets
    client_headers &lt;&lt; line

    # Протокол HTTP предписывает \r\n как
    # перевод строки — всегда, независимо от операционной системы.
    # Поэтому, тело запроса нам не нужно (т.к. мы обрабатываем
    # только GET-запросы. Получить тело нам понадобилось бы
    # только в POST-запросе, а в GET-запросе тела просто-напросто нет).
    break if line == "\r\n"
  end

  # Поспим 10 секунд. Я сделал это для того, чтобы проиллюстрировать кое что.
  # Попробуйте одновременно обратиться в 2-х закладках браузера к веб-серверу и
  # вы увидите, что второй запрос будет происходить в два раза дольше
  # первого, т.к. он будет дожидаться, пока обработается первый запрос. Чтобы запросы
  # обрабатывались параллельно (т.е. не стояли в очереди) - можно сделать
  # несколько тредов (воркеров).
  sleep 10

  # Возвращаем ответ клиенту и закрываем соединение. В виде тела ответа
  # показываем клиенту его же заголовки.
  client.print "HTTP/1.1 200/OK\n"
  client.print "Content-type: text/html\n\n"
  client.print client_headers.join "&lt;br/&gt;"
  client.close
end</code></pre>

Я создал TCP-сервер при помощи объекта TCPServer, но можно было сделать и на чистом объекте Socket. Просто TCPServer, который наследуется от TCPSocket, а тот, в свою очередь, от Socket - уже настроен для того, чтобы быть сервером, то есть он умеет висеть на определенном хосте и порту и ожидать входящие соединения.

Из кода видно, что:
<ul>
	<li>Веб-сервер обрабатывает только GET-запрос</li>
	<li>Он не читает никаких файлов с диска, а просто отображает информацию о клиенте, который к нему присоединился</li>
	<li>Всегда отвечает со статусом 200</li>
</ul>
Можно сохранить код в файл server.rb, а затем запустить его:

<em>ruby server.rb</em>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>569</wp:post_id>
<wp:post_date>2010-10-21 23:59:17</wp:post_date>
<wp:post_date_gmt>2010-10-21 18:59:17</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>useless-webserver-on-ruby-illustrates-get-request-processing</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1293602292</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2367</wp:comment_id>
<wp:comment_author><![CDATA[Андрей]]></wp:comment_author>
<wp:comment_author_email>andgrankin@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://codestorage.ru</wp:comment_author_url>
<wp:comment_author_IP>92.125.220.87</wp:comment_author_IP>
<wp:comment_date>2010-10-22 00:25:27</wp:comment_date>
<wp:comment_date_gmt>2010-10-21 19:25:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Прикольно конечно, для начала. Теперь вам стоит показать обрaботку POST запорсов. Кстати, многие не понимают как передаются куки, хотя разобраться в этом довольно просто.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2368</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.1.47</wp:comment_author_IP>
<wp:comment_date>2010-10-22 00:39:24</wp:comment_date>
<wp:comment_date_gmt>2010-10-21 19:39:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, думаю, нужно добавить. Но сначала, надо добавить треды =)
Поддержку кук добавить довольно просто. А вот мультипарт запросы что-то ооочень ломает разбирать вручную. Тут цель не написать веб-сервер, а показать некоторые основополагающие вещи. Думаю, о чем написать дальше.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2367</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2369</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.1.47</wp:comment_author_IP>
<wp:comment_date>2010-10-22 00:44:45</wp:comment_date>
<wp:comment_date_gmt>2010-10-21 19:44:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Кстати, пытался протестировать быстродействие :) с помощью ab:

$ ab -n 5 -c 5 -k http://localhost:3000/

Получаю это: Benchmarking localhost (be patient)...apr_socket_recv: Connection refused (111).
Кто знает где собака зарыта? :) Я что-то не могу ничего придумать даже.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Параллельная обработка запросов в Ruby</title>
<link>http://torqueo.net/multithreaded-request-processing-in-ruby/</link>
<pubDate>Fri, 22 Oct 2010 08:04:46 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[async]]></category>

		<category domain="tag" nicename="async"><![CDATA[async]]></category>

		<category domain="tag"><![CDATA[multithreaded]]></category>

		<category domain="tag" nicename="multithreaded"><![CDATA[multithreaded]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=575</guid>
<description></description>
<content:encoded><![CDATA[В прошлой статье мы рассмотрели <a href="/useless-webserver-on-ruby-illustrates-get-request-processing/">создание простейшего веб-сервера и обработку GET-запросов</a>.

Но наш веб-сервер не может обрабатывать несколько соединений одновременно!  Если обратиться одновременно к серверу несколькими запросами, то они  встанут в очередь и будут ожидать завершения друг-друга, чтобы поступить  на обработку. Чтобы  обработка запросов выполнялась асинхронно, нужно  добавить в веб-сервер треды.

Что такое треды?
Треды - это программные потоки, которые  выполняются внутри одного процесса, они обеспечивают параллельное  выполнение кода. Это очень важно. Именно потому что треды выполняются  внутри одного процесса, расходуется меньше памяти, да и создать новый  тред и переключиться в него быстрее, чем создать новый процесс. Поэтому,  все современные веб-серверы и другие серверы используют в своей работе  треды.
Возможность создавать треды предоставляет нам операционная система,  поэтому, нужен низкоуровневый язык (например C), чтобы работать с  тредами. Однако, Ruby предоставляет нам интерфейс к тредам, поэтому, мы  можем использовать их и в Ruby.

Давайте добавим в веб-сервер парралельности, тогда он сможет  обрабатывать большее количество соединений за единицу времени. Я уберу  старые комментарии из кода и добавлю туда поддержку тредов.

<pre><code class="ruby">require 'socket'
server = TCPServer.open('localhost', 8000)

loop do
  # Как только сервер принимает соединение с клиентом,
  # тут же создается новый тред. И так будет для каждого
  # соединения с веб-сервером. Каждому соединению - отдельный тред.
  Thread.start(server.accept) do |client|
    client_headers = []

    while line = client.gets
      client_headers &lt;&lt; line
      break if line == "\r\n"
    end

    client.print "HTTP/1.1 200/OK\n"
    client.print "Content-type: text/html\n\n"
    client.print client_headers.join("&lt;br/&gt;")
    client.close
  end
end</code></pre>

Итак, мы получили парралельную обработку запросов и увидели, как  обрабатывается запрос.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>575</wp:post_id>
<wp:post_date>2010-10-22 13:04:46</wp:post_date>
<wp:post_date_gmt>2010-10-22 08:04:46</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>multithreaded-request-processing-in-ruby</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1293600105</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3970</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-12-29 11:16:26</wp:comment_date>
<wp:comment_date_gmt>2010-12-29 06:16:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Посмотреть бы на этот пример :) Про волокна думаю почитать и накидать недольшую заметку, когда придет полное понимание.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>3969</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3969</wp:comment_id>
<wp:comment_author><![CDATA[Vladimir]]></wp:comment_author>
<wp:comment_author_email>egotraumatic@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://rubydev.ru</wp:comment_author_url>
<wp:comment_author_IP>178.213.6.6</wp:comment_author_IP>
<wp:comment_date>2010-12-29 10:55:46</wp:comment_date>
<wp:comment_date_gmt>2010-12-29 05:55:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[На сколько я понял, там разница в ограничении в 4кб оперативной памяти на "фибру" =) Нужно будет уточнить, хотя раньше с небольшим энтузиазмом пытался найти инфу, но ничего более-менее толкового не находил, один пример использования при нахождении чисел из последовательности Фибоначи, но я так и не понял, зачем там волокна...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>3967</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3968</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-12-29 10:39:19</wp:comment_date>
<wp:comment_date_gmt>2010-12-29 05:39:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ахаха, стал читать статью из твоего блога, наткнулся на волокна: http://rubydev.ru/2010/11/chto-novogo-v-ruby-1-9/. Как раз хотел посмотреть, как с ними в Руби работать. Круто)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3967</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-12-29 10:18:49</wp:comment_date>
<wp:comment_date_gmt>2010-12-29 05:18:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, треды это воркеры. Мало того, есть еще и <em>волокна</em> (что-то вроде легковесного треда, как я понял, но в чем отличие - не разбирался): <a href="http://en.wikipedia.org/wiki/Fiber_%28computer_science%29" rel="nofollow">Fiber (computer science)</a>

<blockquote>на многоядерных процессорах и на многопроцессорных серверах запускается по процессу на каждое ядро. </blockquote>

Ну, это смотря как настроить, но очевидно, что для лучшего быстродействия именно так и нужно делать - выставлять кол-во процессов по кол-ву ядер.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>3957</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3957</wp:comment_id>
<wp:comment_author><![CDATA[Vladimir]]></wp:comment_author>
<wp:comment_author_email>egotraumatic@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://rubydev.ru</wp:comment_author_url>
<wp:comment_author_IP>178.213.6.6</wp:comment_author_IP>
<wp:comment_date>2010-12-29 04:50:48</wp:comment_date>
<wp:comment_date_gmt>2010-12-28 23:50:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо за хороший пост!

И спасибо за то, что я теперь могу использовать термин "тред", а то долго голову ломал как бы перевести thread с английского,до чего только не додумывался, в итоге вот читаю, и ведь тред хорошо звучит, и пофиг, что не по русски, главное, что у вас определение хорошее дано.


Кстати,я бы добавил еще, что на многоядерных процессорах и на многопроцессорных серверах запускается по процессу на каждое ядро. 

Я слабо знаком с деплоем, вебсерверами mongrel и unicorn, думаю вы сможете мне прояснить ситуацию, воркеры - это ведь и есть треды? Заранее благодарен за ответ!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Собираюсь писать клиентскую библиотеку для работы с XMPP на JS</title>
<link>http://torqueo.net/im-going-to-write-a-client-library-for-working-with-xmpp-on-js/</link>
<pubDate>Sat, 30 Oct 2010 20:04:13 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[BOSH]]></category>

		<category domain="tag" nicename="bosh"><![CDATA[BOSH]]></category>

		<category domain="tag"><![CDATA[Github]]></category>

		<category domain="tag" nicename="github"><![CDATA[Github]]></category>

		<category domain="tag"><![CDATA[jabber]]></category>

		<category domain="tag" nicename="jabber"><![CDATA[jabber]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[websocket]]></category>

		<category domain="tag" nicename="websocket"><![CDATA[websocket]]></category>

		<category domain="tag"><![CDATA[websocket-server]]></category>

		<category domain="tag" nicename="websocket-server"><![CDATA[websocket-server]]></category>

		<category domain="tag"><![CDATA[xmpp]]></category>

		<category domain="tag" nicename="xmpp"><![CDATA[xmpp]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=581</guid>
<description></description>
<content:encoded><![CDATA[Да, есть такое желание. Объясню, зачем мне захотелось такого извращения.

Я посмотрел все существующие библиотеки на JS для работы с XMPP. Все эти библиотеки стремятся отсылать запросы через BOSH и похожие технологии, но ни в одной из них не реализованы вебсокеты.

Я же хочу простого: пусть у меня будет имплементация jabber-мессенджера на сайте, которая будет работать в реальном времени. Я не хочу отсылать xmpp-запросы с сайта прямо на Jabber-сервер. Вместо этого я хочу написать ретранслятор, который был бы посредником между клиентом (то есть веб-страницей) и jabber-сервером. Эта штука всего лишь будет передавать запросы от клиента jabber-серверу, а от jabber-сервера получать ответы и передавать их клиенту. Мой ретранслятор должен быть выполнен в виде вебсокет-сервера, потому что это обеспечивает наивысшую скорость и убирает весь оверхед, в отличие от того же BOSH.

Кстати, вебсокет-сервер я уже написал, прикрутить туда ретрансляцию на jabber-сервер думаю, не займет много времени.

Вернемся обратно к клиентской части на JS. От нее мне хочется простого - чтобы она умела парсить XMPP, а так же формировать его. Она не будет ничего передавать - только парсить и генерировать. Как дополнение - можно сделать обсервер, который бы реагировал на определенные события, чтобы можно было удобно обновлять интерфейс клиента - но это в виде отдельного компонента.

Я планирую все обдумать и, если мое решение не изменится - открыть проект на <a href="http://github.com/RubberRails">Github</a>. <strong>Посему, мне требуются помощники, возможно - контрибуторы. Люди нужны такие - те, кто разбираются в XMPP, javascript-разработчики, ruby-разработчики, понимающие в создании socket-серверов.</strong>

Немного расскажу о том, почему та штука, которую я хочу сделать, будет прикольна. Достаточно в недалеком будущем мы увидим нечто новое в веб: веб-приложения начнут себя вести совсем как десктопные и даже круче - интерфейс будет обновляться в реальном времени без перезагрузки страницы. Добавил кто-то товар - хоп - в списке товаров появился новый. И так далее. Я считаю, что XMPP подходит для этого весьма и весьма хорошо. Достаточно посмотреть <a href="http://drop.io/howto">вон там</a>, чтобы убедиться, как будет в скором времени круто.

Так что чуваки. Давайте объединяться. Если возникло желание, отписывайтесь в комментах, там разберемся. Ну и вообще, жду всяческих комментариев по данной теме - может я где-то неправ?

Ссылки:
<ol>
	<li><a href="http://rfc2.ru/3920.rfc">RFC 3920 — Протокол XMPP: Ядро</a></li>
	<li><a href="http://xmpp.org/xmpp-software/libraries/">XMPP Libraries</a></li>
</ol>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>581</wp:post_id>
<wp:post_date>2010-10-31 01:04:13</wp:post_date>
<wp:post_date_gmt>2010-10-30 20:04:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>im-going-to-write-a-client-library-for-working-with-xmpp-on-js</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1288469488</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3901</wp:comment_id>
<wp:comment_author><![CDATA[JSman]]></wp:comment_author>
<wp:comment_author_email>jsman@mailinator.com</wp:comment_author_email>
<wp:comment_author_url>http://vk.com/id778879</wp:comment_author_url>
<wp:comment_author_IP>91.210.24.34</wp:comment_author_IP>
<wp:comment_date>2010-12-27 03:31:23</wp:comment_date>
<wp:comment_date_gmt>2010-12-26 22:31:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Собираюсь заняться тем же самым. icq 9166196. JSman]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2608</wp:comment_id>
<wp:comment_author><![CDATA[Kuroki Kaze]]></wp:comment_author>
<wp:comment_author_email>kurokikaze@yandex.ru</wp:comment_author_email>
<wp:comment_author_url>http://kuroikaze85.wordpress.com</wp:comment_author_url>
<wp:comment_author_IP>91.207.100.2</wp:comment_author_IP>
<wp:comment_date>2010-11-02 15:36:26</wp:comment_date>
<wp:comment_date_gmt>2010-11-02 10:36:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Если будет время, готов помочь с websockets и javascript'ом.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2609</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-11-02 16:50:36</wp:comment_date>
<wp:comment_date_gmt>2010-11-02 11:50:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Хм. Не знаю, что там делать с вебсокетами, прокси я почти написал, хотя, нужно портировать на вебсокеты либу strophe - вот там да, помощь может пригодиться, т.к. она работает с BOSH, а надо научить ее и вебсокетам.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2608</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2572</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.236.149</wp:comment_author_IP>
<wp:comment_date>2010-10-31 02:06:16</wp:comment_date>
<wp:comment_date_gmt>2010-10-30 21:06:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Отлично) Я думаю нам нужно пообщаться в скайпе/аське на днях)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2571</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2573</wp:comment_id>
<wp:comment_author><![CDATA[Ivan Osipov]]></wp:comment_author>
<wp:comment_author_email>ivanosipov@mail.ru</wp:comment_author_email>
<wp:comment_author_url>http://ivanosipov.ru/</wp:comment_author_url>
<wp:comment_author_IP>78.107.254.201</wp:comment_author_IP>
<wp:comment_date>2010-10-31 02:17:06</wp:comment_date>
<wp:comment_date_gmt>2010-10-30 21:17:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[На мыло тебе отравил свои контакты]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2572</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2570</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.236.149</wp:comment_author_IP>
<wp:comment_date>2010-10-31 01:53:24</wp:comment_date>
<wp:comment_date_gmt>2010-10-30 20:53:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, для начала думаю, что нужно добавлять друг-друга в контакт лист. Кстати, как это реализовано в XMPP? Там же наверно нужно подтверждение или какая-то верификация?

Я бы хотел следующего: юзер кликает на сайте на ссылку "общаться", рядом с ником другого юзера, открывается окно чата. Первый юзер пишет второму сообщение, второй его видит, а так же видит нотис: этот юзер не в вашем контакт-листе, добавить его?

Ну вот, примерно так)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2568</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2571</wp:comment_id>
<wp:comment_author><![CDATA[Ivan Osipov]]></wp:comment_author>
<wp:comment_author_email>ivanosipov@mail.ru</wp:comment_author_email>
<wp:comment_author_url>http://ivanosipov.ru/</wp:comment_author_url>
<wp:comment_author_IP>78.107.254.201</wp:comment_author_IP>
<wp:comment_date>2010-10-31 02:00:08</wp:comment_date>
<wp:comment_date_gmt>2010-10-30 21:00:08</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вообще реально добавлять юзеров друг другу в контакт-листы и без их согласия. Можно добавлять каждого нового пользователя сайта автоматически в ростеры всем пользователям - в Ejabberd это называется "Shared roster".

Примерно так и работает Jabber :) По умолчанию сообщения доставляются всем, а наличие авторизации (подписки) обуславливает лишь доступность статусов собеседнику.
Можно просто тянуть состояние авторизации из бд джаббер-сервера и выводить/не выводить сообщение об отсутствии собеседника в контакт-листе.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2570</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2568</wp:comment_id>
<wp:comment_author><![CDATA[Ivan Osipov]]></wp:comment_author>
<wp:comment_author_email>ivanosipov@mail.ru</wp:comment_author_email>
<wp:comment_author_url>http://ivanosipov.ru/</wp:comment_author_url>
<wp:comment_author_IP>78.107.254.201</wp:comment_author_IP>
<wp:comment_date>2010-10-31 01:47:28</wp:comment_date>
<wp:comment_date_gmt>2010-10-30 20:47:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А как будет происходить общение между пользователями сайта? Они будут добавляться друг к другу в ростеры? Или же решено реализовать что-то вроде многопользовательского чата?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2567</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2567</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.236.149</wp:comment_author_IP>
<wp:comment_date>2010-10-31 01:44:02</wp:comment_date>
<wp:comment_date_gmt>2010-10-30 20:44:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Не знаю, насколько это будет перспективно, но, думаю будет. Вообще то есть уже штуки, позволяющие не писать весь тот код, который предполагается писать, например - <a href="http://www.kaazing.com/" rel="nofollow">Kaazing Gateway</a>. Одна проблема - я не хочу привязывать свое веб-приложение к таким неизвестным сервисам, тем более то, что они предлагают, можно сделать и самому и не словить дофига гемора.

Насчет ретранслятора. Пока подразумевается, что он будет перенаправлять запросы на локальный Jabber-сервер. Так как то, что я задумываю - рассчитано на конкретный сайт, куда мы захотим внедрить взаимодействие с jabber-сервером. Не знаю, насколько это оправдано, может быть есть лучшие варианты и все такое, я пока не большой спец в xmpp =) Буду рад комментариям на это.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2566</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2566</wp:comment_id>
<wp:comment_author><![CDATA[Ivan Osipov]]></wp:comment_author>
<wp:comment_author_email>ivanosipov@mail.ru</wp:comment_author_email>
<wp:comment_author_url>http://ivanosipov.ru/</wp:comment_author_url>
<wp:comment_author_IP>78.107.254.201</wp:comment_author_IP>
<wp:comment_date>2010-10-31 01:30:34</wp:comment_date>
<wp:comment_date_gmt>2010-10-30 20:30:34</wp:comment_date_gmt>
<wp:comment_content><![CDATA[На мой взгляд, очень перспективный проект. 
Единственное, ретранслятор будет иметь один IP, а при множественных c2s (клиент-сервер) соединениях с одного IP возможны ограничения со стороны администрации Jabber-сервера. Но тут вопрос, я думаю, будет решен своевременным реагированием на abuse от админов джаббер-серверов (в настоящее время очень много любителей организовывать всяческие флуд-атаки и спам-рассылки, с популяризацией Jabber их станет еще больше) и надежной защитой от таких пользователей (капча, к примеру).
Готов помочь чем смогу ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Jabber via Websockets: создаём прокси-сервер</title>
<link>http://torqueo.net/jabber-via-websockets-create-a-proxy-server/</link>
<pubDate>Sun, 31 Oct 2010 21:32:18 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[ejabberd]]></category>

		<category domain="tag" nicename="ejabberd"><![CDATA[ejabberd]]></category>

		<category domain="tag"><![CDATA[jabber]]></category>

		<category domain="tag" nicename="jabber"><![CDATA[jabber]]></category>

		<category domain="tag"><![CDATA[proxy]]></category>

		<category domain="tag" nicename="proxy"><![CDATA[proxy]]></category>

		<category domain="tag"><![CDATA[psi]]></category>

		<category domain="tag" nicename="psi"><![CDATA[psi]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[websocket]]></category>

		<category domain="tag" nicename="websocket"><![CDATA[websocket]]></category>

		<category domain="tag"><![CDATA[xmpp]]></category>

		<category domain="tag" nicename="xmpp"><![CDATA[xmpp]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=587</guid>
<description></description>
<content:encoded><![CDATA[Продолжу размышления по моей <a href="http://torqueo.net/im-going-to-write-a-client-library-for-working-with-xmpp-on-js/">предыдущей заметке</a> и попытаюсь что-нибудь написать.

Я посмотрел существующие Jabber-серверы и ни у одного не обнаружил поддержку вебсокетов. Думаю, это просто вопрос времени, когда разработчики допишут поддержку вебсокетов в свои jabber-серверы. Можно написать свой джаббер-сервер, если совсем делать нефиг, можно ждать, когда разработчики добавят поддержку вебсокетов. Но мы не будем их ждать и сделаем эту поддержку сами. Но как? Первое что приходит в голову - создать прокси-сервер, который будет уметь получать вебсокет-запросы и перенаправлять их jabber-серверу.

Для тестов я поставил jabber-сервер <a href="http://www.ejabberd.im/">ejabberd</a> на локальную машину, хотя можно было воспользоваться и многочисленными узлами, типа jabber.ru. Также я поставил клиент <a href="http://psi-im.org/">Psi</a> и зарегистрировался при помощи него на локальном сервере.

Итак. Давайте для начала создадим html5 документ, который будет посылать запрос на наш jabber-прокси-сервер:
<pre><code class="html">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;title&gt;Jabber Websocket Proxy Test&lt;/title&gt;
    &lt;script src="https://ajax.googleapis.com/ajax/libs/mootools/1.3.0/mootools-yui-compressed.js"&gt;&lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
&lt;script&gt;
var socket = new WebSocket('ws://localhost:6222/');
socket.onopen = function() {
  var xml  = "&lt;?xml version='1.0' encoding='UTF-8'?&gt;"
      xml += "&lt;stream:stream to='localhost' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams' xml:lang='ru' version='1.0'&gt;";
  socket.send(xml);
  socket.onmessage = function(e) {
    var data = e.data
    alert(data)
  }
}
&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
Как видно из примера, мы будем посылать кусок xml на сервер (начало xml-потока), что означает, что мы готовы авторизоваться на сервере. В ответ jabber-сервер должен нам вернуть некий ответ, в данном случае - список поддерживаемых механизмов аутентификации на сервере. Мы просто выведем полученный с сервера ответ при помощи js-функции alert() на экран. Этого нам будет достаточно,чтобы убедиться, что наш прокси работает.

Теперь приведу код jabber-via-websocket сервера на Ruby:
<pre><code class="ruby">require 'em-websocket'
options = {
  :port        =&gt; 6222,
  :remote_host =&gt; 'localhost',
  :remote_port =&gt; 5222
}
EventMachine.run {
  class Server &lt; EventMachine::Connection
      def initialize(input, output, server_close, client_close)
        @input        = input
        @output       = output
        @server_close = server_close
        @client_close = client_close
        @input_sid = @input.subscribe { |msg| send_data msg }
        @client_close_sid = @client_close.subscribe { |msg| close_connection }
      end
      def receive_data(data)
        @output.push(data)
      end
      def unbind
        @input.unsubscribe(@input_sid)
        @client_close.unsubscribe(@client_close_sid)
      end
  end

  EventMachine::WebSocket.start(:host =&gt; "0.0.0.0", :port =&gt; options[:port]) do |ws|
    ws.onopen {
      output       = EM::Channel.new
      input        = EM::Channel.new
      server_close = EM::Channel.new
      client_close = EM::Channel.new
      output_sid = output.subscribe { |msg| ws.send msg }
      server_close_sid = server_close.subscribe { |msg| ws.close_connection }
      EventMachine::connect options[:remote_host], options[:remote_port], Server, input, output, server_close, client_close
      ws.onmessage { |msg| input.push(msg)}
      ws.onclose {
        output.unsubscribe(output_sid)
        server_close.unsubscribe(server_close_sid)
      }
    }
  end
}</code></pre>
Не буду подробно описывать код. Скажу лишь, что он перенаправляет все поступившие запросы с 6222 порта на порт 5222 (стандартный порт jabber).
Остается запустить из консоли наш прокси-сервер (ruby proxy.rb) и html5 пример в google chrome и убедиться, что все работает. Мы должны увидеть алерт со следующим содержимым:
<pre><code class="xml">&lt;?xml version='1.0'?&gt;
&lt;stream:stream xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams' id='749528783' from='localhost' version='1.0' xml:lang='en'&gt;
    &lt;stream:features&gt;
        &lt;mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'&gt;
            &lt;mechanism&gt;PLAIN&lt;/mechanism&gt;
            &lt;mechanism&gt;DIGEST-MD5&lt;/mechanism&gt;
        &lt;/mechanisms&gt;
        &lt;c xmlns='http://jabber.org/protocol/caps' hash='sha-1' node='http://www.process-one.net/en/ejabberd/' ver='8P/XuMtKq0lNk50DLBC8v+TXoAU='/&gt;
        &lt;register xmlns='http://jabber.org/features/iq-register'/&gt;
    &lt;/stream:features&gt;</code></pre>
Это был первый шаг в сторону создания инструмента, позволяющего общаться через jabber прямо с веб-страницы. Продолжение следует.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>587</wp:post_id>
<wp:post_date>2010-11-01 02:32:18</wp:post_date>
<wp:post_date_gmt>2010-10-31 21:32:18</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>jabber-via-websockets-create-a-proxy-server</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1290250895</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>jabber-via-websockets-%d1%81%d0%be%d0%b7%d0%b4%d0%b0%d1%91%d0%bc-%d0%bf%d1%80%d0%be%d0%ba%d1%81%d0%b8-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>2985</wp:comment_id>
<wp:comment_author><![CDATA[Токарчук Андрей]]></wp:comment_author>
<wp:comment_author_email>netandreus@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://tokarchuk.ru/</wp:comment_author_url>
<wp:comment_author_IP>85.140.60.157</wp:comment_author_IP>
<wp:comment_date>2010-11-21 01:51:40</wp:comment_date>
<wp:comment_date_gmt>2010-11-20 20:51:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Её (библиотеки для работы с Jabber на Websockets) нет, потому, что стандарт вебсокетов до сих пор не стандартизирован толком :-)
http://stackoverflow.com/questions/1850162/is-there-an-open-source-websockets-javascript-xmpp-library]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2986</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.236.146</wp:comment_author_IP>
<wp:comment_date>2010-11-21 02:29:01</wp:comment_date>
<wp:comment_date_gmt>2010-11-20 21:29:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Дак это и не важно, ведь для работы via BOSH тоже нет никаких стандартов - это просто способ передачи данных, я честно говоря, не понимаю, что там нужно стандартизировать.Возможно, речь идет о стандарте в виде расширения для XMPP, если так, то стандартизировать, конечно, нужно.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2985</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2977</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>217.114.236.146</wp:comment_author_IP>
<wp:comment_date>2010-11-20 16:00:39</wp:comment_date>
<wp:comment_date_gmt>2010-11-20 11:00:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Эээ, какой-такой vim, где? И где тут скрины? Искренне не понял вопроса)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2972</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2978</wp:comment_id>
<wp:comment_author><![CDATA[Тормоз]]></wp:comment_author>
<wp:comment_author_email>brokenbrake+realme@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://BrokenBrake.biz/about/</wp:comment_author_url>
<wp:comment_author_IP>109.171.16.150</wp:comment_author_IP>
<wp:comment_date>2010-11-20 16:06:43</wp:comment_date>
<wp:comment_date_gmt>2010-11-20 11:06:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Жаль :) А то, что здесь не скрины - не понял я, куски кода с подсветкой выглядят как скриншты из текстового редактора.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>2977</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>2972</wp:comment_id>
<wp:comment_author><![CDATA[Тормоз]]></wp:comment_author>
<wp:comment_author_email>brokenbrake+realme@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://BrokenBrake.biz/about/</wp:comment_author_url>
<wp:comment_author_IP>109.171.16.150</wp:comment_author_IP>
<wp:comment_date>2010-11-20 09:32:54</wp:comment_date>
<wp:comment_date_gmt>2010-11-20 04:32:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Привет. На скринах Vim? Если да, то что можешь посоветовать для оптимизации работы с HTML и CSS? Может в блоге напишешь об этом? Многим было бы интересно, может в обсуждении ещё что-то интересное выясним :)

P.S. У тебя "оповещать о новых комментариеВ по почте".]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Полезное</title>
<link>http://torqueo.net/useful/</link>
<pubDate>Fri, 05 Nov 2010 05:07:36 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?page_id=593</guid>
<description></description>
<content:encoded><![CDATA[<ul>
	<li><a href="http://static.shopify.com/s/files/1/0042/9602/files/website-stencil-template-letter.pdf?1264203576">Печатный лайот для набросков</a></li>
	<li><a href="http://rails-nutshell.labs.oreilly.com/">Rails 3 in a Nutshell</a></li>
	<li><a href="http://railstutorial.org/book">Ruby on Rails Tutorial </a></li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>593</wp:post_id>
<wp:post_date>2010-11-05 10:07:36</wp:post_date>
<wp:post_date_gmt>2010-11-05 05:07:36</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>useful</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>page</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1288933980</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Уведомлялка о новых твитах для Ubuntu на Ruby</title>
<link>http://torqueo.net/new-tweets-notifier-for-ubuntu-with-ruby/</link>
<pubDate>Fri, 24 Dec 2010 12:27:12 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[twitter]]></category>

		<category domain="tag" nicename="twitter"><![CDATA[twitter]]></category>

		<category domain="tag"><![CDATA[ubuntu]]></category>

		<category domain="tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=601</guid>
<description></description>
<content:encoded><![CDATA[Мне надоело постоянно лазать в твиттер, чтобы посмотреть, что там новенького пишут. Поэтому, потакая своей лени, я решил автоматизировать это дело :)
Сразу код:

<pre><code class="ruby">require 'twitter'
last_created_at = 0

Twitter.configure do |config|
  config.consumer_key       = 'your key here'
  config.consumer_secret    = 'your key here'
  config.oauth_token        = 'your token here'
  config.oauth_token_secret = 'your token here'
end

client = Twitter::Client.new

loop do
  tweet = client.home_timeline.first

  if DateTime.parse(tweet.created_at) > last_created_at
    system("notify-send -u normal -t 5000 -i info '#{tweet.user.screen_name}' '#{tweet.text}'")
    last_created_at = DateTime.parse(tweet.created_at)
  end

  sleep 60
end</code></pre>

Эта штука ползает каждую минуту в мой твиттер и показывает, что там новенького. Есть небольшая недоработка: если с предыдущего захода появятся, например, 2 новых твита, то будет показан только крайний. Если кому не лень это исправить - прошу кинуть код в комменты.

Как это юзать? Для начала нужно установить:
<ul>
	<li>sudo apt-get install libnotify-bin</li>
	<li>gem install twitter</li>
      	<li>Зарегистрировать свое приложение тут <a href="http://twitter.com/apps/new">http://twitter.com/apps/new</a> и вставить в скрипт в конфигурацию полученные ключи и токены</li>
</ul>

Дальше сохранить предоставленный код в файл и запустить его из консоли:

<pre><code class="bash">$ ruby twitter.rb&</code></pre>

Результат выглядит так:
<img src="http://torqueo.net/wp-content/uploads/2010/12/2iho.jpg" alt="2iho" title="2iho" width="543" height="324" class="alignleft size-full wp-image-608" />

<strong>UPD 13.01.2011</strong>

<a href="http://twitter.com/Locke23rus">Кирилл Никитин</a> прислал мне исправленный вариант, который я реквестовал выше, за что ему решпект.
<pre><code class="ruby">require 'twitter'

last_id = nil
tweets = []

Twitter.configure do |config|
  config.consumer_key       = 'your key here'
  config.consumer_secret    = 'your key here'
  config.oauth_token        = 'your token here'
  config.oauth_token_secret = 'your token here'
end

client = Twitter::Client.new

loop do
  if last_id
    tweets = client.home_timeline :since_id => last_id
  else 
    tweets << client.home_timeline.first
  end
  
  last_id = tweets.first.id unless tweets.empty?
  
  tweets.reverse.each do |tweet|
    system("notify-send -u normal -t 5000 -i info '#{tweet.user.screen_name}' '#{tweet.text}'")
  end

  tweets.clear
  sleep 60
end
</code></pre>
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>601</wp:post_id>
<wp:post_date>2010-12-24 17:27:12</wp:post_date>
<wp:post_date_gmt>2010-12-24 12:27:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>new-tweets-notifier-for-ubuntu-with-ruby</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1294917033</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3983</wp:comment_id>
<wp:comment_author><![CDATA[Vladimir]]></wp:comment_author>
<wp:comment_author_email>egotraumatic@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://rubydev.ru</wp:comment_author_url>
<wp:comment_author_IP>178.213.6.6</wp:comment_author_IP>
<wp:comment_date>2010-12-30 01:15:45</wp:comment_date>
<wp:comment_date_gmt>2010-12-29 20:15:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[а где доку достать по rubygem Twitter? Но ссылке указанной на github совсем ничего нету... неужели остается только по блогам шустрить?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3844</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.17.169</wp:comment_author_IP>
<wp:comment_date>2010-12-24 23:27:30</wp:comment_date>
<wp:comment_date_gmt>2010-12-24 18:27:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А че ужас-то? Главное, следить в твиттере за теми, кто интересен, а не за всеми подряд. Вот тогда - нормально, у меня вот раз в полчаса-час всплывает подсказка :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>3841</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3841</wp:comment_id>
<wp:comment_author><![CDATA[Тормоз]]></wp:comment_author>
<wp:comment_author_email>brokenbrake@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://brokenbrake.biz/about/</wp:comment_author_url>
<wp:comment_author_IP>109.171.16.150</wp:comment_author_IP>
<wp:comment_date>2010-12-24 19:15:56</wp:comment_date>
<wp:comment_date_gmt>2010-12-24 14:15:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ужас. Забей свой мозг отвлекалками! )
У меня вот обратный процесс - http://brokenbrake.biz/2010/09/13/bye-forums]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>3995</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2010-12-30 11:15:49</wp:comment_date>
<wp:comment_date_gmt>2010-12-30 06:15:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, там какой-то косяк с документацией. Можно попробовать сгенерить на локальной машине, либо смотреть предыдущую версию тут: http://rdoc.info/gems/twitter/0.9.12/frames]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>3983</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4213</wp:comment_id>
<wp:comment_author><![CDATA[Тормоз]]></wp:comment_author>
<wp:comment_author_email>brokenbrake@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://brokenbrake.biz/about/</wp:comment_author_url>
<wp:comment_author_IP>109.171.16.150</wp:comment_author_IP>
<wp:comment_date>2011-01-13 21:31:47</wp:comment_date>
<wp:comment_date_gmt>2011-01-13 16:31:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну вот, блин, зачем писать пост, а потом удалять? У меня теперь в блогролле поломанная ссылка.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>myphoto</title>
<link>http://torqueo.net/new-tweets-notifier-for-ubuntu-with-ruby/myphoto/</link>
<pubDate>Fri, 24 Dec 2010 12:34:38 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2010/12/myphoto.png</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>606</wp:post_id>
<wp:post_date>2010-12-24 17:34:38</wp:post_date>
<wp:post_date_gmt>2010-12-24 12:34:38</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>myphoto</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>601</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2010/12/myphoto.png</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/12/myphoto.png</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"207";s:6:"height";s:3:"131";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:19:"2010/12/myphoto.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"myphoto-150x131.png";s:5:"width";s:3:"150";s:6:"height";s:3:"131";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>2iho</title>
<link>http://torqueo.net/new-tweets-notifier-for-ubuntu-with-ruby/2iho/</link>
<pubDate>Fri, 24 Dec 2010 12:41:41 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2010/12/2iho.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>608</wp:post_id>
<wp:post_date>2010-12-24 17:41:41</wp:post_date>
<wp:post_date_gmt>2010-12-24 12:41:41</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>2iho</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>601</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2010/12/2iho.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2010/12/2iho.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"543";s:6:"height";s:3:"324";s:14:"hwstring_small";s:23:"height='76' width='128'";s:4:"file";s:16:"2010/12/2iho.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"2iho-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"2iho-300x179.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"179";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Javascript: текущий элемент списка</title>
<link>http://torqueo.net/javascript-current-list-item-revisited/</link>
<pubDate>Thu, 13 Jan 2011 13:19:37 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=616</guid>
<description></description>
<content:encoded><![CDATA[Навеяно работой. Давно хотел об этом написать.

Часто приходится видеть извращение, когда разрабы пытаются реализовать на JS поведение, что нужно выбрать один элемент из списка.

Опишу подробней в виде кода. Итак, даны стили и список:

<pre><code class="html">&lt;style type="text/css"&gt;
    ul li.current { color: red; }
&lt;/style&gt;

&lt;ul&gt;
  &lt;li&gt;First&lt;/li&gt;
  &lt;li class="current"&gt;Second&lt;/li&gt;
  &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;</code></pre>

Как обычно делают разрабы:

<pre><code class="javascript">$().ready(function() {
    var ul  = $('body ul');

    ul.find('li').click(function() {
        ul.find('li.current').removeClass('current');
        $(this).addClass('current');
    })
})</code></pre>

При таком подходе приходится обходить все элементы списка, что негативно сказывается на производительности, особенно, если списки огромные.

Как нужно делать:

<pre><code class="javascript">$().ready(function() {
    var ul  = $('body ul');
    var cur = ul.find('li.current');

    ul.find('li').click(function() {
        if (cur.length) {
            cur.removeClass('current');
        }

        cur = $(this);
        cur.addClass('current');
    })
})</code></pre>

Тут мы просто запоминаем текущий элемент. Вроде бы все просто, но чаще всего, почему-то встречается первый подход. Да, кода получилось больше (хотя тут можно его уменьшить), но зато мы меньше теребим DOM.

Некий Karneds написал комментарий, как по его мнению стоит решить этот вопрос. Я было засомневался и убрал пост с главной, чтобы проверить, так ли это на самом деле. Догадка была такая, что сначала при обработке дерева DOM находятся все указанные в селекторе таги и только потом происходит поиск по атрибутам найденных тагов. Чтобы проверить мою догадку я обратился к небезызвестному <a href="http://chikuyonok.ru">Сергею Чикуёнку</a>:

<blockquote>Есть список:

<pre><code>&lt;ul&gt;
  &lt;li&gt;First&lt;/li&gt;
  &lt;li class="current"&gt;Second&lt;/li&gt;
  &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;</code></pre>


Если мы напишем обработчик (jquery):

<pre><code class="javascript">$('ul li.current').click(function() { ... })</code></pre>

то будет ли это означать, что селектор ul li.current проверит сначала первый элемент списка (First) на наличие класса current, прежде чем совпасть со вторым элементом?</blockquote>

И вот что он ответил:

<blockquote>зависит от браузера. В новых используется встроенный querySelectorAll(), в старых (например IE) будет бегать по элементам, и в данном случае будут проверены все LI-элементы (насколько я знаю, поиск идёт справа налево, то есть сначала выберутся все LI элементы на странице, а потом отфильтруются те, которые находятся внутри UL).

То есть для старых браузеров — да, сначала проверит First (порядок элементов сохраняется)
</blockquote>

Так что, догадка подтвердилась. Это, кончно, не касается новых браузеров, которые умеют искать и по атрибутам. Хотя, если текущий элемент будет помечен не атрибутом, а свойством объекта, то всё же касается.

<em>Мораль сей басни - лучше всегда "сохранять" текущий элемент списка в отдельной переменной, а не искать его каждый раз заново.
</em>

<small><em>P.S: Для Тормоза - извиняй, специально для тебя публикую пост с новым адресом, дабы он отметился в RSS ленте.</em></small>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>616</wp:post_id>
<wp:post_date>2011-01-13 18:19:37</wp:post_date>
<wp:post_date_gmt>2011-01-13 13:19:37</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>javascript-current-list-item-revisited</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1303311178</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>4209</wp:comment_id>
<wp:comment_author><![CDATA[Karneds]]></wp:comment_author>
<wp:comment_author_email>admin@lumenarium.ru</wp:comment_author_email>
<wp:comment_author_url>http://lumenarium.ru</wp:comment_author_url>
<wp:comment_author_IP>93.81.125.75</wp:comment_author_IP>
<wp:comment_date>2011-01-13 18:32:02</wp:comment_date>
<wp:comment_date_gmt>2011-01-13 13:32:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Для тега ul ставим класс например menu
код на js будет выглядеть так

<pre><code class="javascript">$('ul.menu li').click(function(){
    $('ul.menu li.current').removeClass('current');
    $(this).addClass('current');
})</code></pre>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4210</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2011-01-13 19:19:33</wp:comment_date>
<wp:comment_date_gmt>2011-01-13 14:19:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Хочешь понять что надо оптимизировать работу с DOM пользуй IE. А вообще я питаю адскую нелюбовь к ИЕ .]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4216</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.31.238</wp:comment_author_IP>
<wp:comment_date>2011-01-14 00:22:16</wp:comment_date>
<wp:comment_date_gmt>2011-01-13 19:22:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ужасно осмысленный комментарий.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>4210</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4236</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://twmap.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2011-01-14 11:10:12</wp:comment_date>
<wp:comment_date_gmt>2011-01-14 06:10:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Таки стараемся =))))  Вообще вчера я адски был сосредоточен на обдумывание canvas на opera mobile которая крутиться на touch устройстве, и этот коммент лишь малая доля чего я отжег в процессе обдумавание =)))))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>4216</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4239</wp:comment_id>
<wp:comment_author><![CDATA[click]]></wp:comment_author>
<wp:comment_author_email>click@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.126.173.212</wp:comment_author_IP>
<wp:comment_date>2011-01-14 12:52:39</wp:comment_date>
<wp:comment_date_gmt>2011-01-14 07:52:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[ага - "особенно, если списки огромные" - 
нуну - особенно вот так: ul.find('li').click(function()]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4240</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.82.224.38</wp:comment_author_IP>
<wp:comment_date>2011-01-14 12:58:36</wp:comment_date>
<wp:comment_date_gmt>2011-01-14 07:58:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Что "ну ну"? У вас есть другой способ навесить обработчик клика на элемент?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>4239</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4589</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://twmap.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2011-01-28 11:35:35</wp:comment_date>
<wp:comment_date_gmt>2011-01-28 06:35:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вопрос а $ не кеширует уже найденное ?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>4236</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4591</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-01-28 12:37:35</wp:comment_date>
<wp:comment_date_gmt>2011-01-28 07:37:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[В данном случае, при каждом клике по элементу, все равно приходится пробегать по всем элементам списка, чтобы убрать у них класс current, поэтому, кэширования тут никакого нет.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>4589</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5738</wp:comment_id>
<wp:comment_author><![CDATA[Alexey]]></wp:comment_author>
<wp:comment_author_email>medvedev.alexey@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.191.146.34</wp:comment_author_IP>
<wp:comment_date>2011-03-11 17:12:12</wp:comment_date>
<wp:comment_date_gmt>2011-03-11 12:12:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[<code>
$('#menu li').click(function(){
  $(this)toggleClass('current');
});

</code>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5741</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-11 18:37:24</wp:comment_date>
<wp:comment_date_gmt>2011-03-11 13:37:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Типичная ошибка. Это ни чем не отличается от моего первого примера, разве что короче. Да, это красиво, но - не быстро. Если мало JS то скорость, конесно, не критична. Но вот если у вас Rich Application - тогда такими вещами стоит озаботиться.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5738</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Как должен выглядеть идеальный WYSIWYG</title>
<link>http://torqueo.net/how-sholud-look-the-perfect-wysiwyg/</link>
<pubDate>Mon, 31 Jan 2011 08:16:02 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[mootools]]></category>

		<category domain="tag" nicename="mootools"><![CDATA[mootools]]></category>

		<category domain="tag"><![CDATA[wysiwyg]]></category>

		<category domain="tag" nicename="wysiwyg"><![CDATA[wysiwyg]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=635</guid>
<description></description>
<content:encoded><![CDATA[В студии Артемия нашего Лебедева выпустили визуальный редактор на JS под названием <a href="http://www.artlebedev.ru/tools/reformator/">Реформатор</a>. Именно так в моем понимании должен выглядеть WYSIWYG.
Мне для моих проектов нужен визуальный редактор, чтобы удобно было возиться с текстами на странице. Так вот, я решил написать собственный. Пока у него будет поддержка только FF &gt; 3, мне этого пока достаточно. Я уже написал немного кода и скоро выложу его на github.

Список того, что должно и не должно быть в моём визуальном редакторе:
<ul>
	<li>Никаких возможностей для изменения цвета текста или бэкграунда</li>
	<li>Все стили берем из стилей css файла для контент-зоны сайта, т.е. того места, где располагается текст.</li>
	<li>В редакторе все должно выглядеть именно так, как будет выглядеть на сайте.</li>
	<li>Редактор увеличивает свою высоту по мере набора текста.</li>
	<li>Удобное боковое меню со стилями (как в <a href="http://www.artlebedev.ru/tools/reformator/">Реформаторе</a>).</li>
	<li>Картинки можно перетаскивать с рабочего стола прямо в редактор и сразу изменять их размер при помощи курсора мыши. Не нужно будет сначала загружать картинку на сайт,а потом вставлять ее в текст.</li>
	<li>Не будет кучи кнопок, в которых легко запутаться.</li>
	<li>Не будет выравнивания текста. У нас же будут стили. Если стиль предполагает выравнивание текста по правому краю - то пожалуйста. Это - как задал дизайнер. Редактор сайта не должен хотеть сделать того, чего не задумал дизайнер.</li>
	<li>По-умолчанию будут: выделение (полужирный, италик, зачеркивание), нумерованный и ненумерованный списки, добавление гиперссылки.</li>
	<li>Будет undo, redo, очистка форматирования, вставка из word (пока не знаю, как сделать такую вставку наиболее удобно).</li>
	<li>Текст будет автоматически заворачиваться в параграфы. Озаглавленные параграфы будут заворачиваться в тег section.</li>
	<li>Поддержка только HTML5.</li>
	<li>Никаких тебе спелл-чекеров, таблиц спец-символов и прочей ненужной блуды.</li>
	<li>Все это будет написано на mootools, как расово верном фреймворке.</li>
	<li>Специальная парсилка для стилей контент-зоны.</li>
	<li>Мануал, как правильно работать с визуальным редактором.</li>
	<li>... может - чето забыл, напишу, если вспомню.</li>
</ul>
<strong>Еще одна очень важная фишка, которую хочу выделить:</strong>

Предполагается, что визуальный редактор будет использоваться прямо на странице со статьёй. Посмотрите на статью, которую сейчас читаете. Представьте, что если бы вы были прямо сейчас наделены админскими правами то, кликнув (гипотетический клик) на статью вы бы смогли ее прямо здесь же редактировать. Что бы произошло при клике на статью? Примерно это:
<ol>
	<li>Вокруг текста статьи появилась бы рамка - признак того, что мы можем редактировать статью. Или нет - еще лучше: все остальное на странице, кроме статьи, затемнилось бы.</li>
	<li>Сбоку бы появилось плавающее меню с кнопками. И это меню можно было бы перетаскивать в любую часть вьюпорта по своему усмотрению, а так же сворачивать.</li>
	<li>При ухода фокуса со статьи плавающее меню бы исчезало.</li>
	<li>Если мы попытаемся закрыть окно, то появляется диалог с прогрессбаром, в котором отображается процесс сохранения статьи. Только после этого окно закрывается.</li>
	<li>Где-то будет расположена кнопка принудительного сохранения статьи. Или ее совсем не будет. Тут подумаю еще.</li>
</ol>
Ждите ссылку на проект, кому это интересно. А от вас жду предложений по улучшению.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>635</wp:post_id>
<wp:post_date>2011-01-31 13:16:02</wp:post_date>
<wp:post_date_gmt>2011-01-31 08:16:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-sholud-look-the-perfect-wysiwyg</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1296543228</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>4679</wp:comment_id>
<wp:comment_author><![CDATA[Тормоз]]></wp:comment_author>
<wp:comment_author_email>brokenbrake@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://brokenbrake.biz/about/</wp:comment_author_url>
<wp:comment_author_IP>109.171.16.150</wp:comment_author_IP>
<wp:comment_date>2011-01-31 14:42:06</wp:comment_date>
<wp:comment_date_gmt>2011-01-31 09:42:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[У меня браузер чуть не умер, пока открывал это. Экран не маленький, но в блоке "реформатора" справа были полосы прокрутки, и не только вертикальная, но и горизонтальная. Избыточная хрень.

Из визуальных редакторов ничегошно так в Tumblr.com было сделано, без лишнего.
Хотя, как по мне, всё равно лишнего много.

Мне лично удобней пользоваться разметкой вроде Textile или Markdown.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4682</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://twmap.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2011-01-31 18:44:43</wp:comment_date>
<wp:comment_date_gmt>2011-01-31 13:44:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Тормоз не пользуй ИЕ - и будет тебе счастье =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4683</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://twmap.ru</wp:comment_author_url>
<wp:comment_author_IP>217.114.13.195</wp:comment_author_IP>
<wp:comment_date>2011-01-31 18:50:52</wp:comment_date>
<wp:comment_date_gmt>2011-01-31 13:50:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Я бы так сказал что народу всегда было достачно вики разметки - но сейчас вики разметка это сложно для писателей текстов - по этом появляются такие простые редакторы. Сам буквально на днях столкнулся с подобное проблемой - в результате пришел к выводу что проше всего взять tinyMCE и подогнать под свои нужны.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4684</wp:comment_id>
<wp:comment_author><![CDATA[Тормоз]]></wp:comment_author>
<wp:comment_author_email>brokenbrake@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://brokenbrake.biz/about/</wp:comment_author_url>
<wp:comment_author_IP>109.171.16.150</wp:comment_author_IP>
<wp:comment_date>2011-01-31 18:56:41</wp:comment_date>
<wp:comment_date_gmt>2011-01-31 13:56:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Обижаешь :( IE не пользуюсь года с 2003-го, если не раньше.
И вообще у меня Линукс.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4732</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>85.12.231.217</wp:comment_author_IP>
<wp:comment_date>2011-02-02 23:06:10</wp:comment_date>
<wp:comment_date_gmt>2011-02-02 18:06:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Линукс это не повод отказа от ИЕ =))) Поверь ИЕ прекрасно ставить даже из пакетов - вот только как этот пакет назвается забыл =))))))]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>4684</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5465</wp:comment_id>
<wp:comment_author><![CDATA[Vetal4eg]]></wp:comment_author>
<wp:comment_author_email>v.esaulenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://twiter.com/vetal4eg</wp:comment_author_url>
<wp:comment_author_IP>62.148.252.52</wp:comment_author_IP>
<wp:comment_date>2011-03-01 16:42:00</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 11:42:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[wget http://www.kegel.com/wine/winetricks
chmod 755 winetricks
sudo mv winetricks /usr/bin]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>4732</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5468</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-01 16:49:04</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 11:49:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[О, вот за это спасибо. Видел давно, но забыл, про его существование)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5465</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>DesignMode: инициализация</title>
<link>http://torqueo.net/designmode-initialize/</link>
<pubDate>Wed, 02 Feb 2011 06:23:34 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[DesignMode]]></category>

		<category domain="tag" nicename="designmode"><![CDATA[DesignMode]]></category>

		<category domain="tag"><![CDATA[WYSIWYM]]></category>

		<category domain="tag" nicename="wysiwym"><![CDATA[WYSIWYM]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=643</guid>
<description></description>
<content:encoded><![CDATA[В <a href="http://torqueo.net/how-sholud-look-the-perfect-wysiwyg/">предыдущем посте</a> я озвучил свои мысли по поводу того, как должен, на мой взгляд, выглядеть идеальный визуальный редактор текста.

Я начал работу над своим редактором и хочу представить первые наработки. Проект называется DesignMode. Это - <a href="http://en.wikipedia.org/wiki/WYSIWYM">WYSIWYM</a> редактор для редактирования текста с веб-страницы. Я выложил проект на Github: <a href="https://github.com/RubberRails/design_mode">design_mode</a>. Скоро, скорее всего, сяду писать Roadmap проекта.

<a href="https://github.com/RubberRails/design_mode">Код проекта на Github</a>

Форки приветствуются :)]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>643</wp:post_id>
<wp:post_date>2011-02-02 11:23:34</wp:post_date>
<wp:post_date_gmt>2011-02-02 06:23:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>designmode-initialize</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1296627815</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>4733</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://dotblog.ru</wp:comment_author_url>
<wp:comment_author_IP>85.12.231.217</wp:comment_author_IP>
<wp:comment_date>2011-02-02 23:07:24</wp:comment_date>
<wp:comment_date_gmt>2011-02-02 18:07:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Даешь демку , охото посмотреть - а качать из гитхаба лень =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>bundle exec - чтобы не забыть</title>
<link>http://torqueo.net/bundle-exec/</link>
<pubDate>Tue, 22 Feb 2011 12:59:28 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[bundler]]></category>

		<category domain="tag" nicename="bundler"><![CDATA[bundler]]></category>

		<category domain="tag"><![CDATA[compass]]></category>

		<category domain="tag" nicename="compass"><![CDATA[compass]]></category>

		<category domain="tag"><![CDATA[gem]]></category>

		<category domain="tag" nicename="gem"><![CDATA[gem]]></category>

		<category domain="tag"><![CDATA[Gemfile]]></category>

		<category domain="tag" nicename="gemfile"><![CDATA[Gemfile]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

<guid isPermaLink="false">http://torqueo.net/bundle-exec-%d1%87%d1%82%d0%be%d0%b1%d1%8b-%d0%bd%d0%b5-%d0%b7%d0%b0%d0%b1%d1%8b%d1%82%d1%8c/</guid>
<description></description>
<content:encoded><![CDATA[Очень помогли сегодня в группе ror2ru.
Я хотел подправить один гем, он у меня лежал на диске, склонированный с гитхаба. Но, чтобы установить этот гем (при установке он генерирует несколько файлов, которые-то и нужно было мне подправить), нужно использовать консольную программу, в моем случае compass, которой указываем название гема, который нужно установить:
<pre><code class="bash">compass init rails -r html5-boilerplate ...</code></pre>
Но, так как гем у меня в виде склонированной репы, то естественно, программа compass его "не видит". Выход нашелся в следующем.

Сначала подключаем в Gemfile требуемый гем локально:
<pre><code class="ruby">gem 'html5-boilerplate', :path =&gt; '~/sandbox/gems/html5-boilerplate'</code></pre>
А затем, запускаем нужную команду через bundle exec:
<pre><code class="bash">bundle exec compass init rails -r html5-boilerplate ...</code></pre>
Это запустит вашу команду в контексте текущего Gemfile, поэтому, для программы compass гем html5-boilerplate будет прекрасно "виден". Полезная штука.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>645</wp:post_id>
<wp:post_date>2011-02-22 17:59:28</wp:post_date>
<wp:post_date_gmt>2011-02-22 12:59:28</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bundle-exec</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1298379783</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_slug</wp:meta_key>
<wp:meta_value>bundle-exec-%d1%87%d1%82%d0%be%d0%b1%d1%8b-%d0%bd%d0%b5-%d0%b7%d0%b0%d0%b1%d1%8b%d1%82%d1%8c</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Шаблоны приложений в Rails 3</title>
<link>http://torqueo.net/rails3-application-templates/</link>
<pubDate>Tue, 01 Mar 2011 07:09:11 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[html5]]></category>

		<category domain="tag" nicename="html5"><![CDATA[html5]]></category>

		<category domain="tag"><![CDATA[html5boilerplate]]></category>

		<category domain="tag" nicename="html5boilerplate"><![CDATA[html5boilerplate]]></category>

		<category domain="tag"><![CDATA[jquery]]></category>

		<category domain="tag" nicename="jquery"><![CDATA[jquery]]></category>

		<category domain="tag"><![CDATA[mootools]]></category>

		<category domain="tag" nicename="mootools"><![CDATA[mootools]]></category>

		<category domain="tag"><![CDATA[playmo]]></category>

		<category domain="tag" nicename="playmo"><![CDATA[playmo]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails generators]]></category>

		<category domain="tag" nicename="rails-generators"><![CDATA[rails generators]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag"><![CDATA[thor]]></category>

		<category domain="tag" nicename="thor"><![CDATA[thor]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=654</guid>
<description></description>
<content:encoded><![CDATA[Rails 3 вышел несколько месяцев назад, и одним из многих изменений было обновление API для <a href="http://edgeguides.rubyonrails.org/generators.html">генераторов и шаблонов приложений</a>. Если вы еще не знаете, то теперь в Rails 3 используется <a href="https://github.com/wycats/thor">Thor</a> для этих целей, что даёт большую модульность и настраиваемость.

Но зачем использовать шаблоны при создании приложения, если в Rails и так достаточно легко все настраивается? Причина здесь в том, что один раз настроив приложение так, как вам нужно, вам не придется в дальнейшем настраивать каждое новое приложение, вы сможете воспользоваться готовым шаблоном и это избавит вас от рутины.

Шаблон позволит вам один раз задать различные настройки для вашего приложения, так же включая генерацию нужных файлов - и вы сможете пользоваться таким шаблоном от приложения к приложению.

Вот так, например, выглядит шаблон, подготовленный <a href="http://everydayrails.com/">Аароном Самнером</a>:

<pre><code class="ruby"># Создание rvmrc файла
create_file ".rvmrc", "rvm gemset use #{app_name}"

gem "haml-rails"
gem "sass"
# hpricot и ruby_parser используются гемом haml
gem "hpricot", :group =&gt; :development
gem "ruby_parser", :group =&gt; :development
gem "nifty-generators"
gem "simple_form"
gem "jquery-rails"

# Аутентификация и авторизация
gem "devise"
gem "cancan"

# rspec, factory girl, webrat, autotest для тестирования
gem "rails3-generators", :group =&gt; [ :development ]
gem "rspec-rails", :group =&gt; [ :development, :test ]
gem "factory_girl_rails", :group =&gt; [ :development, :test ]
gem "webrat", :group =&gt; :test
gem "ffaker", :group =&gt; :test
gem "autotest", :group =&gt; :test

run 'bundle install'

rake "db:create", :env =&gt; 'development'
rake "db:create", :env =&gt; 'test'

generate 'nifty:layout --haml'
remove_file 'app/views/layouts/application.html.erb' # вместо этого используется nifty layout
generate 'simple_form:install'
generate 'nifty:config'
remove_file 'public/javascripts/rails.js' # jquery-rails заменит стандартный prototype-ujs
generate 'jquery:install --ui'
generate 'rspec:install'
inject_into_file 'spec/spec_helper.rb', "\nrequire 'factory_girl'", :after =&gt; "require 'rspec/rails'"
inject_into_file 'config/application.rb', :after =&gt; "config.filter_parameters += [:password]" do
  &lt;&lt;-eos
    
    # Настройка генераторов
    config.generators do |g|
      g.stylesheets false
      g.form_builder :simple_form
      g.fixture_replacement :factory_girl, :dir =&gt; 'spec/factories'
    end
  eos
end
run "echo '--format documentation' &gt;&gt; .rspec"

# Настройка аутентификации и авторизации
generate "devise:install"
generate "devise User"
generate "devise:views"
run "db:migrate"
generate "cancan:ability"

# Удаляем ненужные файлы, копируем конфиг БД и добавляем его в игнор
remove_file 'public/index.html'
remove_file 'rm public/images/rails.png'
run 'cp config/database.yml config/database.example'
run "echo 'config/database.yml' &gt;&gt; .gitignore"

# Создаем git-репозиторий и делаем первый коммит
git :init
git :add =&gt; "."
git :commit =&gt; "-a -m 'create initial application'"

say &lt;&lt;-eos
  ============================================================================
  Your new Rails application is ready to go.
  
  Don't forget to scroll up for important messages from installed generators.
eos
</code></pre>

Достаточно просто, не правда ли? Воспользоваться таким шаблоном можно так:

<pre><code class="bash">$ wget https://gist.github.com/848735.txt
$ rails new appname -m 848735.txt
</code></pre>

Я сейчас создаю специальный гем, который поможет упростить создание новыйх приложений Rails 3 - этот гем называется playmo-rails, и уже можно <a href="https://github.com/tanraya/playmo">посмотреть некоторые наработки</a>. Мой гем так же использует Thor для генерации различных файлов. Этот гем создан для быстрого старта - можно создать новое приложения, добавляя в него нужные библиотеки и расширения, просто отвечая на вопросы установщика. И это очень удобно.

Пока playmo-rails умеет не так уж много:

<ul>
  <li>Создает приложение и использованием <a href="https://github.com/chriseppstein/compass">Compass</a></li>
  <li>Лайот приложения использует <a href="http://html5boilerplate.com/">html5 boilerplate</a></li>
  <li>Можно выбрать установку JQuery либо Mootools</li>
  <li>Удаляет ненужные файлы из нового rails-приложения</li>
</ul>

Планов по playmo-rails достаточно много, например, добавить поддержку других фреймворков, полезных общеиспользуемых хелперов, таких как title, динамические страницы 500, 404, 422. В общем, в скором времени, playmo-rails будет той штукой, которая избавит вас от всех манипуляций которые вы делаете с каждым новым rails-приложением.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>654</wp:post_id>
<wp:post_date>2011-03-01 12:09:11</wp:post_date>
<wp:post_date_gmt>2011-03-01 07:09:11</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rails3-application-templates</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1299163747</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5463</wp:comment_id>
<wp:comment_author><![CDATA[Vetal4eg]]></wp:comment_author>
<wp:comment_author_email>v.esaulenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://twiter.com/vetal4eg</wp:comment_author_url>
<wp:comment_author_IP>62.148.252.52</wp:comment_author_IP>
<wp:comment_date>2011-03-01 16:30:47</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 11:30:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Всё ведь проще чам кажется (:

rails new appname -m wget https://gist.github.com/848735.txt]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5464</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-01 16:41:10</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 11:41:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Так не получается:

The template [~/sandbox/wget] could not be loaded. Error: Could not find "~/sandbox/wget" in any of your source paths.

Я пробовал вот так: rails new appname -m https://gist.github.com/848735.txt - но и так тоже не работает - ругается как и выше.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5463</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5466</wp:comment_id>
<wp:comment_author><![CDATA[Vetal4eg]]></wp:comment_author>
<wp:comment_author_email>v.esaulenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://twiter.com/vetal4eg</wp:comment_author_url>
<wp:comment_author_IP>62.148.252.52</wp:comment_author_IP>
<wp:comment_date>2011-03-01 16:46:15</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 11:46:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А какая операционка?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5464</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5467</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-01 16:48:34</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 11:48:34</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ubuntu 10.04, Ruby 1.9.2, RVM, Rails 3.0.3]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5466</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5472</wp:comment_id>
<wp:comment_author><![CDATA[Vetal4eg]]></wp:comment_author>
<wp:comment_author_email>v.esaulenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://twiter.com/vetal4eg</wp:comment_author_url>
<wp:comment_author_IP>62.148.252.52</wp:comment_author_IP>
<wp:comment_date>2011-03-01 17:23:21</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 12:23:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[У него http://m.onkey.org/rails-templates и у меня с этим ок.

wget --version
GNU Wget 1.12 built on linux-gnu или неат?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5467</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5480</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-01 19:23:41</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 14:23:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Та же самая версия. Дома попробую на другой машине запустить.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5472</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5482</wp:comment_id>
<wp:comment_author><![CDATA[Vladimir]]></wp:comment_author>
<wp:comment_author_email>egotraumatic@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://rubydev.ru</wp:comment_author_url>
<wp:comment_author_IP>178.213.6.5</wp:comment_author_IP>
<wp:comment_date>2011-03-02 00:31:25</wp:comment_date>
<wp:comment_date_gmt>2011-03-01 19:31:25</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо, хорошая статья, жду выхода вашего gem =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Обработка ActionController::RoutingError в Rails 3</title>
<link>http://torqueo.net/handling-action-controller-routing-error-in-rails-3/</link>
<pubDate>Wed, 02 Mar 2011 14:42:48 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[программерское]]></category>

		<category domain="category" nicename="%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b5%d1%80%d1%81%d0%ba%d0%be%d0%b5"><![CDATA[программерское]]></category>

		<category domain="tag"><![CDATA[Jose Valim]]></category>

		<category domain="tag" nicename="jose-valim"><![CDATA[Jose Valim]]></category>

		<category domain="tag"><![CDATA[middleware]]></category>

		<category domain="tag" nicename="middleware"><![CDATA[middleware]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

		<category domain="tag"><![CDATA[rescue_from]]></category>

		<category domain="tag" nicename="rescue_from"><![CDATA[rescue_from]]></category>

		<category domain="tag"><![CDATA[RoutingError]]></category>

		<category domain="tag" nicename="routingerror"><![CDATA[RoutingError]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=660</guid>
<description></description>
<content:encoded><![CDATA[Раньше, до третьих рельс, исключение маршрутизатора можно было красиво и спокойно перехватить, чтобы показать страницу с ошибкой 404. Достаточно было поместить в ApplicationController следующее:

<pre><code class="ruby">rescue_from ActionController::RoutingError, :with => :error_not_found</code></pre>

Ну, и определить метод error_not_found, который бы рендерил страницу с 404 ошибкой. Но в Rails 3 произошло изменение - стал использоваться гем <a href="https://github.com/josh/rack-mount/">rack-mount</a>, который используется в Rails как <em>middleware</em>, то есть как прослойка между вашим приложением и веб-сервером. И исключение <em>RoutingError</em> переехало именно в middleware, так что теперь его <b>не получится отловить в контроллере</b>, так как это исключение отлавливается и рендерится еще до вызова контроллера.

Разработчик Rails, а именно Хосе Валим, назначил этой проблеме статус low и поместил <a href="https://rails.lighthouseapp.com/projects/8994/tickets/4444-can-no-longer-rescue_from-actioncontrollerroutingerror">тикет</a> в milestone 3.1, что означает, что решение разработчики родят только в версии Rails 3.1. На момент написания этой статьи текущая версия - 3.0.5, так что ждать еще достаточно долго. Сейчас разработчики думают над тем, как сделать обработку ошибок маршрутизации по-нормальному. Но Хосе предложил временное решение - использовать <em>globbing</em> в маршрутах. Нужно просто в вашем <em>routes.rb</em> в самом конце прописать это:

<pre><code class="ruby">match "*path", :to => "application#error_not_found"</code></pre>

И добавить метод <em>home#routing_error</em> по вашему вкусу. Мой таков:

<pre><code class="ruby">
class ApplicationController &lt; ActionController::Base
  def error_not_found
    render :template =&gt; "/error/404.html.erb", :status =&gt; 404
  end
end</code></pre>

Остальные эксепшены, вроде <em>ActionController::UnknownController</em> перехватываются нормально при помощи <em>rescue_from</em> и их можно преспокойно обрабатывать в <em>ApplicationController</em>, например.

Да, еще есть вот такое решение. С использованием гема <a href="https://github.com/vidibus/vidibus-routing_error">vidibus-routing_error</a> можно работать с исключением RoutingError как прежде, через rescue_from.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>660</wp:post_id>
<wp:post_date>2011-03-02 19:42:48</wp:post_date>
<wp:post_date_gmt>2011-03-02 14:42:48</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>handling-action-controller-routing-error-in-rails-3</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1309179311</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5528</wp:comment_id>
<wp:comment_author><![CDATA[Nicklasos]]></wp:comment_author>
<wp:comment_author_email>ariets@gala.net</wp:comment_author_email>
<wp:comment_author_url>http://nicklasos.heroku.com</wp:comment_author_url>
<wp:comment_author_IP>213.160.145.194</wp:comment_author_IP>
<wp:comment_date>2011-03-03 13:26:16</wp:comment_date>
<wp:comment_date_gmt>2011-03-03 08:26:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Отличный у вас блог, всегда что-то интересно.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5534</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-03 15:50:48</wp:comment_date>
<wp:comment_date_gmt>2011-03-03 10:50:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо) Вот только редко. Хотя я не гонюсь за скоростью, а больше за качеством и интересностью заметок, но сам от себя хочу писать почаще. Чего себе и желаю)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5528</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5541</wp:comment_id>
<wp:comment_author><![CDATA[Alexey]]></wp:comment_author>
<wp:comment_author_email>medvedev.alexey@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.191.146.33</wp:comment_author_IP>
<wp:comment_date>2011-03-03 21:26:41</wp:comment_date>
<wp:comment_date_gmt>2011-03-03 16:26:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спаисбо! Так сказать в тему попала статья, не придется копать, что да как!
ну и другие почитал, очень хорошо!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5542</wp:comment_id>
<wp:comment_author><![CDATA[Alexey]]></wp:comment_author>
<wp:comment_author_email>medvedev.alexey@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>195.191.146.33</wp:comment_author_IP>
<wp:comment_date>2011-03-03 21:38:16</wp:comment_date>
<wp:comment_date_gmt>2011-03-03 16:38:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[.. небольшое уточнение, в версии 3.0.5 в routes.rb нужно писать так:
<code>
match "*path", :to =&gt; "application#error_not_found"
</code>
иначе не обрабатывается роут.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5565</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-04 12:15:50</wp:comment_date>
<wp:comment_date_gmt>2011-03-04 07:15:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо за уточнение, сейчас исправлю хотя еще в версии 3.0.3 это работает).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5542</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5597</wp:comment_id>
<wp:comment_author><![CDATA[Pavel]]></wp:comment_author>
<wp:comment_author_email>superp1987@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://superp.tumblr.com/</wp:comment_author_url>
<wp:comment_author_IP>93.73.100.43</wp:comment_author_IP>
<wp:comment_date>2011-03-05 14:11:09</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 09:11:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо! 
Кстати, не знал, что José переводится как Хосе :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5599</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-05 15:10:46</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 10:10:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну, он же бразилец :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5597</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5601</wp:comment_id>
<wp:comment_author><![CDATA[Pavel]]></wp:comment_author>
<wp:comment_author_email>superp1987@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://superp.tumblr.com/</wp:comment_author_url>
<wp:comment_author_IP>93.73.100.43</wp:comment_author_IP>
<wp:comment_date>2011-03-05 15:50:03</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 10:50:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вообще то он поляк )]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5599</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5603</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-05 16:08:13</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 11:08:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Точно. Чето я попутал, он же вроде как в Кракове работает. Хотя имя у него испанское, ну никак не польское)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5601</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5604</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-05 16:10:44</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 11:10:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Кстати, нифига он не поляк походу. Вот что он сказал в интервью:

On the personal front, I want to get back at studying music and finally start to learn some Polish.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5601</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5656</wp:comment_id>
<wp:comment_author><![CDATA[Нейм]]></wp:comment_author>
<wp:comment_author_email>e@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>78.36.176.140</wp:comment_author_IP>
<wp:comment_date>2011-03-07 19:18:47</wp:comment_date>
<wp:comment_date_gmt>2011-03-07 14:18:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Дурацкий блог переводных статей непонятно ради чего (5 баксов от адвордс). Автор, ты сам-то пробовал добавлять такой маршрут в реальном проекте? Все маршруты после, которые добавляют различные гемы тут же перестанут работать.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5659</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.30.199.180</wp:comment_author_IP>
<wp:comment_date>2011-03-07 22:45:57</wp:comment_date>
<wp:comment_date_gmt>2011-03-07 17:45:57</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Где ты тут увидел адвордс вообще, ткни пальцем, покажи? Я в упор не вижу.
А маршрут добавлять пробовал. У меня все прекрасно работает в реальном проекте. Просто у кое-кого руки из жопы произрастают.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5656</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5943</wp:comment_id>
<wp:comment_author><![CDATA[Roman V. Babenko]]></wp:comment_author>
<wp:comment_author_email>romanvbabenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://romanvbabenko.com</wp:comment_author_url>
<wp:comment_author_IP>93.72.221.208</wp:comment_author_IP>
<wp:comment_date>2011-03-19 16:00:37</wp:comment_date>
<wp:comment_date_gmt>2011-03-19 11:00:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Он не поляк и не испанец, а бразилец. Пишется как Jose' Valim. Черточка значит, что "e" не являеться немой, тоесть читается и на португальском звучит примерно как "Жозе". Да вот сами послушайте ;-) http://goo.gl/X8tWW]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5604</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5955</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.29.113</wp:comment_author_IP>
<wp:comment_date>2011-03-19 22:53:04</wp:comment_date>
<wp:comment_date_gmt>2011-03-19 17:53:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Так я и написал, что именно бразилец=)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5943</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5956</wp:comment_id>
<wp:comment_author><![CDATA[Pavel]]></wp:comment_author>
<wp:comment_author_email>superp1987@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://superp.tumblr.com/</wp:comment_author_url>
<wp:comment_author_IP>93.73.100.43</wp:comment_author_IP>
<wp:comment_date>2011-03-19 23:44:00</wp:comment_date>
<wp:comment_date_gmt>2011-03-19 18:44:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Почему же он тогда написал в Твитере - Location Kraków, Poland? )]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5943</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5959</wp:comment_id>
<wp:comment_author><![CDATA[Roman V. Babenko]]></wp:comment_author>
<wp:comment_author_email>romanvbabenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://romanvbabenko.com</wp:comment_author_url>
<wp:comment_author_IP>93.72.221.208</wp:comment_author_IP>
<wp:comment_date>2011-03-20 01:15:13</wp:comment_date>
<wp:comment_date_gmt>2011-03-19 20:15:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ну потому, что жена у него полька, живут они в Кракове ;-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5956</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Бестабличные модели в Rails 3 и как их можно использовать</title>
<link>http://torqueo.net/tableless-models-in-rails-3-and-where-you-can-use-it/</link>
<pubDate>Thu, 03 Mar 2011 14:42:22 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[ActiveRecord]]></category>

		<category domain="tag" nicename="activerecord"><![CDATA[ActiveRecord]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag"><![CDATA[sphinx]]></category>

		<category domain="tag" nicename="sphinx"><![CDATA[sphinx]]></category>

		<category domain="tag"><![CDATA[Tableless]]></category>

		<category domain="tag" nicename="tableless"><![CDATA[Tableless]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=676</guid>
<description></description>
<content:encoded><![CDATA[По-умолчанию модель ActiveRecord маппится на таблицу в БД. Но, бывают случаи, когда нужна модель без привязки к таблице - так удобно генерировать формы и вообще - где еще хранить бизнес-логику, как не в модели?

В Rails 3 ребята подошли к этому с умом. Разработчики вынесли часть логики ActiveRecord в отдельные модули и классы, обеспечив этим слабую связанность компонентов. Теперь ничто не мешает подмешать нужную логику в свой класс. Давайте посмотрим, как может выглядеть такая бестабличная модель:
<pre><code class="ruby">class Tableless
  # Подмешиваем валидаторы, методы преобразований
  # и методы соглашения об именовании для ActiveRecord
  include ActiveModel::Validations
  include ActiveModel::Conversion
  extend ActiveModel::Naming

  # Полезняшка, чтобы создавать свойства из конструктора
  def initialize(props = {})
    props.each do |name, value|
      send("#{name}=", value)
    end
  end

  # Переопределяем метод persisted?, чтобы он всегда
  # возвращал false. Это сообщает ActiveRecord,
  # что данные модели не сохраняются в БД.
  def persisted?
    false
  end
end</code></pre>
Всё, теперь можно спокойно наследовать модели от класса Tableless - вы получите нормальную модель с валидацией, но без привязки к БД:
<pre><code class="ruby">class Person &lt; Tableless
  validates :name, :presence =&gt; true
  attr_accessible :name
end</code></pre>
Где подобное может пригодиться? Ну, например в форме отправки письма с сайта. Мне это пригодилось, когда  нужно было сделать функциональность на сайте, которая позволяла бы создавать различные типы товаров.

У каждого товара, например у мобильного телефона или автомобиля, могут быть как общие свойства (такие как цена или масса), так и свои собственные, как наличие <em>bluetooth</em> для телефона или максимальная скорость для автомобиля.

Создавать отдельную таблицу под каждый тип товара мне совсем не впирало, поэтому, я решил что-то придумать. В итоге, я сделал одну таблицу, в которой в текстовом поле <em>props</em> хранилась сериализованная модель, и в отдельном поле был указан тип товара. Под каждый тип товара создавалась соответствующая этому типу модель со своими и общими свойствами.

Получилось очень удобно - теперь создать новый тип товара стало действительно быстро и просто, к тому же из моделей типов товара стало очень удобно генерировать формы и списки свойств, а еще каждый тип товара был обеспечен удобной рельсовой валидацией. Вот пример двух таких моделей, для сотового телефона и автомобиля:
<pre><code class="ruby">module ProductKinds
  class Cellphone &lt; Base
    group :common do
      prop :color,  :as =&gt; :string
      prop :weight, :as =&gt; :numeric
    end

    validates :color,  :presence =&gt; true
    validates :weight, :presence =&gt; true, :numericality =&gt; true
  end
end

module ProductKinds
  class Automobile &lt; Base
    group :common do
      prop :color, :as =&gt; :string
    end

    group :other do
      prop :max_speed, :as =&gt; :numeric
    end

    validates :color,     :presence =&gt; true
    validates :max_speed, :presence =&gt; true, :numericality =&gt; true
  end
end</code></pre>
Классы моделей наследуются не напрямую от <em>Tableless</em>, а от класса базовой модели <em>Base</em>, она же в свою очередь наследуется от <em>Tableless</em>.

Это связано с тем, что необходимо было наличие общих валидируемых свойств (цена) для всех дочерних моделей. Еще вы можете заметить вызов методов <em>group</em> и <em>prop</em> - они подмешиваются в модели <em>Base</em>. Эти методы определяют свойства товара и разбивают эти свойства по группам. Надеюсь, из кода моделей все понятно. Я не буду тут выкладывать код базового класса моделей <em>Base</em>, так как там нет ничего экстраординарного, но если кому потребуется, то попросите в комментах.

Конечно, у такого подхода (хранение сериализованных моделей в БД) есть и минусы. Например, если код модели изменится, то вам нужно будет пройтись по всем сериализованным моделям в БД и обновить их в соответствии с новым кодом. Это, конечно же, можно и нужно автоматизировать в виде rake-задачи.

Второй минус это поиск. Вы не сможете напрямую искать по БД (кто-то еще так ищет, серьезно?) при помощи SQL запросов, но по-моему, это не так уж важно, когда есть такие офигенные инструменты как sphinx и thinking_sphinx. Можно отдавать данные сфинксу в виде XML, рассериализовав модели - не так уж трудно добавить такой функционал.

Хотя, я считаю, плюсов тут гораздо больше. Вроде это все, о чем я хотел рассказать.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>676</wp:post_id>
<wp:post_date>2011-03-03 19:42:22</wp:post_date>
<wp:post_date_gmt>2011-03-03 14:42:22</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>tableless-models-in-rails-3-and-where-you-can-use-it</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1324665470</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5571</wp:comment_id>
<wp:comment_author><![CDATA[Алексей]]></wp:comment_author>
<wp:comment_author_email>plexsoft@yandex.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.106.204.182</wp:comment_author_IP>
<wp:comment_date>2011-03-04 15:03:41</wp:comment_date>
<wp:comment_date_gmt>2011-03-04 10:03:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Для полноты все таки надо показать код класса Base, хотя бы в урезанном виде, иначе статья не цельная получается, я так и не понял что же делают (как работают) методы group и prop. Еще не плохо бы статью дополнить или написать вторую часть про кастомные валидаторы, сам с этой темой недавно разбирался, но пока еще остались некоторые открытые вопросы. В частности писал свой собственный валидатор проверки на вещественное число, стандартный  validates :digit, :numericality =&gt; true не подошол, так как он спотыкается если в качестве разделителя дробной и целой части используется запятая (,) вместо точки (.), что важно для юзабилити. С задачей я конечно в принципе справился, но как то мне не все нравится, не совсем все красиво и стройно как-то. Так что хотелось бы на эту тему по общается плотнее.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5573</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-04 16:07:06</wp:comment_date>
<wp:comment_date_gmt>2011-03-04 11:07:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ок, код класса Base добавлю.

Свой валидатор для такой цели писать я думаю ни к чему. Сделали бы так:

before_validation :normalize_price

def normalize_price
  self.price.gsub! ',', '.'
end]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5571</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>6148</wp:comment_id>
<wp:comment_author><![CDATA[Mercury]]></wp:comment_author>
<wp:comment_author_email>vkkumd@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>61.205.224.104</wp:comment_author_IP>
<wp:comment_date>2011-03-25 14:31:03</wp:comment_date>
<wp:comment_date_gmt>2011-03-25 09:31:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Тоже разбирался недавно. Нашлось 2 метода, 1) этот, про который Вы написали и 2) https://gist.github.com/886598.
Недостаток 1-го метода, трудно использовать с датетиме полями и их валидация практически невозможна.
Недостаток 2-го, это слегка хак, что не не-очень приветствуется, но работает со всеми валидаторами и типами полей как у простой модели с таблицей.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>6319</wp:comment_id>
<wp:comment_author><![CDATA[yas]]></wp:comment_author>
<wp:comment_author_email>ilyukevich.victor@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://bestblog.name</wp:comment_author_url>
<wp:comment_author_IP>91.149.190.180</wp:comment_author_IP>
<wp:comment_date>2011-03-31 00:47:05</wp:comment_date>
<wp:comment_date_gmt>2011-03-30 19:47:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо за статью!

Еще один из вариантов применения - это, например, индивидуальные настройки сайта для пользователя. У нас вот например делается гео-сервис и там пользователь может указывать дефолтные цвета, которыми ему рисовать маршруты на карте, или какие колонки в таблице ему показывать.

Причём если сегодня одни свойства, а завтра другие, то добавляются они легко. Кстати и пересохранять не придётся. Просто ведь напишем reader на новое свойство с дефолтным значением и всё =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>10922</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.221.147</wp:comment_author_IP>
<wp:comment_date>2011-09-08 19:26:15</wp:comment_date>
<wp:comment_date_gmt>2011-09-08 14:26:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А что вы хотите сделать в экшене show? Что именно показать?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>10921</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>10921</wp:comment_id>
<wp:comment_author><![CDATA[Georgeek]]></wp:comment_author>
<wp:comment_author_email>katsgeorgeek@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>212.66.42.138</wp:comment_author_IP>
<wp:comment_date>2011-09-08 18:07:07</wp:comment_date>
<wp:comment_date_gmt>2011-09-08 13:07:07</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Здравствуйте, я использую такую модель для формы сложного поиска. Как при такой реализации использовать action show?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>10928</wp:comment_id>
<wp:comment_author><![CDATA[Georgeek]]></wp:comment_author>
<wp:comment_author_email>katsgeorgeek@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.137.22.244</wp:comment_author_IP>
<wp:comment_date>2011-09-08 21:33:18</wp:comment_date>
<wp:comment_date_gmt>2011-09-08 16:33:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[В экшене new - вывожу форму поиска, а в экшене show вызываю метод поиска.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>10922</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>10941</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.221.147</wp:comment_author_IP>
<wp:comment_date>2011-09-09 14:04:09</wp:comment_date>
<wp:comment_date_gmt>2011-09-09 09:04:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[И что конкретно не получается сделать?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>10928</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>10942</wp:comment_id>
<wp:comment_author><![CDATA[Georgeek]]></wp:comment_author>
<wp:comment_author_email>katsgeorgeek@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>212.66.42.138</wp:comment_author_IP>
<wp:comment_date>2011-09-09 14:09:16</wp:comment_date>
<wp:comment_date_gmt>2011-09-09 09:09:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да уже все сделал. В методах наворотил..]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>10941</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Подробнее о хранении товаров с различными свойствами в БД</title>
<link>http://torqueo.net/deep-into-products-storage-technique/</link>
<pubDate>Sat, 05 Mar 2011 10:49:12 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[ActiveRecord]]></category>

		<category domain="tag" nicename="activerecord"><![CDATA[ActiveRecord]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

		<category domain="tag"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>

		<category domain="tag"><![CDATA[Tableless]]></category>

		<category domain="tag" nicename="tableless"><![CDATA[Tableless]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=686</guid>
<description></description>
<content:encoded><![CDATA[В прошлой статье меня попросили подробнее рассказать, как устроено хранение товаров с различными свойствами в проекте, о котором я упомянул.

Первый класс - это класс, который обеспечивает бестабличную ActiveRecord модель, если от него отнаследоваться. Он лежит в <em>app/lib/tableless.rb</em>
<pre><code class="ruby">class Tableless
  include ActiveModel::Validations
  include ActiveModel::Conversion
  extend ActiveModel::Naming

  def initialize(props = {})
    props.each do |name, value|
      send("#{name}=", value)
    end
  end

  def persisted?
    false
  end
end</code></pre>

Этот код лежит в <em>app/models/product_kinds/base.rb</em>. Код обеспечивает поддержку групп свойств и свойств для моделей товаров (:group, :prop), а так же содержит базовую модель <em>Base</em> с двумя общими для всех типов товаров свойствами :name и :price.

Все остальные классы типов товаров должны наследоваться именно от <em>Base</em>. Смотрим код:

<pre><code class="ruby">module ProductKinds
  module Props
    class PropOptions
      attr_accessor :as, :default, :collection

      def add(options)
        options.each_pair do |option, value|
          send "#{option}=".to_sym, value
        end
      end
    end

    class Prop
      attr_accessor :name
      
      def options
        @options
      end

      def options=(options)
        @options = PropOptions.new
        @options.add(options)
      end
    end

    module ClassMethods
      def self.extended(base)
        class_eval { attr_accessor :props, :current_group, :options }
      end
      
      # Set up group
      def group(name, &block)
        self.props       ||= {}
        self.options     ||= {}
        self.current_group = name;

        if block_given?
          instance_eval(&block)
        end
      end

      def prop(name, *options)
        self.props[self.current_group] ||= []

        prop = Prop.new
        prop.name    = name;
        prop.options = options.extract_options!

        self.props[self.current_group] &lt;&lt; prop
        attr_accessor name
      end

      def grouped_prop_names
        if self == ProductKinds::Base
          self.props
        else
          properties = superclass.grouped_prop_names

          # Dirty, but works
          properties[:common] ||= []
          properties[:other]  ||= []
          self.props[:common] ||= []
          self.props[:other]  ||= []
          
          h = {
            :common =&gt; properties[:common] + self.props[:common],
            :other  =&gt; properties[:other] + self.props[:other]
          }

          h
        end
      end
    end

    module InstanceMethods
      def grouped_prop_names
        self.class.grouped_prop_names
      end
    end
  end

  class Base &lt; Tableless
    extend  Props::ClassMethods
    include Props::InstanceMethods

    group :common do
      prop :name,  :as =&gt; :string
      prop :price, :as =&gt; :numeric
    end

    validates :name, :presence =&gt; true
    validates :price, :presence =&gt; true, :numericality =&gt; true
  end
end</code></pre>

Так мы описываем тип товара "Автомобиль". Этот код лежит в <em>app/models/product_kinds/automobile.rb</em>

<pre><code class="ruby">module ProductKinds
  class Automobile &lt; Base
    group :common do
      prop :color, :as =&gt; :string
    end

    group :other do
      prop :max_speed, :as =&gt; :numeric
    end

    validates :color,     :presence =&gt; true
    validates :max_speed, :presence =&gt; true, :numericality =&gt; true
  end
end</code></pre>

Вот модель, описывающая тип товара. В БД у нас есть табличка со всеми существующими типами товаров. Этот код лежит в <em>app/models/product_kind.rb</em>

<pre><code class="ruby">class ProductKind &lt; ActiveRecord::Base
  validates :name, :presence =&gt; true, :uniqueness =&gt; true
  validates :classname, :presence =&gt; true, :uniqueness =&gt; true

  has_many :products

  def self.find_model_by_kind(kind)
    self.require_model_by_kind(kind)
    eval("ProductKinds::#{kind.camelize}")
  end

  def self.require_model_by_kind(kind)
    ProductKind.find_by_classname!(kind) # Проверяем существование
    require File.dirname(__FILE__) + "/product_kinds/#{kind}"
  end
end</code></pre>

А это - непосредственно модель, описывающая сам товар. У товара есть свойство :props, в котором в сериализованном виде хранится объект со свойствами товара, например, тот же <em>Automobile</em>. Мы видим геттер и сеттер для props, которые сериализуют и десериализую объект и, соответственно, строку:

<pre><code class="ruby">require File.dirname(__FILE__) + '/product_kinds/base'

class Product &lt; ActiveRecord::Base
  validates :props,           :presence =&gt; true
  validates :product_kind_id, :presence =&gt; true

  belongs_to :product_kind

  def props=(model)
    write_attribute(:props, Marshal::dump(model))
  end

  # Restore concrete product model from :props attr
  def props
    return @props_cache unless @props_cache.nil?
    props = read_attribute(:props)

    unless new_record?
      ProductKind.require_model_by_kind(product_kind.classname)
    end

    @props_cache = Marshal::restore(props) if props
    @props_cache
  end
end</code></pre>

Используется в контроллере это примерно так (создание нового товара):

<pre><code class="ruby">class ProductsController &lt; ApplicationController
  respond_to :html

  def create
    @kind          = params[:product][:kind]
    @product       = Product.new
    @props         = ProductKind.find_model_by_kind(@kind).new(params[:product][:props])
    @product.props           = @props
    @product.product_kind_id = ProductKind.find_by_classname!(@kind).id
    
    if @props.valid? && @product.valid?
      @product.save!

      flash[:notice] = 'Product was successfully created.'
      redirect_to new_product_image_path(@product)
    else
      render :new
    end
  end
end</code></pre>

<em>P.S.: Знаю, что некоторые куски кода далеко не оптимальны и можно написать лучше и проще. Все в ваших руках - этот код только для примера, как можно сделать :)</em>

Надеюсь, я сумел разъяснить некоторые детали, которые читатели сего блога хотели знать.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>686</wp:post_id>
<wp:post_date>2011-03-05 15:49:12</wp:post_date>
<wp:post_date_gmt>2011-03-05 10:49:12</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>deep-into-products-storage-technique</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1309179297</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>5605</wp:comment_id>
<wp:comment_author><![CDATA[fabian]]></wp:comment_author>
<wp:comment_author_email>skoder@ymail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>88.201.200.20</wp:comment_author_IP>
<wp:comment_date>2011-03-05 16:23:03</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 11:23:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[То есть не по этим полям не поищешь...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5606</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-05 16:33:31</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 11:33:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Если искать непосредственно при помощи SQL-запростов, то не поищешь. А если использовать, к примеру sphinx и индексировать свойства товаров в отдавая их виде XML - то поищешь :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5605</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5607</wp:comment_id>
<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
<wp:comment_author_email>alex@pointlessone.org</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>91.202.105.254</wp:comment_author_IP>
<wp:comment_date>2011-03-05 16:37:13</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 11:37:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Судя по коду, получается, что искать по свойствам товары, скажем, очень сложно. Да и создание продуктов получается достаточно громоздим. Отсюда закономерный вопрос — почему не NoSQL? Тот же Монго, например, сейчас достаточно успешно применяется.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5608</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-05 16:51:48</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 11:51:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ни в коем случае не отвергаю использование nosql решений. Я, например, достаточно поработал с MongoDB и признаться, мне он нравится). Тут надо смотреть от конкретного проекта, стоит ли применить то или иное решение, т.к. у каждого решения есть свои минусы как и плюсы.
Случай с хранением сериализованных объектов свойств товаров в БД не кажется мне таким уж унылым и громоздким, так как я однажды делал подобную возможность работы но на чистом SQL и у меня получилось вроде, 9 таблиц. А какие там были оргомные запросы и сколько кода - умотаться.

А насчет поиска - я не думаю что сделать его очень уж сложно (представляю как его сделать, но еще не пробовал).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5607</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5609</wp:comment_id>
<wp:comment_author><![CDATA[gonzih]]></wp:comment_author>
<wp:comment_author_email>Gonzih@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.123.82.245</wp:comment_author_IP>
<wp:comment_date>2011-03-05 17:16:30</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 12:16:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[а в 3 версии вроде добавили какойто удобный функционал для авто сериализации полей, вот только не могу вспомнить подробности]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5610</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-03-05 17:23:48</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 12:23:48</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вы про ActiveRecord-метод serialize?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5609</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5611</wp:comment_id>
<wp:comment_author><![CDATA[gonzih]]></wp:comment_author>
<wp:comment_author_email>Gonzih@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.123.82.245</wp:comment_author_IP>
<wp:comment_date>2011-03-05 17:28:28</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 12:28:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[нене, гдето проскакивала заметка (вроде там без Арона Патерсона не обошлось, возможно это планы)
нечто вроде
class Car
serialized :fields
end

и когда вы присваиваете кару в поле филдс например хеш он автоматом будет сериализоваться в базу и разворачиваться обратно]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5610</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5612</wp:comment_id>
<wp:comment_author><![CDATA[gonzih]]></wp:comment_author>
<wp:comment_author_email>Gonzih@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.123.82.245</wp:comment_author_IP>
<wp:comment_date>2011-03-05 17:33:33</wp:comment_date>
<wp:comment_date_gmt>2011-03-05 12:33:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[да, именно про это, прошу простить мою безадаберность)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>5610</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5785</wp:comment_id>
<wp:comment_author><![CDATA[dima]]></wp:comment_author>
<wp:comment_author_email>pronix.service@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>83.149.3.138</wp:comment_author_IP>
<wp:comment_date>2011-03-13 14:37:56</wp:comment_date>
<wp:comment_date_gmt>2011-03-13 09:37:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[в сприи проще сделали- посмотрите]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Свой шаблон для генератора контроллеров в Rails 3</title>
<link>http://torqueo.net/custom-template-for-controller-generator-in-rails-3/</link>
<pubDate>Wed, 20 Apr 2011 14:43:30 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

		<category domain="tag"><![CDATA[rails generators]]></category>

		<category domain="tag" nicename="rails-generators"><![CDATA[rails generators]]></category>

		<category domain="tag"><![CDATA[rails templates]]></category>

		<category domain="tag" nicename="rails-templates"><![CDATA[rails templates]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=691</guid>
<description></description>
<content:encoded><![CDATA[Как известно, в Rails 3 можно использовать новый стиль кодирования, основанный на применении респондеров (Responders). То есть, форматы ответов задаются при помощи ключевого слова <b>respond_to</b>, а в экшенах используется <b>respond_with</b>.

Однако, нисмотря на то, что в таком стиле вы можете писать свои контроллеры уже сейчас, rails-генераторы (scaffold, controller и resource) все еще генерируют контроллеры на основе старого шаблона, в котором используется старый стиль кодирования. Раньше мне приходилось вручную переводить вновь сгенерированные контроллеры в новый стиль, пока я не переопределил стандартный шаблон контроллера.

В Rails 3 теперь можно удобно переопределить стандартный шаблон генератора контроллеров. Самый простой способ, это просто положить готовый шаблон (он приведен в конце статьи) в файл:

<pre>yourapp/lib/templates/rails/scaffold_controller/controller.rb</pre>

В этом случае, шаблон будет автоматически "подхватываться" при генерировании контроллера.

Второй способ может понадобиться, если нужно переопределить шаблон из гема или плагина. Для этого нужно сначала прописать в файле <b>lib/yourgemname.rb</b> вашего гема следующее:

<pre><code class="ruby">require 'rails/all'

module Yourgemname
  class Railtie < ::Rails::Railtie
    config.generators.scaffold_controller = :yourgemname_controller
  end
end</code></pre>

Этим мы указываем, что генератор контроллеров должен использовать наш генератор. Файл генератора должен располагаться по пути <b>lib/generators/rails/yourgemname_controller_generator.rb</b> Теперь давайте посмотрим, как выглядит наш собственный генератор:

<pre><code class="ruby">require 'rails/generators/rails/scaffold_controller/scaffold_controller_generator'

module Rails
  module Generators
    class YourgemnameControllerGenerator < ScaffoldControllerGenerator
      source_root File.expand_path("../templates", __FILE__)
    end
  end
end</code></pre>

Здесь все просто - мы наследуемся от базового класса генератора и указываем новый путь к шаблонам. Шаблон должен располагаться по пути <b>lib/generators/rails/templates/controller.rb</b>. Теперь посмотрим, как выглядит сам шаблон в стиле Rails 3:

<pre><code class="ruby">class <%= controller_class_name %>Controller < ApplicationController
<% unless options[:singleton] -%>
  # GET /<%= table_name %>
  # GET /<%= table_name %>.xml
  def index
    @<%= table_name %> = <%= orm_class.all(class_name) %>
    respond_with(@<%= table_name %>)
  end
<% end -%>

  # GET /<%= table_name %>/1
  # GET /<%= table_name %>/1.xml
  def show
    @<%= file_name %> = <%= orm_class.find(class_name, "params[:id]") %>
    respond_with(@<%= file_name %>)
  end

  # GET /<%= table_name %>/new
  # GET /<%= table_name %>/new.xml
  def new
    @<%= file_name %> = <%= orm_class.build(class_name) %>
    respond_with(@<%= file_name %>)
  end

  # GET /<%= table_name %>/1/edit
  def edit
    @<%= file_name %> = <%= orm_class.find(class_name, "params[:id]") %>
  end

  # POST /<%= table_name %>
  # POST /<%= table_name %>.xml
  def create
    @<%= file_name %> = <%= orm_class.build(class_name, "params[:#{file_name}]") %>
    flash[:notice] = '<%= class_name %> was successfully created.' if @<%= orm_instance.save %>
    respond_with(@<%= file_name %>)
  end

  # PUT /<%= table_name %>/1
  # PUT /<%= table_name %>/1.xml
  def update
    @<%= file_name %> = <%= orm_class.find(class_name, "params[:id]") %>
    flash[:notice] = '<%= class_name %> was successfully updated.' if @<%= orm_instance.update_attributes("params[:#{file_name}]") %>
    respond_with(@<%= file_name %>)
  end

  # DELETE /<%= table_name %>/1
  # DELETE /<%= table_name %>/1.xml
  def destroy
    @<%= file_name %> = <%= orm_class.find(class_name, "params[:id]") %>
    @<%= orm_instance.destroy %>
    respond_with(@<%= file_name %>)
  end
end</code></pre>

Вот и все. Теперь при генерировании нового контроллера будет использоваться наш шаблон.

<i>P.S: Хочу предупредить, что в Rails 3.1 (которая edge на момент написания статьи) это не будет работать в некоторых случаях, так как в этой версии есть небольшие изменения в шаблоне, а в приведенном мною шаблоне они не учитываются.</i>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>691</wp:post_id>
<wp:post_date>2011-04-20 19:43:30</wp:post_date>
<wp:post_date_gmt>2011-04-20 14:43:30</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>custom-template-for-controller-generator-in-rails-3</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1303310679</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>7267</wp:comment_id>
<wp:comment_author><![CDATA[Гонзих]]></wp:comment_author>
<wp:comment_author_email>iam@gonzih.org</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.123.60.184</wp:comment_author_IP>
<wp:comment_date>2011-04-21 22:10:04</wp:comment_date>
<wp:comment_date_gmt>2011-04-21 17:10:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[&gt;То есть, форматы ответов задаются при помощи ключевого слова respond_to
может всеже метода а не ключевого слова?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>7274</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.24.41</wp:comment_author_IP>
<wp:comment_date>2011-04-22 08:40:19</wp:comment_date>
<wp:comment_date_gmt>2011-04-22 03:40:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Это конечно же метод. Просто иногда в руби такие методы называют ключевыми словами или объявлениями.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>7267</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>7299</wp:comment_id>
<wp:comment_author><![CDATA[zinenkoan]]></wp:comment_author>
<wp:comment_author_email>zinenkoan@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.235.146.34</wp:comment_author_IP>
<wp:comment_date>2011-04-23 20:18:14</wp:comment_date>
<wp:comment_date_gmt>2011-04-23 15:18:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[полностью бы все описали ... было бы здорово =)
я про вьюхи, контроллеры, модели, может ещё чёто =)

а вообще спасибо, пишите редко но метко]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>7301</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.30.196.157</wp:comment_author_IP>
<wp:comment_date>2011-04-23 21:27:53</wp:comment_date>
<wp:comment_date_gmt>2011-04-23 16:27:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Не очень понял, про что конкретно вы хотите, чтобы я написал? Если про переопределение шаблона для генерирования шаблонов вида, то ждите - скоро будет =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>7299</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>torqueo.net</title>
<link>http://torqueo.net/about/me1/</link>
<pubDate>Wed, 20 Apr 2011 16:04:03 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/wp-content/uploads/2008/11/me1.jpg</guid>
<description></description>
<content:encoded><![CDATA[]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>701</wp:post_id>
<wp:post_date>2011-04-20 21:04:03</wp:post_date>
<wp:post_date_gmt>2011-04-20 16:04:03</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>me1</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>6</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://torqueo.net/wp-content/uploads/2008/11/me1.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>2008/11/me1.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"525";s:14:"hwstring_small";s:22:"height='96' width='54'";s:4:"file";s:15:"2008/11/me1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"me1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:15:"me1-171x300.jpg";s:5:"width";s:3:"171";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Rails 3.1.beta: Could not find a JavaScript runtime</title>
<link>http://torqueo.net/rails-31beta-could-not-find-a-javascript-runtime/</link>
<pubDate>Thu, 12 May 2011 06:59:34 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[java]]></category>

		<category domain="tag" nicename="java"><![CDATA[java]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

		<category domain="tag"><![CDATA[runtime]]></category>

		<category domain="tag" nicename="runtime"><![CDATA[runtime]]></category>

		<category domain="tag"><![CDATA[therubyracer]]></category>

		<category domain="tag" nicename="therubyracer"><![CDATA[therubyracer]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=705</guid>
<description></description>
<content:encoded><![CDATA[A tiny note for saving time.
If you're trying new rails 3.1.beta under Ubuntu you can see this error:

<em>Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes.</em>

The solution is quite simple. Just add gem 'therubyracer' into your Gemfile (it's for Ruby MRI). Done.

<em>Also, you can install another javascript runtimes. But who cares?</em>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>705</wp:post_id>
<wp:post_date>2011-05-12 11:59:34</wp:post_date>
<wp:post_date_gmt>2011-05-12 06:59:34</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rails-31beta-could-not-find-a-javascript-runtime</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1305265777</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>7920</wp:comment_id>
<wp:comment_author><![CDATA[andy]]></wp:comment_author>
<wp:comment_author_email>andy@memo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>98.207.232.251</wp:comment_author_IP>
<wp:comment_date>2011-05-13 09:22:27</wp:comment_date>
<wp:comment_date_gmt>2011-05-13 04:22:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thank you a lot for this.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8058</wp:comment_id>
<wp:comment_author><![CDATA[cyberf0x]]></wp:comment_author>
<wp:comment_author_email>cyberf0x@yandex.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>109.71.8.248</wp:comment_author_IP>
<wp:comment_date>2011-05-17 15:05:51</wp:comment_date>
<wp:comment_date_gmt>2011-05-17 10:05:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8225</wp:comment_id>
<wp:comment_author><![CDATA[Stanley]]></wp:comment_author>
<wp:comment_author_email>stanleyshilov@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.stanleyshilov.com</wp:comment_author_url>
<wp:comment_author_IP>68.107.87.8</wp:comment_author_IP>
<wp:comment_date>2011-05-24 04:43:00</wp:comment_date>
<wp:comment_date_gmt>2011-05-23 23:43:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Spasibo za sovet.

Byulabyu strano esli novaya versiya Rails robatala sama po sebe prosto tak :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8547</wp:comment_id>
<wp:comment_author><![CDATA[Steve]]></wp:comment_author>
<wp:comment_author_email>swalker@walkertek.com</wp:comment_author_email>
<wp:comment_author_url>http://stephenwalker.com</wp:comment_author_url>
<wp:comment_author_IP>71.172.94.66</wp:comment_author_IP>
<wp:comment_date>2011-06-07 21:49:04</wp:comment_date>
<wp:comment_date_gmt>2011-06-07 16:49:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8998</wp:comment_id>
<wp:comment_author><![CDATA[manish nautiyal]]></wp:comment_author>
<wp:comment_author_email>manish8n@yahoo.co.in</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>122.177.225.29</wp:comment_author_IP>
<wp:comment_date>2011-07-05 22:58:34</wp:comment_date>
<wp:comment_date_gmt>2011-07-05 17:58:34</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In your Gemfile

write this

gem 'execjs'

gem 'therubyracer'

and then run

bundle install

everything works fine for me :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>9314</wp:comment_id>
<wp:comment_author><![CDATA[Serg]]></wp:comment_author>
<wp:comment_author_email>mayorserega@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>46.98.2.227</wp:comment_author_IP>
<wp:comment_date>2011-07-26 21:03:46</wp:comment_date>
<wp:comment_date_gmt>2011-07-26 16:03:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks!!!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>10750</wp:comment_id>
<wp:comment_author><![CDATA[Pasha]]></wp:comment_author>
<wp:comment_author_email>pavel.kg@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>92.62.78.37</wp:comment_author_IP>
<wp:comment_date>2011-09-01 13:57:35</wp:comment_date>
<wp:comment_date_gmt>2011-09-01 08:57:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>12459</wp:comment_id>
<wp:comment_author><![CDATA[rahul]]></wp:comment_author>
<wp:comment_author_email>imrahul1819@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>117.201.80.16</wp:comment_author_IP>
<wp:comment_date>2011-11-24 16:58:58</wp:comment_date>
<wp:comment_date_gmt>2011-11-24 11:58:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[how to write those lines "gem ‘execjs’
gem ‘therubyracer’ "
 in gem file ???]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>12466</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>95.31.39.169</wp:comment_author_IP>
<wp:comment_date>2011-11-25 00:18:36</wp:comment_date>
<wp:comment_date_gmt>2011-11-24 19:18:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Just put this line at the end of your Gemfile:

<code>gem 'therubyracer'</code>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>12459</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Rails 3.1 assets</title>
<link>http://torqueo.net/rails-31-assets/</link>
<pubDate>Mon, 23 May 2011 10:38:02 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=709</guid>
<description></description>
<content:encoded><![CDATA[1. Как работают assets и как разрабатывать
During development you don't need to precompile them. They get served right out of app/assets. They get compiled and served dynamically. You only precompile them in production to get the burden of compiling assets over and over off the application. Your compiled assets are supposed to be served by http server like Nginx or Apache.

= Почему именно sprockets (http://getsprockets.org/). Тут рассказать, как я раньше использовал compass.

= Как подключать к шаблону

= Сборка файлов в один

= Где располагаются assets и почему так? (выступление DHH)

= Как сделать "бандлы" (логически разбитые пакеты css и js, если сайт большой, чтобы не загружать все разом). Нужно посмотреть, что говорил DHH по этому поводу в своем выступлении.

2. Настройка assets
3. Развертывание (пример deploy.rb с rake assets:precompile)

=======

http://jackdempsey.me/2011/04/22/rails-3-1-sprockets-and-coffeescript.html

&gt;&gt; Testapp::Application.config.methods.grep /asset/
=&gt; [:asset_host, :asset_host=, :asset_path, :asset_path=, :assets, :assets=, :serve_static_assets, :serve_static_assets=, :compiled_asset_path]

&gt;&gt; Testapp::Application.config.assets
=&gt; {:enabled=&gt;true, :paths=&gt;["/home/demerest/sandbox/rails3.1/testapp/app/assets/images", "/home/demerest/sandbox/rails3.1/testapp/app/assets/stylesheets", "/home/demerest/sandbox/rails3.1/testapp/app/assets/javascripts", "/home/demerest/sandbox/rails3.1/testapp/vendor/assets/stylesheets", "/home/demerest/.rvm/gems/ruby-1.9.2-p180@railspre/gems/jquery-rails-1.0.7/vendor/assets/javascripts"], :precompile=&gt;[/\w+\.(?!js|css).+/, "application.js", "application.css"], :prefix=&gt;"/assets", :js_compressor=&gt;nil, :css_compressor=&gt;nil}]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>709</wp:post_id>
<wp:post_date>2011-05-23 15:38:02</wp:post_date>
<wp:post_date_gmt>2011-05-23 10:38:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rails-31-assets</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1306147999</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Create mountable engine with BDD on Rails 3.1</title>
<link>http://torqueo.net/create-mountable-engine-with-bdd-on-rails-31/</link>
<pubDate>Tue, 31 May 2011 11:35:19 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=714</guid>
<description></description>
<content:encoded><![CDATA[1. rails plugin new activa --mountable -d mysql
2. cd activa/
4.
activa.gemspec:

s.add_development_dependency "launchy"
s.add_development_dependency "rspec-rails", "~&gt; 2.6"
s.add_development_dependency "capybara"
s.add_development_dependency "sqlite3-ruby"
s.add_development_dependency "factory_girl_rails"

3. bundle
3 Add gemspec into end of Gemfile
3. add gem 'rake', '0.8.7' into Gemfile
3. rails g rspec:install
3. mv test/dummy/ spec/
3. rm -rf test/
6. Add into spec/spec_helper.rb:

# Configure Rails Envinronment
ENV["RAILS_ENV"] = "test"
require File.expand_path("../dummy/config/environment.rb",  __FILE__)

require 'rspec/rails'
require 'factory_girl'

ENGINE_RAILS_ROOT = File.join(File.dirname(__FILE__), '../')

# Requires supporting ruby files with custom matchers and macros, etc,
# in spec/support/ and its subdirectories.
Dir[File.join(ENGINE_RAILS_ROOT, "spec/support/**/*.rb")].each {|f| require f }

RSpec.configure do |config|
config.use_transactional_fixtures = true
end
--------------------------------------
In Rakefile replace this
APP_RAKEFILE = File.expand_path("../test/dummy/Rakefile", __FILE__)
to this
APP_RAKEFILE = File.expand_path("../spec/dummy/Rakefile", __FILE__)
----------------------
In file script/rails
replace
load File.expand_path('../../test/dummy/script/rails',  __FILE__)
to this
load File.expand_path('../../spec/dummy/script/rails',  __FILE__)
-----------------------------
mkdir support
nano support/capybara.rb

insert into this file:

require 'capybara/rails'
require 'capybara/dsl'

RSpec.configure do |c|
c.include Capybara, :example_group =&gt; { :file_path =&gt; /\bspec\/requests\// }
end
--------------------------------
rails g scaffold Page title:string article:text
при генерации скаффолда создается tests/, нужно этого избегать]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>714</wp:post_id>
<wp:post_date>2011-05-31 16:35:19</wp:post_date>
<wp:post_date_gmt>2011-05-31 11:35:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>create-mountable-engine-with-bdd-on-rails-31</wp:post_name>
<wp:status>private</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1306841720</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Правильный перехват исключений уровня контроллера в Rails</title>
<link>http://torqueo.net/how-to-handle-rails-controllers-exceptions-properly-ru/</link>
<pubDate>Mon, 20 Jun 2011 13:53:16 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[exceptions]]></category>

		<category domain="tag" nicename="exceptions"><![CDATA[exceptions]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=717</guid>
<description></description>
<content:encoded><![CDATA[Как красиво обработать исключение в контроллере Rails? Ну это все знают:

<pre><code class="ruby">rescue_from ActiveRecord::RecordNotFound, :with => :page_404</code></pre>

Отлично. А что, если мы захотим вдобавок обработать все остальные исключения, чтобы показать красивую 500-ю страничку на продакшене? Сразу приходит мысль написать так:

<pre><code class="ruby">rescue_from Exception, :with => :internal_error</code></pre>

Тут идея в том, что нам не нужно обрабатывать каждое исключение в отдельности, а так как все исключения наследуются от <em>Exception</em>, то мы можем обработать именно Exception и успокоиться. Но не тут-то было.

Давайте снова взглянем на то, что у нас получилось:

<pre><code class="ruby">rescue_from ActiveRecord::RecordNotFound, :with => :page_404
rescue_from Exception, :with => :internal_error</code></pre>

На первый взгляд все хорошо. Но этот код не будет работать так, как от него ожидается. Дело в том, что исключение <em>ActiveRecord::RecordNotFound</em> наследуется от <em>Exception</em>, поэтому последнее объявление <em>rescue_from</em> будет срабатывать и для него, таким образом, при возникновении любого исключения, будет вызываться метод <em>:internal_error</em>, вызов которого будет перекрывать вызов <em>:page_404</em>. Так мы никогда не увидим страничку 404 :)

Как тогда правильно обрабатывать исключения? Я пришел к такому решению:

<pre><code class="ruby"># coding: utf-8
class ApplicationController < ActionController::Base
  # Перехватываем все исключения подряд
  rescue_from Exception, :with => :handle_exceptions

private

  # "Разруливаем" исключения
  def handle_exceptions(e)
    case e

    # Обрабатываем исключение от гема CanCan
    when CanCan::AccessDenied
      authenticate_user!

    # Обрабатываем исключение при не найденной записи
    when ActiveRecord::RecordNotFound
      not_found

    # Или обрабатываем все остальные исключения
    else
      internal_error(e)
    end
  end

  def not_found
    # Страничка с ошибкой 404
    render 'application/not_found', :status => 404
  end

  def internal_error(exception)
    if RAILS_ENV == 'production'
      # Тут можно уведомить hoptoad или разработчика письмом об ошибке
      # ...

      # Рендерим красивую страничку с сообщением об ошибке для продакшена
      render :layout   => 'layouts/internal_error',
             :template => 'application/internal_error',
             :status   => 500
    else
      # А для девелопмента пробрасываем исключение дальше,
      # чтобы мы смогли увидеть стандартную страничку об ошибке для разработчиков.
      # При вызове raise без аргументов ruby автоматически "перекинет" последний эксепшен.
      raise
    end
  end
end</code></pre>

Тут всё понятно из примера. Я просто добавил ветвление при обработке исключений, чтобы избежать неоднозначностей, как во втором примере. В комментариех правильно заметили, что можно поместить перехват исключения Exception в самый верх, однако это не спасет вас, если ваш коллега по незнанию добавит перехват нужного ему эксепшена еще выше. Поэтому я выступаю именно за ветвление, как наиболее очевидное и понятное решение.

Кстати, напомню, что в Rails 3 <a href="/handling-action-controller-routing-error-in-rails-3/">перехватить исключение роутера ActionController::RoutingError при помощи rescue_from пока что невозможно</a>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>717</wp:post_id>
<wp:post_date>2011-06-20 18:53:16</wp:post_date>
<wp:post_date_gmt>2011-06-20 13:53:16</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-to-handle-rails-controllers-exceptions-properly-ru</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1325280706</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>8767</wp:comment_id>
<wp:comment_author><![CDATA[mikhailov]]></wp:comment_author>
<wp:comment_author_email>mikhailov.anatoly@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://railsgeek.com</wp:comment_author_url>
<wp:comment_author_IP>178.74.68.18</wp:comment_author_IP>
<wp:comment_date>2011-06-20 19:05:31</wp:comment_date>
<wp:comment_date_gmt>2011-06-20 14:05:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Rails advances recipes осветили похожую технику 2 года назад. действительно, многие перехватывают исключения не rails-way]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8768</wp:comment_id>
<wp:comment_author><![CDATA[mikhailov]]></wp:comment_author>
<wp:comment_author_email>mikhailov.anatoly@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://railsgeek.com</wp:comment_author_url>
<wp:comment_author_IP>178.74.68.18</wp:comment_author_IP>
<wp:comment_date>2011-06-20 19:08:05</wp:comment_date>
<wp:comment_date_gmt>2011-06-20 14:08:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[разработчику в Development режиме очень даже полезно видеть природу исключений, поэтому многие советуют переопределять rescue_action_in_public вместо rescue_action

  def rescue_action_in_public(exception)
    logger.error("\n !!! Exception !!! \n #{exception.message} \n")
 
    case exception.class.to_s
    when .....
    when "ActionController::RoutingError"
      logger.error(" !!! 404 !!!")
      render_404      
    else
      notify_hoptoad(exception)
      redirect_to(current_user.nil? ? login_path : dashboard_path) and return false
    end
  end]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8769</wp:comment_id>
<wp:comment_author><![CDATA[mikhailov]]></wp:comment_author>
<wp:comment_author_email>mikhailov.anatoly@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://railsgeek.com</wp:comment_author_url>
<wp:comment_author_IP>178.74.68.18</wp:comment_author_IP>
<wp:comment_date>2011-06-20 19:09:04</wp:comment_date>
<wp:comment_date_gmt>2011-06-20 14:09:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[hoptoad переопределяет этот метод, поэтому при overrid-е не забываем про уведомление hoptoad]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8773</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.9.156</wp:comment_author_IP>
<wp:comment_date>2011-06-20 20:24:16</wp:comment_date>
<wp:comment_date_gmt>2011-06-20 15:24:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[В моем примере кстати в development режиме разработчик увидит обычную рельсовую страницу с сообщением об ошибке и стеком, т.к. исключение прокидывается дальше.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8768</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8774</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.9.156</wp:comment_author_IP>
<wp:comment_date>2011-06-20 20:24:49</wp:comment_date>
<wp:comment_date_gmt>2011-06-20 15:24:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, заметка не претендует на откровение, но надеюсь, людям пригодится :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8767</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8775</wp:comment_id>
<wp:comment_author><![CDATA[rezwyi]]></wp:comment_author>
<wp:comment_author_email>rezwyi@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>46.167.83.118</wp:comment_author_IP>
<wp:comment_date>2011-06-20 20:49:26</wp:comment_date>
<wp:comment_date_gmt>2011-06-20 15:49:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо. Познавательно...

Пригодилось :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8774</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8781</wp:comment_id>
<wp:comment_author><![CDATA[Ivan Evtuhovich]]></wp:comment_author>
<wp:comment_author_email>evtuhovich@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.26.14.31</wp:comment_author_IP>
<wp:comment_date>2011-06-21 00:48:21</wp:comment_date>
<wp:comment_date_gmt>2011-06-20 19:48:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[http://apidock.com/rails/ActiveSupport/Rescuable/ClassMethods/rescue_from

Handlers are inherited. They are searched from right to left, from bottom to top, and up the hierarchy. The handler of the first class for which exception.is_a?(klass) holds true is the one invoked, if any.

Весь текст можно было бы заменить переменой мест строк:

rescue_from Exception, :with =&gt; :internal_error
rescue_from ActiveRecord::RecordNotFound, :with =&gt; :page_404

Тогда и 404 увидели бы и 500 бы нормально обрабатывались]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8782</wp:comment_id>
<wp:comment_author><![CDATA[leopard]]></wp:comment_author>
<wp:comment_author_email>leopard_ne@inbox.ru</wp:comment_author_email>
<wp:comment_author_url>http://leopard.in.ua</wp:comment_author_url>
<wp:comment_author_IP>92.249.77.244</wp:comment_author_IP>
<wp:comment_date>2011-06-21 02:29:28</wp:comment_date>
<wp:comment_date_gmt>2011-06-20 21:29:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Поменяйте их просто местами и будет Вам счастье :)

rescue_from Exception, :with =&gt; :internal_error
rescue_from ActiveRecord::RecordNotFound, :with =&gt; :page_404]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8792</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-06-21 10:26:33</wp:comment_date>
<wp:comment_date_gmt>2011-06-21 05:26:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Да, но все таки я за ветвление, как более очевидное решение. В вашем случае никто не защищен от того, что ваш коллега вставит обработку нужного ему исключения выше Exception.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8781</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8798</wp:comment_id>
<wp:comment_author><![CDATA[woto]]></wp:comment_author>
<wp:comment_author_email>oganer@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.84.232.146</wp:comment_author_IP>
<wp:comment_date>2011-06-22 01:59:40</wp:comment_date>
<wp:comment_date_gmt>2011-06-21 20:59:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Что-то не очень красиво для рельс :\]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8814</wp:comment_id>
<wp:comment_author><![CDATA[use_rifle]]></wp:comment_author>
<wp:comment_author_email>MikDiet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://rusrails.ru/</wp:comment_author_url>
<wp:comment_author_IP>94.73.241.166</wp:comment_author_IP>
<wp:comment_date>2011-06-23 08:19:24</wp:comment_date>
<wp:comment_date_gmt>2011-06-23 03:19:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А я через around_filter ловлю, как правило..

around_filter :catch_exceptions

def catch_exceptions
    yield
  rescue ActiveRecord::RecordNotFound
    render_404
  end]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8816</wp:comment_id>
<wp:comment_author><![CDATA[cyberf0x]]></wp:comment_author>
<wp:comment_author_email>cyberf0x@yandex.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.26.143.242</wp:comment_author_IP>
<wp:comment_date>2011-06-23 10:18:10</wp:comment_date>
<wp:comment_date_gmt>2011-06-23 05:18:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо, интересная тема.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8862</wp:comment_id>
<wp:comment_author><![CDATA[none]]></wp:comment_author>
<wp:comment_author_email>4spams@ukr.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>95.134.98.153</wp:comment_author_IP>
<wp:comment_date>2011-06-26 18:44:47</wp:comment_date>
<wp:comment_date_gmt>2011-06-26 13:44:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[имхо както кривовато, совсем не стиль rails]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Proper catching controller-level exceptions in Rails</title>
<link>http://torqueo.net/proper-catching-controller-level-exceptions-in-rails/</link>
<pubDate>Tue, 21 Jun 2011 11:52:24 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[exceptions]]></category>

		<category domain="tag" nicename="exceptions"><![CDATA[exceptions]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

		<category domain="tag"><![CDATA[rubyshow]]></category>

		<category domain="tag" nicename="rubyshow"><![CDATA[rubyshow]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=729</guid>
<description></description>
<content:encoded><![CDATA[How to handle the exception in the Rails controller best way? Well, everyone knows that:

<pre><code class="ruby">rescue_from ActiveRecord::RecordNotFound, :with => :page_404</code></pre>

Excellent. But what if in addition we want to handle all other exceptions to show the pretty 500 error page on production? Immediately we've got the idea to write:

<pre><code class="ruby">rescue_from Exception, :with => :internal_error</code></pre>

Here's the idea that we do not need to handle each exception separately, as well as all exceptions are derived from <em>Exception</em> so we can handle this Exception and calm down. But no such luck.

Let's take a look what we have:

<pre><code class="ruby">rescue_from ActiveRecord::RecordNotFound, :with => :page_404
rescue_from Exception, :with => :internal_error</code></pre>

At first glance, all is well. But this will not work as expected. The fact that the  <em>ActiveRecord::RecordNotFound</em> exception is inherited from <em>Exception</em>, so the latest <em>rescue_from</em> call will fire for <em>Exception</em> too, so when an any exception raised, <em>:internal_error</em> will be called and this call which will block <em>:page_404</em> call. So we never see 404 page :)

So, how to handle exceptions properly? I came to this decision:

<pre><code class="ruby"># coding: utf-8
class ApplicationController < ActionController::Base
  # Catch all exceptions at a stretch
  rescue_from Exception, :with => :handle_exceptions

private

  # Handle exceptions
  def handle_exceptions(e)
    case e

    # Handling exception of CanCan gem
    when CanCan::AccessDenied
      authenticate_user!

    # Handling exception when record not found
    when ActiveRecord::RecordNotFound
      not_found

    # Or handle any other exceptions
    else
      internal_error(e)
    end
  end

  def not_found
    # Render 404 error page
    render 'application/not_found', :status => 404
  end

  def internal_error(exception)
    if RAILS_ENV == 'production'
      # Here you can send e-mail to developer or notify Hoptoad
      # ...

      # Render a pretty page for production with an error message
      render :layout   => 'layouts/internal_error',
             :template => 'application/internal_error',
             :status   => 500
    else
      # Forward exception that we were able to see a standard error page with stack for development.
      # With no arguments, it re-raises the recent exception.
      raise
    end
  end
end</code></pre>

There's all clear from the example. I just added a branching for handling exceptions to avoid ambiguity as in the second example. Someone may say that we can just add <em>rescue_from Exception</em> at the top, but it will not save you if your colleague unwittingly add the desired rescue_from even higher. Therefore, I prefer for branching as the most obvious and intuitive solution.

<strong>UPD:</strong>
That article was mentioned in <a href="http://rubyshow.com/episodes/171">RubyShow Episode 171</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>729</wp:post_id>
<wp:post_date>2011-06-21 16:52:24</wp:post_date>
<wp:post_date_gmt>2011-06-21 11:52:24</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>proper-catching-controller-level-exceptions-in-rails</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1310478605</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>BundleWatcher - следите за апдейтами гемов, используемых в проекте</title>
<link>http://torqueo.net/bundlewatcher/</link>
<pubDate>Tue, 21 Jun 2011 19:35:02 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[bundler]]></category>

		<category domain="tag" nicename="bundler"><![CDATA[bundler]]></category>

		<category domain="tag"><![CDATA[Gemfile]]></category>

		<category domain="tag" nicename="gemfile"><![CDATA[Gemfile]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=734</guid>
<description></description>
<content:encoded><![CDATA[Наткнулся на маленький замечательный проект - <a ref="nofollow" href="http://www.bundlewatcher.com">BundleWatcher</a>. 

Давно искал нечто подобное, так как всегда хочется использовать самые новые версии гемов в своем проекте. Чтобы начать пользоваться <a ref="nofollow" href="http://www.bundlewatcher.com">BundleWatcher</a>, вы просто заливаете ему Gemfile.lock из своего проекта и он генерирует вам страничку, где указаны ваши версии гемов, а так же самые последние версии используемых гемов. Кроме того, генерируется RSS лента, которую стоит добавить в свой ридер.

В общем, всячески рекомендую, и сам буду пользоваться.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>734</wp:post_id>
<wp:post_date>2011-06-22 00:35:02</wp:post_date>
<wp:post_date_gmt>2011-06-21 19:35:02</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>bundlewatcher</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1308685476</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Хранение дат в UTC, отображение и форматирование на клиенте</title>
<link>http://torqueo.net/storing-dates-in-utc-and-display-and-formatting-them-on-the-clientside-ru/</link>
<pubDate>Thu, 23 Jun 2011 08:54:35 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[mootools]]></category>

		<category domain="tag" nicename="mootools"><![CDATA[mootools]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[UTC]]></category>

		<category domain="tag" nicename="utc"><![CDATA[UTC]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=737</guid>
<description></description>
<content:encoded><![CDATA[В Rails по-умолчанию все даты в БД хранятся в UTC. UTC - это, можно сказать, улучшенная версия знакомого всем GMT.

Раньше я хранил часовой пояс для каждого отдельного пользователя, чтобы потом считать локальную дату, основываясь на UTC и временной зоне пользователя, которую он указал. Ну, вы знаете, когда вас просят указать ваш часовой пояс, выбрав нужный из огромного выпадающего списка. Некоторые разработчики, конечно, делают умнее, они определяют текущий часовой пояс пользователя или посетителя при помощи javascript и отправляют его на сервер при помощи AJAX.

Теперь же я пришел к выводу, что мне вообще не обязательно, в большинстве случаев, знать часовой пояс пользователя (навскидку не могу придумать, где это может мне понадобиться). Я подумал, что проще все даты на сайте выводить в UTC формате, затем на клиенте приводить их к локальному времени и форматировать при помощи javascript. В результате, я получил один хелпер и один кусочек кода на javascript.

Вот хелпер. Он пока что без особых изысков:

<pre><code class="ruby">def utc_date(date)
  raw %Q(&lt;time class="utc-date" title="#{date}"&gt;#{date}&lt;/time&gt;)
end</code></pre>

Этот хелпер просто получает объект даты в UTC формате и выводит его в HTML5 теге time (я использую HTML5 в своих проектах).

А вот и кусок джаваскрипта, который приводит дату к локальной, а так же форматирует её:

<pre><code class="javascript">var Application = {
    processUtcDates: function() {
        $$('.utc-date').each(function(wrapper) {
            wrapper.set('html', Application.utcToLocal(wrapper.get('html')))
        })
    },

    utcToLocal: function(value) {
        var a = /^(\d{4})-(\d{2})-(\d{2})\s(\d{2}):(\d{2}):(\d{2})\sUTC$/.exec(value);

        if (a) {
            return (new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]))).format("%d/%m/%Y %H:%M");
        }

        return null;
    }
};

Application.processUtcDates();</code></pre>

Этот пример javascript-кода написан с использованием фреймворка mootools, но я думаю, аналог метода <tt>format</tt> есть и в вашем любимом фреймворке. Если же нет - его легко написать самому.
Скрипт просто ищет все контейнеры с классом <em>.utc-date</em> и приводит содержащуюся в них дату к локальному времени, с форматированием.

В общем, вот таким простым способом можно снять с себя головную боль по поддержке разных часовых поясов в вашем приложении. Жду комментариев о том, где описанный мною способ не подходит.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>737</wp:post_id>
<wp:post_date>2011-06-23 13:54:35</wp:post_date>
<wp:post_date_gmt>2011-06-23 08:54:35</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>storing-dates-in-utc-and-display-and-formatting-them-on-the-clientside-ru</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1308837811</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>8817</wp:comment_id>
<wp:comment_author><![CDATA[mikhailov]]></wp:comment_author>
<wp:comment_author_email>mikhailov.anatoly@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://railsgeek.com</wp:comment_author_url>
<wp:comment_author_IP>178.74.68.18</wp:comment_author_IP>
<wp:comment_date>2011-06-23 14:18:51</wp:comment_date>
<wp:comment_date_gmt>2011-06-23 09:18:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[не могу представить необходимость выводить дату в UTC и показать пользователю в его таймзоне. 
сразу выводить в таймзоне пользователя стандартными средстами]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8818</wp:comment_id>
<wp:comment_author><![CDATA[mikhailov]]></wp:comment_author>
<wp:comment_author_email>mikhailov.anatoly@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://railsgeek.com</wp:comment_author_url>
<wp:comment_author_IP>178.74.68.18</wp:comment_author_IP>
<wp:comment_date>2011-06-23 14:20:06</wp:comment_date>
<wp:comment_date_gmt>2011-06-23 09:20:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[пока будем делать простые вещи сложными и придумывать бизнес-правила для отображения контента, будем стоять на месте с пустыми карманами]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8820</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>195.58.19.83</wp:comment_author_IP>
<wp:comment_date>2011-06-23 15:54:43</wp:comment_date>
<wp:comment_date_gmt>2011-06-23 10:54:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[> сразу выводить в таймзоне пользователя стандартными средстами

Каким образом? Вот я, например, из Екатеринбурга, и у меня локальное время 14:00, а вы, к примеру, из Москвы и у вас еще 12:00. Я пишу комментарий и если при добавлении комментария указывается моё локальное время, то вы увидите мой комментарий из будущего (для вас).

А когда указывается время в UTC, то на клиенте все рассчитается правильно при помощи JS (конечно, в том случае, если в вашей ОС правильно выставлено время и временная зона).

> пока будем делать простые вещи сложными и придумывать бизнес-правила для
> отображения контента, будем стоять на месте с пустыми карманами

Это простые в общем-то вещи. Я думаю, что учитывать подобные "мелочи" - признак внимания к своим пользователям.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8817</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8821</wp:comment_id>
<wp:comment_author><![CDATA[maxim]]></wp:comment_author>
<wp:comment_author_email>parallel588@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>94.24.208.140</wp:comment_author_IP>
<wp:comment_date>2011-06-23 16:08:29</wp:comment_date>
<wp:comment_date_gmt>2011-06-23 11:08:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вот еще есть вариант:
в cookies устанавливаю время пользователя:
   function set_time_zone_offset() {
     var current_time = new Date();
     $.cookie('time_zone', current_time.getTimezoneOffset());
     };
    set_time_zone_offset()

а в application.rb в before_filter прописываю:
 def set_time_zone
    min = request.cookies["time_zone"].to_i
    Time.zone = ActiveSupport::TimeZone[min.minutes]
  end

Вроде работает.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8826</wp:comment_id>
<wp:comment_author><![CDATA[mikhailov]]></wp:comment_author>
<wp:comment_author_email>mikhailov.anatoly@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://railsgeek.com</wp:comment_author_url>
<wp:comment_author_IP>188.232.223.91</wp:comment_author_IP>
<wp:comment_date>2011-06-23 21:10:58</wp:comment_date>
<wp:comment_date_gmt>2011-06-23 16:10:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[не встречал подобный функционал, но только сейчас понял, насколько это может быть удобно.
действительно, многие парятся из-за разницы часовых поясов]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8820</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>8827</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>213.191.10.48</wp:comment_author_IP>
<wp:comment_date>2011-06-23 22:35:23</wp:comment_date>
<wp:comment_date_gmt>2011-06-23 17:35:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You make my day =)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>8826</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11134</wp:comment_id>
<wp:comment_author><![CDATA[trskldn]]></wp:comment_author>
<wp:comment_author_email>trskldn@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://pixelalchemy.net/</wp:comment_author_url>
<wp:comment_author_IP>94.153.193.100</wp:comment_author_IP>
<wp:comment_date>2011-09-17 17:20:19</wp:comment_date>
<wp:comment_date_gmt>2011-09-17 12:20:19</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Действительно простое и безгеморойное решение!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Rails: store dates in UTC and display them in local time onto client side</title>
<link>http://torqueo.net/rails-store-dates-in-utc-and-display-them-in-local-time-onto-client-side/</link>
<pubDate>Mon, 27 Jun 2011 13:10:35 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[html5]]></category>

		<category domain="tag" nicename="html5"><![CDATA[html5]]></category>

		<category domain="tag"><![CDATA[javascript]]></category>

		<category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>

		<category domain="tag"><![CDATA[mootools]]></category>

		<category domain="tag" nicename="mootools"><![CDATA[mootools]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[UTC]]></category>

		<category domain="tag" nicename="utc"><![CDATA[UTC]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=742</guid>
<description></description>
<content:encoded><![CDATA[In the Rails all timestamps stored in database in UTC by default. UTC is an improved version of wide-known GMT.

Previously, I have kept the timezone for each individual user for computing local date using UTC and user timezone. Well, you know, when you are asked to specify your timezone, choosen it from a huge drop-down list. Some developers, of course, make smarter, they determine the current user's timezone with javascript and then send it to the server via AJAX.

Now I come to the conclusion that in most cases I do not necessarily user's timezone to know (I can't think where it may be necessary to me.) I decided that will be easier to display all the dates on my site in UTC, then on the client side bring them to local time and format using javascript. As a result, I got a helper and a piece of code in javascript.

Here is rails helper, without any frills:

<pre><code class="ruby">def utc_date(date)
  raw %Q(&lt;time class="utc-date" title="#{date}"&gt;#{date}&lt;/time&gt;)
end</code></pre>

This helper just display passed date object and display it wrapped by time HTML5 tag.

And here is a javascript code that convert UTC date to local time and format time:

<pre><code class="javascript">var Application = {
    processUtcDates: function() {
        $$('.utc-date').each(function(wrapper) {
            wrapper.set('html', Application.utcToLocal(wrapper.get('html')))
        })
    },

    utcToLocal: function(value) {
        var a = /^(\d{4})-(\d{2})-(\d{2})\s(\d{2}):(\d{2}):(\d{2})\sUTC$/.exec(value);

        if (a) {
            return (new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]))).format("%d/%m/%Y %H:%M");
        }

        return null;
    }
};

Application.processUtcDates();</code></pre>

This example is written using mootools framework, but I think similar method like <tt>format</tt> is also available in your favorite framework. If not - it's easy to write this method yourself.
The script simply looks for all the containers with the class <em>.utc-date</em> and convert contained date to local time with formatting.

In general, this is a simple way to remove yourself from a headache to support multiple time zones in your application. I'm waiting for comments about where method I described does not work.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>742</wp:post_id>
<wp:post_date>2011-06-27 18:10:35</wp:post_date>
<wp:post_date_gmt>2011-06-27 13:10:35</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rails-store-dates-in-utc-and-display-them-in-local-time-onto-client-side</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1310478570</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Рефакторинг с использованием rails_best_practices</title>
<link>http://torqueo.net/refactoring-with-rails-best-practices-gem/</link>
<pubDate>Thu, 29 Sep 2011 07:50:13 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails_best_practices]]></category>

		<category domain="tag" nicename="rails_best_practices"><![CDATA[rails_best_practices]]></category>

		<category domain="tag"><![CDATA[refactoring]]></category>

		<category domain="tag" nicename="refactoring"><![CDATA[refactoring]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=767</guid>
<description></description>
<content:encoded><![CDATA[Думаешь, твой рельсовый проект идеален в плане кода? Нет? Хорошо, что можешь это признать. Я вот знал, что в моём маленьком проекте <a href="https://github.com/tanraya/contemplate" rel="nofollow">contemplate</a>, который я мееедленно но верно разрабатываю, были проблемы. В частности - бизнес-логика в контроллере, не DRY-код в некоторых местах и другие проблемы. Теперь я избавился почти от всех них, и помог мне в этом гем <a href="https://github.com/flyerhzm/rails_best_practices" rel="nofollow">rails_best_practices</a>.

Установить и использовать его просто. Добавляешь в Gemfile в группу development строку:

<code><pre class="ruby">gem "rails_best_practices"</code></pre>

И делаешь bundle install. Затем, в корневой директории проекта запускаешь:

<code><pre class="bash">$ rails_best_practices -g</code></pre>

Это сгенерирует конфиг-файл для rails_best_practices. Для начала работы больше настраивать ничего не нужно. Теперь нужно сгенерировать чеклист:

<code><pre class="bash">$ rails_best_practices -f html .</code></pre>

После запуска ты получишь файл rails_best_practices_output.html в корне проекта. Просто открываешь его в браузере и смотришь список. Тебе повезет, если он будет пуст. В моем случае было не так -  я получил 48 ошибок.

Например, у меня был такой экшен:

<code><pre class="ruby">def create
  anchor = :new_comment

  # Anti-robot protection
  is_robot = !params[:comment][:name].blank?
  params[:comment].delete :name

  @comment = Comment.new(params[:comment])
  @comment.ip = IPAddr.new(request.env["REMOTE_ADDR"]).to_i
  @comment.user_agent = request.env["HTTP_USER_AGENT"]
  @comment.commentable = @post

  if !is_robot
    if @comment.save
      flash[:notice] = 'Ваш комментарий опубликован.'
      flash.now[:comment] = nil
      anchor = view_context.dom_id(@comment)
    else
      flash[:comment] = @comment
    end
  else
    flash[:comment] = nil
  end

  redirect_to polymorphic_path(@post, :anchor => anchor)
end</code></pre>

После того, как я последовал рекомендациям <em>rails_best_practices</em>, у меня получился более чистый код, так как я вынес имевшуюся бизнес-логику из контроллера в модель:

<code><pre class="ruby">def create
  anchor = :new_comment

  # Anti-robot protection
  is_robot = !params[:comment][:name].blank?
  params[:comment].delete :name

  @comment = @commentable.comments.build(params[:comment])

  if !is_robot
    if @comment.publish(request.env)
      flash[:notice] = 'Ваш комментарий опубликован.'
      flash.now[:comment] = nil
      anchor = view_context.dom_id(@comment)
    else
      flash[:comment] = @comment
    end
  else
    flash[:comment] = nil
  end

  redirect_to polymorphic_path(@commentable, :anchor => anchor)
end</code></pre>

Вот как выглядит метод <em>Comment#publish</em>

<code><pre class="ruby">def publish(env)
  raise 'Cannot find associated object for this comment!' if self.commentable.nil?
  require 'ipaddr'

  self.ip = IPAddr.new(env["REMOTE_ADDR"]).to_i
  self.user_agent = env["HTTP_USER_AGENT"]

  save
end</code></pre>

Очень полезный гем. Я неплохо улучшил свой код при помощи его рекомендаций. Гем rails_best_practices также позволяет <a href="https://github.com/flyerhzm/rails_best_practices/wiki/How-to-write-your-own-check-list" rel="nofollow">добавлять свои проверки в чеклист</a>, что позволит проще проводить рефакторинг большого проекта, если вы напишите специфичные для него проверки.

В общем, отличная вещь, рекомендую всем, кто еще не пробовал.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>767</wp:post_id>
<wp:post_date>2011-09-29 12:50:13</wp:post_date>
<wp:post_date_gmt>2011-09-29 07:50:13</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>refactoring-with-rails-best-practices-gem</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1325281438</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>11357</wp:comment_id>
<wp:comment_author><![CDATA[none]]></wp:comment_author>
<wp:comment_author_email>alexander.podkidyshev@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.none.com.ua/</wp:comment_author_url>
<wp:comment_author_IP>195.138.79.90</wp:comment_author_IP>
<wp:comment_date>2011-09-29 14:38:46</wp:comment_date>
<wp:comment_date_gmt>2011-09-29 09:38:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Для получения html надо выполнить:
rails_best_practices -f html .

Но в любом случае - огромное спасибо! Мне очень понравилось, потестил у себя - красота!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11359</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.221.146</wp:comment_author_IP>
<wp:comment_date>2011-09-29 15:41:33</wp:comment_date>
<wp:comment_date_gmt>2011-09-29 10:41:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо, исправил эту злую ошибку :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>11357</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11361</wp:comment_id>
<wp:comment_author><![CDATA[Roman V. Babenko]]></wp:comment_author>
<wp:comment_author_email>romanvbabenko@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://romanvbabenko.com</wp:comment_author_url>
<wp:comment_author_IP>93.74.107.147</wp:comment_author_IP>
<wp:comment_date>2011-09-29 18:21:54</wp:comment_date>
<wp:comment_date_gmt>2011-09-29 13:21:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[У тебя код станет еще чище, если ты вынесеш проверку бота в фильтр.
А вот передавать целый объект во флеше - это это жесть.
Тут уже бестпрактики не помогут ;-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11362</wp:comment_id>
<wp:comment_author><![CDATA[alvir]]></wp:comment_author>
<wp:comment_author_email>shurik.v.r@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>77.88.225.236</wp:comment_author_IP>
<wp:comment_date>2011-09-29 19:39:39</wp:comment_date>
<wp:comment_date_gmt>2011-09-29 14:39:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Зачем добавлять его в Gemfile проекта, его надо просто поставить через gem install не более]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11373</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.221.146</wp:comment_author_IP>
<wp:comment_date>2011-09-30 10:26:04</wp:comment_date>
<wp:comment_date_gmt>2011-09-30 05:26:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Мне так удобнее, т.к. разрабатываю на 2-х разных машинах. Тупо делаю bundle install и не парюсь.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>11362</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11375</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://torqueo.net/</wp:comment_author_url>
<wp:comment_author_IP>85.12.221.146</wp:comment_author_IP>
<wp:comment_date>2011-09-30 10:31:54</wp:comment_date>
<wp:comment_date_gmt>2011-09-30 05:31:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Про фильтр согласен - именно там ему и место.

Про объект во флэше - а как мне еще передать объект в другой экшен, в случае, если мне нужно отобразить ошибки валидации? Flash-объект тут подходит как нельзя кстати, так как он "живет" до следующего экшена.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>11361</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11376</wp:comment_id>
<wp:comment_author><![CDATA[Michail]]></wp:comment_author>
<wp:comment_author_email>bibendi@bk.ru</wp:comment_author_email>
<wp:comment_author_url>http://www.pulscen.ru</wp:comment_author_url>
<wp:comment_author_IP>85.12.221.146</wp:comment_author_IP>
<wp:comment_date>2011-09-30 10:53:53</wp:comment_date>
<wp:comment_date_gmt>2011-09-30 05:53:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[А зачем вообще делать редирект после ошибки?!
Нужно просто отрендерить форму через render :new]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>11375</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11377</wp:comment_id>
<wp:comment_author><![CDATA[Michail]]></wp:comment_author>
<wp:comment_author_email>bibendi@bk.ru</wp:comment_author_email>
<wp:comment_author_url>http://www.pulscen.ru</wp:comment_author_url>
<wp:comment_author_IP>85.12.221.146</wp:comment_author_IP>
<wp:comment_date>2011-09-30 10:56:16</wp:comment_date>
<wp:comment_date_gmt>2011-09-30 05:56:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Всё правильно, что в гем файл.
Добавляете в группу дев и всё, все разработчики в команде счастливы!
group :development
  gem "rails_best_practices"
end]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>11362</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11378</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.221.146</wp:comment_author_IP>
<wp:comment_date>2011-09-30 10:57:03</wp:comment_date>
<wp:comment_date_gmt>2011-09-30 05:57:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Потому что форма выводится в другом контроллере. Это форма добавления комментария, и она выводится при просмотре поста. И мне хочется, чтобы ошибки валидации комментария показывались именно на этой странице.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>11376</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>11470</wp:comment_id>
<wp:comment_author><![CDATA[niquola]]></wp:comment_author>
<wp:comment_author_email>niquola@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>188.134.48.9</wp:comment_author_IP>
<wp:comment_date>2011-10-05 01:43:25</wp:comment_date>
<wp:comment_date_gmt>2011-10-04 20:43:25</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Мы в нашем проекте написали простенький guard, который прогоняет rails_best_practices
и reek (https://github.com/kevinrutherford/reek/wiki). И постепенно рефакторим.

rails_best_practices не особо многословен, но его почти всегда стоит послушаться.
reek =&gt; делает ваш код еще лучше ( тока стоит предварительно познакомиться с каталогом его запашков)

если знаете еще интересные метрики =&gt;  посоветуйте]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Virtualbox guest ssh</title>
<link>http://torqueo.net/virtualbox-guest-ssh/</link>
<pubDate>Sat, 07 Jan 2012 22:15:19 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[port-forwarding]]></category>

		<category domain="tag" nicename="port-forwarding"><![CDATA[port-forwarding]]></category>

		<category domain="tag"><![CDATA[ssh]]></category>

		<category domain="tag" nicename="ssh"><![CDATA[ssh]]></category>

		<category domain="tag"><![CDATA[ubuntu]]></category>

		<category domain="tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>

		<category domain="tag"><![CDATA[virtualbox]]></category>

		<category domain="tag" nicename="virtualbox"><![CDATA[virtualbox]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=794</guid>
<description></description>
<content:encoded><![CDATA[Всё время забываю, как делать port-forwarding в Virtualbox для Ubuntu-host в Ubuntu-guest.

Итак. Для начала в настройках сети виртуальной машины устанавливаем Network Adapter как NAT. Делаем это при выключенной виртуальной машине.

Дальше смотрим виртуалки, которые есть:

<pre><code class="shell">$ VBoxManage list vms</code></pre>

И делаем, собственно, port forwarding:

<pre><code class="shell">$ VBoxManage modifyvm "Ubuntu 11.10" --natpf1 "guestssh,tcp,,2222,,22"</code></pre>

Ubuntu 11.10 - это имя виртуальной машины, для которой пробрасываем порты.

Всё. Дальше, запускаем виртуальную машину и соединяемся с ней:

<pre><code class="shell">$ ssh -p 2222 user@localhost</code></pre>

Готово.
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>794</wp:post_id>
<wp:post_date>2012-01-08 03:15:19</wp:post_date>
<wp:post_date_gmt>2012-01-07 22:15:19</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>virtualbox-guest-ssh</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1325974520</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Информационное безобразие</title>
<link>http://torqueo.net/information-outrage/</link>
<pubDate>Thu, 12 Jan 2012 02:01:53 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[life]]></category>

		<category domain="tag" nicename="life"><![CDATA[life]]></category>

		<category domain="tag"><![CDATA[noise]]></category>

		<category domain="tag" nicename="noise"><![CDATA[noise]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=800</guid>
<description></description>
<content:encoded><![CDATA[Мы, программисты и айтишники, впрочем, как и люди остальных профессий, ежедневно получаем слишком много информации. Больше того, чем можем переварить. Не сталкивался ли ты с такой штукой, что у тебя в голове играет музыка, самая попсовая которая может быть, хотя ты и любитель рока? Эту музыку ты услышал, когда был в кафешке на обеденном перерыве. И вот она прочно обосновалась в твоих мозгах! Так же происходит с новостными сайтами, газетами, рекламой и телевидением. Однако нам не нужна эта тупая информация - все, что мы хотим узнать, мы можем узнать из книг, общения с нужными людьми, либо интернета (предварительно отключив баннеры).

Меня эта лишняя информация просто сделала уже не мной, я из тех, кто сильно реагирует на нее. Я решил так, что я отказываюсь от новостных и развлекательных сайтов (я их забанил у себя), ТВ я и так редко смотрю, если смотрю - то Дискавери. Перестал совсем брать листовки у раздавальщиков на улице, хотя раньше изредка брал. Срываю рекламу у себя у подъезда и в лифте, чтобы не видеть ее изо дня в день. Не смотрю на мониторы и рекламу в метро (слушаю плеер с закрытыми глазами). Стараюсь не обращать внимания на рекламные билборды на улицах. Перестал смотреть Ютуб. Но стал читать больше бумажных книг.

В общем, избавился от лишнего информационного шума, который ничего не дает, кроме депрессивного состояния. Какая мне разница, что где-то убили 98 человек? Че я должен что-ли говорить, оо бля, какой ужас, как так можно? Я же их не знаю, и мне вообще плевать, зачем мне эту новость знать? Это то же самое, что если бы тебе щас сказали, что на планете Ка-Пэкс убили 980 миллиардов капэксян - какие бы были твои чувства? Тут нужно применять специальный математический метод, который мой друг Иван предложил 8 лет назад - это метод наложения хуя. Как его применять - несложно разобраться самому.

Я щас руководствуюсь аналогией малых племен - у тебя в племени все хорошо, но если в племени, которое находится за 10 дней ходьбы от тебя что-то плохое случилось - зачем тебе знать об этом, запариваться и как-то переживать? Не хочу тратить свою энергию на это!

Знать нужно только о тех вещах, которые тебе нужны в твоей жизни или работе. Но об этих вещах ты должен узнать только тогда, когда сам этого захочешь.

Может, некоторые знают песню Человек-гора Валера, если не знаете - послушайте. Нужно быть разносторонне развитым человеком, однако, думаю, что нужно вести себя немного как Валера.
Я сейчас убрал от себя подальше все различные, не несущие для меня пользы шумы (реклама, ТВ, видео и т.п.) - стало немного лучше, хотя бывает иногда, по старой привычке, хочется этого шума, но всё-таки я отсекаю его и терплю.

]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>800</wp:post_id>
<wp:post_date>2012-01-12 07:01:53</wp:post_date>
<wp:post_date_gmt>2012-01-12 02:01:53</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>information-outrage</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1328008817</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>14049</wp:comment_id>
<wp:comment_author><![CDATA[inst]]></wp:comment_author>
<wp:comment_author_email>inst@gmx.com</wp:comment_author_email>
<wp:comment_author_url>http://www.inst.tk/</wp:comment_author_url>
<wp:comment_author_IP>178.216.100.137</wp:comment_author_IP>
<wp:comment_date>2012-02-06 19:34:41</wp:comment_date>
<wp:comment_date_gmt>2012-02-06 14:34:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Про математический метод - в точку :-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13145</wp:comment_id>
<wp:comment_author><![CDATA[@rezwyi]]></wp:comment_author>
<wp:comment_author_email>rezwyi@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>80.244.35.122</wp:comment_author_IP>
<wp:comment_date>2012-01-12 10:28:02</wp:comment_date>
<wp:comment_date_gmt>2012-01-12 05:28:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Привет. Спасибо за статью, понравилась. Во многом согласен.

Особенно понравился математический метод, нужно почаще его применять :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13507</wp:comment_id>
<wp:comment_author><![CDATA[densomart]]></wp:comment_author>
<wp:comment_author_email>art500@mail.ru</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>2.60.33.229</wp:comment_author_IP>
<wp:comment_date>2012-01-19 21:55:59</wp:comment_date>
<wp:comment_date_gmt>2012-01-19 16:55:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Согласен. Феноменально, но со мной произошли точно те же преобразования, за последний год ))

Но мне пока не подходит мат метод. Окружающий мир всетаки слишком мне дорог, что бы так поступать с ним. 

Мне порекомендовал один хороший человек, заниматься только тем, на что можешь - влиять.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13449</wp:comment_id>
<wp:comment_author><![CDATA[Saint_Byte]]></wp:comment_author>
<wp:comment_author_email>admin@dotsb.net.ru</wp:comment_author_email>
<wp:comment_author_url>http://ural.im</wp:comment_author_url>
<wp:comment_author_IP>92.242.18.146</wp:comment_author_IP>
<wp:comment_date>2012-01-16 10:29:30</wp:comment_date>
<wp:comment_date_gmt>2012-01-16 05:29:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Вен польностью с тобой согласен , новости они не такое зло - просто хочется читать хорошие новости. Дефицит сейчас хороших новостей.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13513</wp:comment_id>
<wp:comment_author><![CDATA[Ouch!]]></wp:comment_author>
<wp:comment_author_email>demerest@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://</wp:comment_author_url>
<wp:comment_author_IP>85.12.254.126</wp:comment_author_IP>
<wp:comment_date>2012-01-20 08:38:10</wp:comment_date>
<wp:comment_date_gmt>2012-01-20 03:38:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Спасибо. Вот это интересная мысль - заниматься только тем, на что можешь влиять.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>13507</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Кое-что из моей работы</title>
<link>http://torqueo.net/some-of-my-work/</link>
<pubDate>Tue, 17 Jan 2012 17:10:04 +0000</pubDate>
<dc:creator><![CDATA[Ouch!]]></dc:creator>

		<category><![CDATA[Без рубрики]]></category>

		<category domain="category" nicename="uncategorized"><![CDATA[Без рубрики]]></category>

		<category domain="tag"><![CDATA[ActiveRecord]]></category>

		<category domain="tag" nicename="activerecord"><![CDATA[ActiveRecord]]></category>

		<category domain="tag"><![CDATA[counter_cache]]></category>

		<category domain="tag" nicename="counter_cache"><![CDATA[counter_cache]]></category>

		<category domain="tag"><![CDATA[default_scope]]></category>

		<category domain="tag" nicename="default_scope"><![CDATA[default_scope]]></category>

		<category domain="tag"><![CDATA[rails]]></category>

		<category domain="tag" nicename="rails"><![CDATA[rails]]></category>

		<category domain="tag"><![CDATA[rails 3]]></category>

		<category domain="tag" nicename="rails-3"><![CDATA[rails 3]]></category>

		<category domain="tag"><![CDATA[ruby]]></category>

		<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>

		<category domain="tag"><![CDATA[state_machine]]></category>

		<category domain="tag" nicename="state_machine"><![CDATA[state_machine]]></category>

		<category domain="tag"><![CDATA[unscoped]]></category>

		<category domain="tag" nicename="unscoped"><![CDATA[unscoped]]></category>

<guid isPermaLink="false">http://torqueo.net/?p=803</guid>
<description></description>
<content:encoded><![CDATA[Мне тут понадобилось написать функциональность для сайта, которая представляет из себя Консультантов, которым можно задавать вопросы.

О чем я хочу рассказать:
<ul>
	<li>Как использовать state_machine в моделях ActiveRecord</li>
	<li>Как использовать counter_cache "с условиями"</li>
</ul>
Итак, распишем задачу более подробно:
<ul>
	<li>Будет две модели, Consultor и ConsultorQuestion</li>
	<li>ConsultorQuestion может быть опубликованным и неопубликованным. Используем<a href="https://github.com/pluginaweek/state_machine" rel="nofollow"> state_machine</a>.</li>
	<li>По-умолчанию показываются только опубликованные вопросы. Используем default_scope.</li>
	<li>У Consultor будет счетчик <a href="http://railscasts.com/episodes/23-counter-cache-column?view=asciicast" rel="nofollow">counter_cache</a>, с количеством <em>опубликованных</em> вопросов</li>
</ul>
Так как контроллеры никому особо не интересны, я их не буду описывать. Начну сразу с моделей.

Модель Consultor (консультант):
<pre><code># Консультант наследуется от Пользователя (STI).
class Consultor &lt; User
  has_many :questions, :class_name =&gt; 'ConsultorQuestion', :dependent =&gt; :destroy

  default_scope where('type = ?', 'Consultor')
end</code></pre>
Модель Consultor использует STI (<a href="http://rubydev.ru/2011/07/rdr3t-single-table-inheritance-rails/" rel="nofollow">Single Table Inheritance</a>) - наследуется от модели User, так как консультант это такой же пользователь, как и все остальные. Я создал отдельную модель для консультантов потому, что у консультантов есть вопросы (has_many :questions), а у обычных пользователей их нет. Незачем засорять модель User ненужными связями.

Я также определил default_scope, чтобы всегда по-умолчанию выбирались только консультанты, исключая других пользователей. С default_scope сразу начинаются проблемы, так как этот скоуп добавляет условие в каждый SQL-запрос к таблице consultors. И счетчик counter_cache перестаёт работать. Но об этом позже.
<h3>Об использовании state_machine</h3>
Давайте посмотрим на модель ConsultorQuestion. Я приведу сразу полную и законченную версию модели, конечно убрав оттуда то, что к делу не относится:
<pre><code>class ConsultorQuestion &lt; ActiveRecord::Base
  state_machine :state, :initial =&gt; :unpublished do
    # Состояния
    state :unpublished
    state :published

    # Коллбэки переходов
    after_transition :unpublished =&gt; :published,   :do =&gt; :inc_counter_cache
    after_transition :published   =&gt; :unpublished, :do =&gt; :dec_counter_cache

    # События
    event :publish do
      transition :unpublished =&gt; :published
    end

    event :unpublish do
      transition :published =&gt; :unpublished
    end
  end

  # Перед удалением снимаем с публикации. Если состояние изменится
  # на unpublished, то автоматически произойдет декремент counter_cache
  before_destroy { unpublish! }

  belongs_to :consultor
  attr_protected :state, :consultor_id

  validates :questioner_name, :questioner_email, :question,  :presence =&gt; true
  default_scope with_state(:published).order('created_at DESC')

  def inc_counter_cache
    Consultor.unscoped.increment_counter('questions_count', self.consultor.id)
  end

  def dec_counter_cache
    Consultor.unscoped.decrement_counter('questions_count', self.consultor.id)
  end
end</code></pre>
Первое, на что обращаешь внимание, это <a href="https://github.com/pluginaweek/state_machine" rel="nofollow">state_machine</a>. У вопроса могут быть два состояния: <em>опубликован</em> или <em>не опубликован</em>. state_machine очень облегчает переходы от состояния к состоянию, хотя это можно сделать и без неё. У вас получится странный код с кучей условий. Я попытаюсь изобразить, что может получиться, если не использовать state_machine:
<pre><code>class ConsultorQuestion &lt; ActiveRecord::Base
  scope :published, where('state = ?', :published)
  scope :unpublished, where('state = ?', :unpublished)

  default_scope published.order('created_at DESC')

  before_save   :set_counter_cache
  after_destroy :set_counter_cache_for_destroy

  belongs_to :consultor
  attr_protected :state, :consultor_id

  validates :questioner_name, :questioner_email, :question,  :presence =&gt; true

  def published?
    state == 'published'
  end

  def unpublished?
    state == 'unpublished'
  end

  def state_was?(value)
    state_was == value.to_s
  end

  def set_counter_cache
    # Для добавляемых записей со статусом published
    if new_record? &amp;&amp; published?
      # инкрементируем счетчик
      method = :increment_counter
    end

    # Для изменяемых записей.
    # Если запись была снята с публикации, декрементируем счетчик
    # Здесь можно воспользоваться aasm и переходом состояния (transition)
    if persisted? &amp;&amp; state_was?('published') &amp;&amp; unpublished?
      method = :decrement_counter
    end

    # Если запись была опубликована, декрементируем счетчик
    if persisted? &amp;&amp; state_was?('unpublished') &amp;&amp; published?
      method = :increment_counter
    end

    # Обновляем счетчик
    Consultor.unscoped.send(method, 'questions_count', self.consultor.id) if method
  end

  # Для удаляемых записей, которые были опубликованы
  def set_counter_cache_for_destroy
    Consultor.unscoped.decrement_counter('questions_count', self.consultor.id) if published?
  end
end</code></pre>
Ужасно, не правда ли? Зацените, сколько условий в коде и сравните это с предыдущим листингом, где нет ни одного условия и все реализуется при помощи коллбэков! В этом и есть сила state_machine - в вызове коллбэков при смене состояния. Чтобы сменить состояние, нам нужно всего лишь вызвать событие publish! или unpublish! в нужный момент. В нашем же случае мы используем коллбэки чтобы менять значение счетчика counter_cache. Помните, в условии было сказано, что нам нужно подсчитывать только опубликованные вопросы?
<h3>О счётчике counter_cache</h3>
Вы уже заметили в коде вызовы <code>Consultor.unscoped.decrement_counter</code> и <code>Consultor.unscoped.increment_counter</code>. Так мы меняем значение счетчика counter_cache вручную. Почему? Это стало необходимо потому, что мы используем default_scope в модели и этот скоуп добавляет своё условие к запросу, который обновляет счетчик counter_cache. В результате, счетчик не то что не обновляется, а даже происходит ошибка при выполнении SQL-запроса. Чтобы это исправить, мы вызываем через unscoped стандартные методы <a rel="nofollow" href="http://apidock.com/rails/ActiveRecord/Base/increment_counter/class">increment_counter</a> и <a rel="nofollow" href="http://apidock.com/rails/ActiveRecord/Base/decrement_counter/class">decrement_counter</a>. Unscoped отменяет действие default_scope и запрос выполняется без ошибки.

Еще хочется заметить, что метод sizе берет значение из колонки counter_cache. Чтобы получить реальное количество записей в таблице, можно использовать метод length или метод count.

<h3>Немного о default_scope</h3>
Стоит с осторожностью пользоваться default_scope и не забывать, что он добавляет условие к каждому запросу. Поэтому, что-то может сломаться или работать не так, как вы ожидаете. Но зато, default_scope помогает улучшить безопасность вашего приложения, помогает защитить данные, которые требуют защиты от случайного просмотра.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>803</wp:post_id>
<wp:post_date>2012-01-17 22:10:04</wp:post_date>
<wp:post_date_gmt>2012-01-17 17:10:04</wp:post_date_gmt>
<wp:comment_status>open</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>some-of-my-work</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1326860678</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>13476</wp:comment_id>
<wp:comment_author><![CDATA[use_rifle]]></wp:comment_author>
<wp:comment_author_email>MikDiet@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://rusrails.ru/</wp:comment_author_url>
<wp:comment_author_IP>95.188.53.222</wp:comment_author_IP>
<wp:comment_date>2012-01-18 09:52:51</wp:comment_date>
<wp:comment_date_gmt>2012-01-18 04:52:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Использовал гем state_machine в парочке проектов, в последнем решил от него отказаться.

Напрягает, что он при смене состояния сразу же сохраняет модель, это порой нарушает логику, приходится постоянно про это помнить, в итоге код получается еще более странным и костлявым.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>13519</wp:comment_id>
<wp:comment_author><![CDATA[Poul]]></wp:comment_author>
<wp:comment_author_email>poul@poul.poul</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>178.123.230.199</wp:comment_author_IP>
<wp:comment_date>2012-01-20 16:34:08</wp:comment_date>
<wp:comment_date_gmt>2012-01-20 11:34:08</wp:comment_date_gmt>
<wp:comment_content><![CDATA[&gt;&gt; Напрягает, что он при смене состояния сразу же сохраняет модель, это порой нарушает логику, приходится постоянно про это помнить, в итоге код получается еще более странным и костлявым.

К тому же, в сложных моделях со сменой сразу нескольких состояний, SM сильно роняет производительность. Плюс сложно держать объект валидным, если для разных состояний нужно делать разные валидаторы. Так же решили от него отказаться на критичном к производительности направлении проекта. Хотя, в конкретно нашем случае архитектура данной части приложения тоже не самая удачная.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
</channel>
</rss>
