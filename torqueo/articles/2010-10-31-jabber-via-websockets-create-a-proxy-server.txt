title: "Jabber via Websockets: создаём прокси-сервер"
tags:
- ejabberd
- jabber
- proxy
- psi
- ruby
- websocket
- xmpp

<body>
<p>Продолжу размышления по моей <a href="http://torqueo.net/im-going-to-write-a-client-library-for-working-with-xmpp-on-js/">предыдущей заметке</a> и попытаюсь что-нибудь написать.

Я посмотрел существующие Jabber-серверы и ни у одного не обнаружил поддержку вебсокетов. Думаю, это просто вопрос времени, когда разработчики допишут поддержку вебсокетов в свои jabber-серверы. Можно написать свой джаббер-сервер, если совсем делать нефиг, можно ждать, когда разработчики добавят поддержку вебсокетов. Но мы не будем их ждать и сделаем эту поддержку сами. Но как? Первое что приходит в голову - создать прокси-сервер, который будет уметь получать вебсокет-запросы и перенаправлять их jabber-серверу.

Для тестов я поставил jabber-сервер <a href="http://www.ejabberd.im/">ejabberd</a> на локальную машину, хотя можно было воспользоваться и многочисленными узлами, типа jabber.ru. Также я поставил клиент <a href="http://psi-im.org/">Psi</a> и зарегистрировался при помощи него на локальном сервере.

Итак. Давайте для начала создадим html5 документ, который будет посылать запрос на наш jabber-прокси-сервер:
</p>
<div class="gist-wrapper"><script src="https://gist.github.com/1768858.js?file=gistfile1.html"></script></div>
Как видно из примера, мы будем посылать кусок xml на сервер (начало xml-потока), что означает, что мы готовы авторизоваться на сервере. В ответ jabber-сервер должен нам вернуть некий ответ, в данном случае - список поддерживаемых механизмов аутентификации на сервере. Мы просто выведем полученный с сервера ответ при помощи js-функции alert() на экран. Этого нам будет достаточно,чтобы убедиться, что наш прокси работает.

Теперь приведу код jabber-via-websocket сервера на Ruby:
<div class="gist-wrapper"><script src="https://gist.github.com/1768859.js?file=gistfile1.rb"></script></div>
Не буду подробно описывать код. Скажу лишь, что он перенаправляет все поступившие запросы с 6222 порта на порт 5222 (стандартный порт jabber).
Остается запустить из консоли наш прокси-сервер (ruby proxy.rb) и html5 пример в google chrome и убедиться, что все работает. Мы должны увидеть алерт со следующим содержимым:
<div class="gist-wrapper"><script src="https://gist.github.com/1768860.js?file=gistfile1."></script></div>
Это был первый шаг в сторону создания инструмента, позволяющего общаться через jabber прямо с веб-страницы. Продолжение следует.</body>
