title: "Правильный перехват исключений уровня контроллера в Rails"
tags:
- exceptions
- rails
- rails-3

<body>
<p>Как красиво обработать исключение в контроллере Rails? Ну это все знают:

</p>
<div class="gist-wrapper"><script src="https://gist.github.com/1768890.js?file=gistfile1.rb"></script></div>

Отлично. А что, если мы захотим вдобавок обработать все остальные исключения, чтобы показать красивую 500-ю страничку на продакшене? Сразу приходит мысль написать так:

<div class="gist-wrapper"><script src="https://gist.github.com/1768891.js?file=gistfile1.rb"></script></div>

Тут идея в том, что нам не нужно обрабатывать каждое исключение в отдельности, а так как все исключения наследуются от <em>Exception</em>, то мы можем обработать именно Exception и успокоиться. Но не тут-то было.

Давайте снова взглянем на то, что у нас получилось:

<div class="gist-wrapper"><script src="https://gist.github.com/1768894.js?file=gistfile1.rb"></script></div>

На первый взгляд все хорошо. Но этот код не будет работать так, как от него ожидается. Дело в том, что исключение <em>ActiveRecord::RecordNotFound</em> наследуется от <em>Exception</em>, поэтому последнее объявление <em>rescue_from</em> будет срабатывать и для него, таким образом, при возникновении любого исключения, будет вызываться метод <em>:internal_error</em>, вызов которого будет перекрывать вызов <em>:page_404</em>. Так мы никогда не увидим страничку 404 :)

Как тогда правильно обрабатывать исключения? Я пришел к такому решению:

<div class="gist-wrapper"><script src="https://gist.github.com/1768895.js?file=gistfile1.rb"></script></div>

Тут всё понятно из примера. Я просто добавил ветвление при обработке исключений, чтобы избежать неоднозначностей, как во втором примере. В комментариех правильно заметили, что можно поместить перехват исключения Exception в самый верх, однако это не спасет вас, если ваш коллега по незнанию добавит перехват нужного ему эксепшена еще выше. Поэтому я выступаю именно за ветвление, как наиболее очевидное и понятное решение.

Кстати, напомню, что в Rails 3 <a href="/handling-action-controller-routing-error-in-rails-3/">перехватить исключение роутера ActionController::RoutingError при помощи rescue_from пока что невозможно</a>.</body>
